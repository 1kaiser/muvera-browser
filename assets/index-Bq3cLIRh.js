(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const o of i.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&s(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();var CT={value:()=>{}};function g0(){for(var e=0,r=arguments.length,t={},s;e<r;++e){if(!(s=arguments[e]+"")||s in t||/[\s.]/.test(s))throw new Error("illegal type: "+s);t[s]=[]}return new ka(t)}function ka(e){this._=e}function ST(e,r){return e.trim().split(/^|\s+/).map(function(t){var s="",n=t.indexOf(".");if(n>=0&&(s=t.slice(n+1),t=t.slice(0,n)),t&&!r.hasOwnProperty(t))throw new Error("unknown type: "+t);return{type:t,name:s}})}ka.prototype=g0.prototype={constructor:ka,on:function(e,r){var t=this._,s=ST(e+"",t),n,i=-1,o=s.length;if(arguments.length<2){for(;++i<o;)if((n=(e=s[i]).type)&&(n=$T(t[n],e.name)))return n;return}if(r!=null&&typeof r!="function")throw new Error("invalid callback: "+r);for(;++i<o;)if(n=(e=s[i]).type)t[n]=b_(t[n],e.name,r);else if(r==null)for(n in t)t[n]=b_(t[n],e.name,null);return this},copy:function(){var e={},r=this._;for(var t in r)e[t]=r[t].slice();return new ka(e)},call:function(e,r){if((n=arguments.length-2)>0)for(var t=new Array(n),s=0,n,i;s<n;++s)t[s]=arguments[s+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(i=this._[e],s=0,n=i.length;s<n;++s)i[s].value.apply(r,t)},apply:function(e,r,t){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var s=this._[e],n=0,i=s.length;n<i;++n)s[n].value.apply(r,t)}};function $T(e,r){for(var t=0,s=e.length,n;t<s;++t)if((n=e[t]).name===r)return n.value}function b_(e,r,t){for(var s=0,n=e.length;s<n;++s)if(e[s].name===r){e[s]=CT,e=e.slice(0,s).concat(e.slice(s+1));break}return t!=null&&e.push({name:r,value:t}),e}var vu="http://www.w3.org/1999/xhtml";const M_={svg:"http://www.w3.org/2000/svg",xhtml:vu,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function Xa(e){var r=e+="",t=r.indexOf(":");return t>=0&&(r=e.slice(0,t))!=="xmlns"&&(e=e.slice(t+1)),M_.hasOwnProperty(r)?{space:M_[r],local:e}:e}function kT(e){return function(){var r=this.ownerDocument,t=this.namespaceURI;return t===vu&&r.documentElement.namespaceURI===vu?r.createElement(e):r.createElementNS(t,e)}}function IT(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function w0(e){var r=Xa(e);return(r.local?IT:kT)(r)}function AT(){}function qu(e){return e==null?AT:function(){return this.querySelector(e)}}function FT(e){typeof e!="function"&&(e=qu(e));for(var r=this._groups,t=r.length,s=new Array(t),n=0;n<t;++n)for(var i=r[n],o=i.length,a=s[n]=new Array(o),l,c,p=0;p<o;++p)(l=i[p])&&(c=e.call(l,l.__data__,p,i))&&("__data__"in l&&(c.__data__=l.__data__),a[p]=c);return new ts(s,this._parents)}function DT(e){return e==null?[]:Array.isArray(e)?e:Array.from(e)}function OT(){return[]}function y0(e){return e==null?OT:function(){return this.querySelectorAll(e)}}function LT(e){return function(){return DT(e.apply(this,arguments))}}function zT(e){typeof e=="function"?e=LT(e):e=y0(e);for(var r=this._groups,t=r.length,s=[],n=[],i=0;i<t;++i)for(var o=r[i],a=o.length,l,c=0;c<a;++c)(l=o[c])&&(s.push(e.call(l,l.__data__,c,o)),n.push(l));return new ts(s,n)}function b0(e){return function(){return this.matches(e)}}function M0(e){return function(r){return r.matches(e)}}var BT=Array.prototype.find;function RT(e){return function(){return BT.call(this.children,e)}}function NT(){return this.firstElementChild}function jT(e){return this.select(e==null?NT:RT(typeof e=="function"?e:M0(e)))}var VT=Array.prototype.filter;function UT(){return Array.from(this.children)}function WT(e){return function(){return VT.call(this.children,e)}}function GT(e){return this.selectAll(e==null?UT:WT(typeof e=="function"?e:M0(e)))}function KT(e){typeof e!="function"&&(e=b0(e));for(var r=this._groups,t=r.length,s=new Array(t),n=0;n<t;++n)for(var i=r[n],o=i.length,a=s[n]=[],l,c=0;c<o;++c)(l=i[c])&&e.call(l,l.__data__,c,i)&&a.push(l);return new ts(s,this._parents)}function v0(e){return new Array(e.length)}function qT(){return new ts(this._enter||this._groups.map(v0),this._parents)}function za(e,r){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=r}za.prototype={constructor:za,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,r){return this._parent.insertBefore(e,r)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};function HT(e){return function(){return e}}function QT(e,r,t,s,n,i){for(var o=0,a,l=r.length,c=i.length;o<c;++o)(a=r[o])?(a.__data__=i[o],s[o]=a):t[o]=new za(e,i[o]);for(;o<l;++o)(a=r[o])&&(n[o]=a)}function XT(e,r,t,s,n,i,o){var a,l,c=new Map,p=r.length,d=i.length,u=new Array(p),_;for(a=0;a<p;++a)(l=r[a])&&(u[a]=_=o.call(l,l.__data__,a,r)+"",c.has(_)?n[a]=l:c.set(_,l));for(a=0;a<d;++a)_=o.call(e,i[a],a,i)+"",(l=c.get(_))?(s[a]=l,l.__data__=i[a],c.delete(_)):t[a]=new za(e,i[a]);for(a=0;a<p;++a)(l=r[a])&&c.get(u[a])===l&&(n[a]=l)}function YT(e){return e.__data__}function JT(e,r){if(!arguments.length)return Array.from(this,YT);var t=r?XT:QT,s=this._parents,n=this._groups;typeof e!="function"&&(e=HT(e));for(var i=n.length,o=new Array(i),a=new Array(i),l=new Array(i),c=0;c<i;++c){var p=s[c],d=n[c],u=d.length,_=ZT(e.call(p,p&&p.__data__,c,s)),f=_.length,w=a[c]=new Array(f),I=o[c]=new Array(f),M=l[c]=new Array(u);t(p,d,w,I,M,_,r);for(var y=0,$=0,v,T;y<f;++y)if(v=w[y]){for(y>=$&&($=y+1);!(T=I[$])&&++$<f;);v._next=T||null}}return o=new ts(o,s),o._enter=a,o._exit=l,o}function ZT(e){return typeof e=="object"&&"length"in e?e:Array.from(e)}function e1(){return new ts(this._exit||this._groups.map(v0),this._parents)}function t1(e,r,t){var s=this.enter(),n=this,i=this.exit();return typeof e=="function"?(s=e(s),s&&(s=s.selection())):s=s.append(e+""),r!=null&&(n=r(n),n&&(n=n.selection())),t==null?i.remove():t(i),s&&n?s.merge(n).order():n}function r1(e){for(var r=e.selection?e.selection():e,t=this._groups,s=r._groups,n=t.length,i=s.length,o=Math.min(n,i),a=new Array(n),l=0;l<o;++l)for(var c=t[l],p=s[l],d=c.length,u=a[l]=new Array(d),_,f=0;f<d;++f)(_=c[f]||p[f])&&(u[f]=_);for(;l<n;++l)a[l]=t[l];return new ts(a,this._parents)}function s1(){for(var e=this._groups,r=-1,t=e.length;++r<t;)for(var s=e[r],n=s.length-1,i=s[n],o;--n>=0;)(o=s[n])&&(i&&o.compareDocumentPosition(i)^4&&i.parentNode.insertBefore(o,i),i=o);return this}function n1(e){e||(e=i1);function r(d,u){return d&&u?e(d.__data__,u.__data__):!d-!u}for(var t=this._groups,s=t.length,n=new Array(s),i=0;i<s;++i){for(var o=t[i],a=o.length,l=n[i]=new Array(a),c,p=0;p<a;++p)(c=o[p])&&(l[p]=c);l.sort(r)}return new ts(n,this._parents).order()}function i1(e,r){return e<r?-1:e>r?1:e>=r?0:NaN}function o1(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this}function a1(){return Array.from(this)}function l1(){for(var e=this._groups,r=0,t=e.length;r<t;++r)for(var s=e[r],n=0,i=s.length;n<i;++n){var o=s[n];if(o)return o}return null}function c1(){let e=0;for(const r of this)++e;return e}function u1(){return!this.node()}function d1(e){for(var r=this._groups,t=0,s=r.length;t<s;++t)for(var n=r[t],i=0,o=n.length,a;i<o;++i)(a=n[i])&&e.call(a,a.__data__,i,n);return this}function p1(e){return function(){this.removeAttribute(e)}}function h1(e){return function(){this.removeAttributeNS(e.space,e.local)}}function m1(e,r){return function(){this.setAttribute(e,r)}}function f1(e,r){return function(){this.setAttributeNS(e.space,e.local,r)}}function _1(e,r){return function(){var t=r.apply(this,arguments);t==null?this.removeAttribute(e):this.setAttribute(e,t)}}function g1(e,r){return function(){var t=r.apply(this,arguments);t==null?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,t)}}function w1(e,r){var t=Xa(e);if(arguments.length<2){var s=this.node();return t.local?s.getAttributeNS(t.space,t.local):s.getAttribute(t)}return this.each((r==null?t.local?h1:p1:typeof r=="function"?t.local?g1:_1:t.local?f1:m1)(t,r))}function x0(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function y1(e){return function(){this.style.removeProperty(e)}}function b1(e,r,t){return function(){this.style.setProperty(e,r,t)}}function M1(e,r,t){return function(){var s=r.apply(this,arguments);s==null?this.style.removeProperty(e):this.style.setProperty(e,s,t)}}function v1(e,r,t){return arguments.length>1?this.each((r==null?y1:typeof r=="function"?M1:b1)(e,r,t??"")):gi(this.node(),e)}function gi(e,r){return e.style.getPropertyValue(r)||x0(e).getComputedStyle(e,null).getPropertyValue(r)}function x1(e){return function(){delete this[e]}}function T1(e,r){return function(){this[e]=r}}function E1(e,r){return function(){var t=r.apply(this,arguments);t==null?delete this[e]:this[e]=t}}function P1(e,r){return arguments.length>1?this.each((r==null?x1:typeof r=="function"?E1:T1)(e,r)):this.node()[e]}function T0(e){return e.trim().split(/^|\s+/)}function Hu(e){return e.classList||new E0(e)}function E0(e){this._node=e,this._names=T0(e.getAttribute("class")||"")}E0.prototype={add:function(e){var r=this._names.indexOf(e);r<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var r=this._names.indexOf(e);r>=0&&(this._names.splice(r,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};function P0(e,r){for(var t=Hu(e),s=-1,n=r.length;++s<n;)t.add(r[s])}function C0(e,r){for(var t=Hu(e),s=-1,n=r.length;++s<n;)t.remove(r[s])}function C1(e){return function(){P0(this,e)}}function S1(e){return function(){C0(this,e)}}function $1(e,r){return function(){(r.apply(this,arguments)?P0:C0)(this,e)}}function k1(e,r){var t=T0(e+"");if(arguments.length<2){for(var s=Hu(this.node()),n=-1,i=t.length;++n<i;)if(!s.contains(t[n]))return!1;return!0}return this.each((typeof r=="function"?$1:r?C1:S1)(t,r))}function I1(){this.textContent=""}function A1(e){return function(){this.textContent=e}}function F1(e){return function(){var r=e.apply(this,arguments);this.textContent=r??""}}function D1(e){return arguments.length?this.each(e==null?I1:(typeof e=="function"?F1:A1)(e)):this.node().textContent}function O1(){this.innerHTML=""}function L1(e){return function(){this.innerHTML=e}}function z1(e){return function(){var r=e.apply(this,arguments);this.innerHTML=r??""}}function B1(e){return arguments.length?this.each(e==null?O1:(typeof e=="function"?z1:L1)(e)):this.node().innerHTML}function R1(){this.nextSibling&&this.parentNode.appendChild(this)}function N1(){return this.each(R1)}function j1(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function V1(){return this.each(j1)}function U1(e){var r=typeof e=="function"?e:w0(e);return this.select(function(){return this.appendChild(r.apply(this,arguments))})}function W1(){return null}function G1(e,r){var t=typeof e=="function"?e:w0(e),s=r==null?W1:typeof r=="function"?r:qu(r);return this.select(function(){return this.insertBefore(t.apply(this,arguments),s.apply(this,arguments)||null)})}function K1(){var e=this.parentNode;e&&e.removeChild(this)}function q1(){return this.each(K1)}function H1(){var e=this.cloneNode(!1),r=this.parentNode;return r?r.insertBefore(e,this.nextSibling):e}function Q1(){var e=this.cloneNode(!0),r=this.parentNode;return r?r.insertBefore(e,this.nextSibling):e}function X1(e){return this.select(e?Q1:H1)}function Y1(e){return arguments.length?this.property("__data__",e):this.node().__data__}function J1(e){return function(r){e.call(this,r,this.__data__)}}function Z1(e){return e.trim().split(/^|\s+/).map(function(r){var t="",s=r.indexOf(".");return s>=0&&(t=r.slice(s+1),r=r.slice(0,s)),{type:r,name:t}})}function eE(e){return function(){var r=this.__on;if(r){for(var t=0,s=-1,n=r.length,i;t<n;++t)i=r[t],(!e.type||i.type===e.type)&&i.name===e.name?this.removeEventListener(i.type,i.listener,i.options):r[++s]=i;++s?r.length=s:delete this.__on}}}function tE(e,r,t){return function(){var s=this.__on,n,i=J1(r);if(s){for(var o=0,a=s.length;o<a;++o)if((n=s[o]).type===e.type&&n.name===e.name){this.removeEventListener(n.type,n.listener,n.options),this.addEventListener(n.type,n.listener=i,n.options=t),n.value=r;return}}this.addEventListener(e.type,i,t),n={type:e.type,name:e.name,value:r,listener:i,options:t},s?s.push(n):this.__on=[n]}}function rE(e,r,t){var s=Z1(e+""),n,i=s.length,o;if(arguments.length<2){var a=this.node().__on;if(a){for(var l=0,c=a.length,p;l<c;++l)for(n=0,p=a[l];n<i;++n)if((o=s[n]).type===p.type&&o.name===p.name)return p.value}return}for(a=r?tE:eE,n=0;n<i;++n)this.each(a(s[n],r,t));return this}function S0(e,r,t){var s=x0(e),n=s.CustomEvent;typeof n=="function"?n=new n(r,t):(n=s.document.createEvent("Event"),t?(n.initEvent(r,t.bubbles,t.cancelable),n.detail=t.detail):n.initEvent(r,!1,!1)),e.dispatchEvent(n)}function sE(e,r){return function(){return S0(this,e,r)}}function nE(e,r){return function(){return S0(this,e,r.apply(this,arguments))}}function iE(e,r){return this.each((typeof r=="function"?nE:sE)(e,r))}function*oE(){for(var e=this._groups,r=0,t=e.length;r<t;++r)for(var s=e[r],n=0,i=s.length,o;n<i;++n)(o=s[n])&&(yield o)}var $0=[null];function ts(e,r){this._groups=e,this._parents=r}function Mo(){return new ts([[document.documentElement]],$0)}function aE(){return this}ts.prototype=Mo.prototype={constructor:ts,select:FT,selectAll:zT,selectChild:jT,selectChildren:GT,filter:KT,data:JT,enter:qT,exit:e1,join:t1,merge:r1,selection:aE,order:s1,sort:n1,call:o1,nodes:a1,node:l1,size:c1,empty:u1,each:d1,attr:w1,style:v1,property:P1,classed:k1,text:D1,html:B1,raise:N1,lower:V1,append:U1,insert:G1,remove:q1,clone:X1,datum:Y1,on:rE,dispatch:iE,[Symbol.iterator]:oE};function ht(e){return typeof e=="string"?new ts([[document.querySelector(e)]],[document.documentElement]):new ts([[e]],$0)}function Qu(e,r,t){e.prototype=r.prototype=t,t.constructor=e}function k0(e,r){var t=Object.create(e.prototype);for(var s in r)t[s]=r[s];return t}function vo(){}var mo=.7,Ba=1/mo,_i="\\s*([+-]?\\d+)\\s*",fo="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",Rs="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",lE=/^#([0-9a-f]{3,8})$/,cE=new RegExp(`^rgb\\(${_i},${_i},${_i}\\)$`),uE=new RegExp(`^rgb\\(${Rs},${Rs},${Rs}\\)$`),dE=new RegExp(`^rgba\\(${_i},${_i},${_i},${fo}\\)$`),pE=new RegExp(`^rgba\\(${Rs},${Rs},${Rs},${fo}\\)$`),hE=new RegExp(`^hsl\\(${fo},${Rs},${Rs}\\)$`),mE=new RegExp(`^hsla\\(${fo},${Rs},${Rs},${fo}\\)$`),v_={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Qu(vo,_o,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:x_,formatHex:x_,formatHex8:fE,formatHsl:_E,formatRgb:T_,toString:T_});function x_(){return this.rgb().formatHex()}function fE(){return this.rgb().formatHex8()}function _E(){return I0(this).formatHsl()}function T_(){return this.rgb().formatRgb()}function _o(e){var r,t;return e=(e+"").trim().toLowerCase(),(r=lE.exec(e))?(t=r[1].length,r=parseInt(r[1],16),t===6?E_(r):t===3?new Hr(r>>8&15|r>>4&240,r>>4&15|r&240,(r&15)<<4|r&15,1):t===8?ha(r>>24&255,r>>16&255,r>>8&255,(r&255)/255):t===4?ha(r>>12&15|r>>8&240,r>>8&15|r>>4&240,r>>4&15|r&240,((r&15)<<4|r&15)/255):null):(r=cE.exec(e))?new Hr(r[1],r[2],r[3],1):(r=uE.exec(e))?new Hr(r[1]*255/100,r[2]*255/100,r[3]*255/100,1):(r=dE.exec(e))?ha(r[1],r[2],r[3],r[4]):(r=pE.exec(e))?ha(r[1]*255/100,r[2]*255/100,r[3]*255/100,r[4]):(r=hE.exec(e))?S_(r[1],r[2]/100,r[3]/100,1):(r=mE.exec(e))?S_(r[1],r[2]/100,r[3]/100,r[4]):v_.hasOwnProperty(e)?E_(v_[e]):e==="transparent"?new Hr(NaN,NaN,NaN,0):null}function E_(e){return new Hr(e>>16&255,e>>8&255,e&255,1)}function ha(e,r,t,s){return s<=0&&(e=r=t=NaN),new Hr(e,r,t,s)}function gE(e){return e instanceof vo||(e=_o(e)),e?(e=e.rgb(),new Hr(e.r,e.g,e.b,e.opacity)):new Hr}function xu(e,r,t,s){return arguments.length===1?gE(e):new Hr(e,r,t,s??1)}function Hr(e,r,t,s){this.r=+e,this.g=+r,this.b=+t,this.opacity=+s}Qu(Hr,xu,k0(vo,{brighter(e){return e=e==null?Ba:Math.pow(Ba,e),new Hr(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=e==null?mo:Math.pow(mo,e),new Hr(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new Hr(Bn(this.r),Bn(this.g),Bn(this.b),Ra(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:P_,formatHex:P_,formatHex8:wE,formatRgb:C_,toString:C_}));function P_(){return`#${Ln(this.r)}${Ln(this.g)}${Ln(this.b)}`}function wE(){return`#${Ln(this.r)}${Ln(this.g)}${Ln(this.b)}${Ln((isNaN(this.opacity)?1:this.opacity)*255)}`}function C_(){const e=Ra(this.opacity);return`${e===1?"rgb(":"rgba("}${Bn(this.r)}, ${Bn(this.g)}, ${Bn(this.b)}${e===1?")":`, ${e})`}`}function Ra(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function Bn(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function Ln(e){return e=Bn(e),(e<16?"0":"")+e.toString(16)}function S_(e,r,t,s){return s<=0?e=r=t=NaN:t<=0||t>=1?e=r=NaN:r<=0&&(e=NaN),new Ts(e,r,t,s)}function I0(e){if(e instanceof Ts)return new Ts(e.h,e.s,e.l,e.opacity);if(e instanceof vo||(e=_o(e)),!e)return new Ts;if(e instanceof Ts)return e;e=e.rgb();var r=e.r/255,t=e.g/255,s=e.b/255,n=Math.min(r,t,s),i=Math.max(r,t,s),o=NaN,a=i-n,l=(i+n)/2;return a?(r===i?o=(t-s)/a+(t<s)*6:t===i?o=(s-r)/a+2:o=(r-t)/a+4,a/=l<.5?i+n:2-i-n,o*=60):a=l>0&&l<1?0:o,new Ts(o,a,l,e.opacity)}function yE(e,r,t,s){return arguments.length===1?I0(e):new Ts(e,r,t,s??1)}function Ts(e,r,t,s){this.h=+e,this.s=+r,this.l=+t,this.opacity=+s}Qu(Ts,yE,k0(vo,{brighter(e){return e=e==null?Ba:Math.pow(Ba,e),new Ts(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=e==null?mo:Math.pow(mo,e),new Ts(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+(this.h<0)*360,r=isNaN(e)||isNaN(this.s)?0:this.s,t=this.l,s=t+(t<.5?t:1-t)*r,n=2*t-s;return new Hr(yc(e>=240?e-240:e+120,n,s),yc(e,n,s),yc(e<120?e+240:e-120,n,s),this.opacity)},clamp(){return new Ts($_(this.h),ma(this.s),ma(this.l),Ra(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=Ra(this.opacity);return`${e===1?"hsl(":"hsla("}${$_(this.h)}, ${ma(this.s)*100}%, ${ma(this.l)*100}%${e===1?")":`, ${e})`}`}}));function $_(e){return e=(e||0)%360,e<0?e+360:e}function ma(e){return Math.max(0,Math.min(1,e||0))}function yc(e,r,t){return(e<60?r+(t-r)*e/60:e<180?t:e<240?r+(t-r)*(240-e)/60:r)*255}const A0=e=>()=>e;function bE(e,r){return function(t){return e+t*r}}function ME(e,r,t){return e=Math.pow(e,t),r=Math.pow(r,t)-e,t=1/t,function(s){return Math.pow(e+s*r,t)}}function vE(e){return(e=+e)==1?F0:function(r,t){return t-r?ME(r,t,e):A0(isNaN(r)?t:r)}}function F0(e,r){var t=r-e;return t?bE(e,t):A0(isNaN(e)?r:e)}const k_=(function e(r){var t=vE(r);function s(n,i){var o=t((n=xu(n)).r,(i=xu(i)).r),a=t(n.g,i.g),l=t(n.b,i.b),c=F0(n.opacity,i.opacity);return function(p){return n.r=o(p),n.g=a(p),n.b=l(p),n.opacity=c(p),n+""}}return s.gamma=e,s})(1);function dn(e,r){return e=+e,r=+r,function(t){return e*(1-t)+r*t}}var Tu=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,bc=new RegExp(Tu.source,"g");function xE(e){return function(){return e}}function TE(e){return function(r){return e(r)+""}}function EE(e,r){var t=Tu.lastIndex=bc.lastIndex=0,s,n,i,o=-1,a=[],l=[];for(e=e+"",r=r+"";(s=Tu.exec(e))&&(n=bc.exec(r));)(i=n.index)>t&&(i=r.slice(t,i),a[o]?a[o]+=i:a[++o]=i),(s=s[0])===(n=n[0])?a[o]?a[o]+=n:a[++o]=n:(a[++o]=null,l.push({i:o,x:dn(s,n)})),t=bc.lastIndex;return t<r.length&&(i=r.slice(t),a[o]?a[o]+=i:a[++o]=i),a.length<2?l[0]?TE(l[0].x):xE(r):(r=l.length,function(c){for(var p=0,d;p<r;++p)a[(d=l[p]).i]=d.x(c);return a.join("")})}var I_=180/Math.PI,Eu={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function D0(e,r,t,s,n,i){var o,a,l;return(o=Math.sqrt(e*e+r*r))&&(e/=o,r/=o),(l=e*t+r*s)&&(t-=e*l,s-=r*l),(a=Math.sqrt(t*t+s*s))&&(t/=a,s/=a,l/=a),e*s<r*t&&(e=-e,r=-r,l=-l,o=-o),{translateX:n,translateY:i,rotate:Math.atan2(r,e)*I_,skewX:Math.atan(l)*I_,scaleX:o,scaleY:a}}var fa;function PE(e){const r=new(typeof DOMMatrix=="function"?DOMMatrix:WebKitCSSMatrix)(e+"");return r.isIdentity?Eu:D0(r.a,r.b,r.c,r.d,r.e,r.f)}function CE(e){return e==null||(fa||(fa=document.createElementNS("http://www.w3.org/2000/svg","g")),fa.setAttribute("transform",e),!(e=fa.transform.baseVal.consolidate()))?Eu:(e=e.matrix,D0(e.a,e.b,e.c,e.d,e.e,e.f))}function O0(e,r,t,s){function n(c){return c.length?c.pop()+" ":""}function i(c,p,d,u,_,f){if(c!==d||p!==u){var w=_.push("translate(",null,r,null,t);f.push({i:w-4,x:dn(c,d)},{i:w-2,x:dn(p,u)})}else(d||u)&&_.push("translate("+d+r+u+t)}function o(c,p,d,u){c!==p?(c-p>180?p+=360:p-c>180&&(c+=360),u.push({i:d.push(n(d)+"rotate(",null,s)-2,x:dn(c,p)})):p&&d.push(n(d)+"rotate("+p+s)}function a(c,p,d,u){c!==p?u.push({i:d.push(n(d)+"skewX(",null,s)-2,x:dn(c,p)}):p&&d.push(n(d)+"skewX("+p+s)}function l(c,p,d,u,_,f){if(c!==d||p!==u){var w=_.push(n(_)+"scale(",null,",",null,")");f.push({i:w-4,x:dn(c,d)},{i:w-2,x:dn(p,u)})}else(d!==1||u!==1)&&_.push(n(_)+"scale("+d+","+u+")")}return function(c,p){var d=[],u=[];return c=e(c),p=e(p),i(c.translateX,c.translateY,p.translateX,p.translateY,d,u),o(c.rotate,p.rotate,d,u),a(c.skewX,p.skewX,d,u),l(c.scaleX,c.scaleY,p.scaleX,p.scaleY,d,u),c=p=null,function(_){for(var f=-1,w=u.length,I;++f<w;)d[(I=u[f]).i]=I.x(_);return d.join("")}}}var SE=O0(PE,"px, ","px)","deg)"),$E=O0(CE,", ",")",")"),wi=0,io=0,Hi=0,L0=1e3,Na,oo,ja=0,Rn=0,Ya=0,go=typeof performance=="object"&&performance.now?performance:Date,z0=typeof window=="object"&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function Xu(){return Rn||(z0(kE),Rn=go.now()+Ya)}function kE(){Rn=0}function Va(){this._call=this._time=this._next=null}Va.prototype=B0.prototype={constructor:Va,restart:function(e,r,t){if(typeof e!="function")throw new TypeError("callback is not a function");t=(t==null?Xu():+t)+(r==null?0:+r),!this._next&&oo!==this&&(oo?oo._next=this:Na=this,oo=this),this._call=e,this._time=t,Pu()},stop:function(){this._call&&(this._call=null,this._time=1/0,Pu())}};function B0(e,r,t){var s=new Va;return s.restart(e,r,t),s}function IE(){Xu(),++wi;for(var e=Na,r;e;)(r=Rn-e._time)>=0&&e._call.call(void 0,r),e=e._next;--wi}function A_(){Rn=(ja=go.now())+Ya,wi=io=0;try{IE()}finally{wi=0,FE(),Rn=0}}function AE(){var e=go.now(),r=e-ja;r>L0&&(Ya-=r,ja=e)}function FE(){for(var e,r=Na,t,s=1/0;r;)r._call?(s>r._time&&(s=r._time),e=r,r=r._next):(t=r._next,r._next=null,r=e?e._next=t:Na=t);oo=e,Pu(s)}function Pu(e){if(!wi){io&&(io=clearTimeout(io));var r=e-Rn;r>24?(e<1/0&&(io=setTimeout(A_,e-go.now()-Ya)),Hi&&(Hi=clearInterval(Hi))):(Hi||(ja=go.now(),Hi=setInterval(AE,L0)),wi=1,z0(A_))}}function F_(e,r,t){var s=new Va;return r=r==null?0:+r,s.restart(n=>{s.stop(),e(n+r)},r,t),s}var DE=g0("start","end","cancel","interrupt"),OE=[],R0=0,D_=1,Cu=2,Ia=3,O_=4,Su=5,Aa=6;function Ja(e,r,t,s,n,i){var o=e.__transition;if(!o)e.__transition={};else if(t in o)return;LE(e,t,{name:r,index:s,group:n,on:DE,tween:OE,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:R0})}function Yu(e,r){var t=Ss(e,r);if(t.state>R0)throw new Error("too late; already scheduled");return t}function Ns(e,r){var t=Ss(e,r);if(t.state>Ia)throw new Error("too late; already running");return t}function Ss(e,r){var t=e.__transition;if(!t||!(t=t[r]))throw new Error("transition not found");return t}function LE(e,r,t){var s=e.__transition,n;s[r]=t,t.timer=B0(i,0,t.time);function i(c){t.state=D_,t.timer.restart(o,t.delay,t.time),t.delay<=c&&o(c-t.delay)}function o(c){var p,d,u,_;if(t.state!==D_)return l();for(p in s)if(_=s[p],_.name===t.name){if(_.state===Ia)return F_(o);_.state===O_?(_.state=Aa,_.timer.stop(),_.on.call("interrupt",e,e.__data__,_.index,_.group),delete s[p]):+p<r&&(_.state=Aa,_.timer.stop(),_.on.call("cancel",e,e.__data__,_.index,_.group),delete s[p])}if(F_(function(){t.state===Ia&&(t.state=O_,t.timer.restart(a,t.delay,t.time),a(c))}),t.state=Cu,t.on.call("start",e,e.__data__,t.index,t.group),t.state===Cu){for(t.state=Ia,n=new Array(u=t.tween.length),p=0,d=-1;p<u;++p)(_=t.tween[p].value.call(e,e.__data__,t.index,t.group))&&(n[++d]=_);n.length=d+1}}function a(c){for(var p=c<t.duration?t.ease.call(null,c/t.duration):(t.timer.restart(l),t.state=Su,1),d=-1,u=n.length;++d<u;)n[d].call(e,p);t.state===Su&&(t.on.call("end",e,e.__data__,t.index,t.group),l())}function l(){t.state=Aa,t.timer.stop(),delete s[r];for(var c in s)return;delete e.__transition}}function zE(e,r){var t=e.__transition,s,n,i=!0,o;if(t){r=r==null?null:r+"";for(o in t){if((s=t[o]).name!==r){i=!1;continue}n=s.state>Cu&&s.state<Su,s.state=Aa,s.timer.stop(),s.on.call(n?"interrupt":"cancel",e,e.__data__,s.index,s.group),delete t[o]}i&&delete e.__transition}}function BE(e){return this.each(function(){zE(this,e)})}function RE(e,r){var t,s;return function(){var n=Ns(this,e),i=n.tween;if(i!==t){s=t=i;for(var o=0,a=s.length;o<a;++o)if(s[o].name===r){s=s.slice(),s.splice(o,1);break}}n.tween=s}}function NE(e,r,t){var s,n;if(typeof t!="function")throw new Error;return function(){var i=Ns(this,e),o=i.tween;if(o!==s){n=(s=o).slice();for(var a={name:r,value:t},l=0,c=n.length;l<c;++l)if(n[l].name===r){n[l]=a;break}l===c&&n.push(a)}i.tween=n}}function jE(e,r){var t=this._id;if(e+="",arguments.length<2){for(var s=Ss(this.node(),t).tween,n=0,i=s.length,o;n<i;++n)if((o=s[n]).name===e)return o.value;return null}return this.each((r==null?RE:NE)(t,e,r))}function Ju(e,r,t){var s=e._id;return e.each(function(){var n=Ns(this,s);(n.value||(n.value={}))[r]=t.apply(this,arguments)}),function(n){return Ss(n,s).value[r]}}function N0(e,r){var t;return(typeof r=="number"?dn:r instanceof _o?k_:(t=_o(r))?(r=t,k_):EE)(e,r)}function VE(e){return function(){this.removeAttribute(e)}}function UE(e){return function(){this.removeAttributeNS(e.space,e.local)}}function WE(e,r,t){var s,n=t+"",i;return function(){var o=this.getAttribute(e);return o===n?null:o===s?i:i=r(s=o,t)}}function GE(e,r,t){var s,n=t+"",i;return function(){var o=this.getAttributeNS(e.space,e.local);return o===n?null:o===s?i:i=r(s=o,t)}}function KE(e,r,t){var s,n,i;return function(){var o,a=t(this),l;return a==null?void this.removeAttribute(e):(o=this.getAttribute(e),l=a+"",o===l?null:o===s&&l===n?i:(n=l,i=r(s=o,a)))}}function qE(e,r,t){var s,n,i;return function(){var o,a=t(this),l;return a==null?void this.removeAttributeNS(e.space,e.local):(o=this.getAttributeNS(e.space,e.local),l=a+"",o===l?null:o===s&&l===n?i:(n=l,i=r(s=o,a)))}}function HE(e,r){var t=Xa(e),s=t==="transform"?$E:N0;return this.attrTween(e,typeof r=="function"?(t.local?qE:KE)(t,s,Ju(this,"attr."+e,r)):r==null?(t.local?UE:VE)(t):(t.local?GE:WE)(t,s,r))}function QE(e,r){return function(t){this.setAttribute(e,r.call(this,t))}}function XE(e,r){return function(t){this.setAttributeNS(e.space,e.local,r.call(this,t))}}function YE(e,r){var t,s;function n(){var i=r.apply(this,arguments);return i!==s&&(t=(s=i)&&XE(e,i)),t}return n._value=r,n}function JE(e,r){var t,s;function n(){var i=r.apply(this,arguments);return i!==s&&(t=(s=i)&&QE(e,i)),t}return n._value=r,n}function ZE(e,r){var t="attr."+e;if(arguments.length<2)return(t=this.tween(t))&&t._value;if(r==null)return this.tween(t,null);if(typeof r!="function")throw new Error;var s=Xa(e);return this.tween(t,(s.local?YE:JE)(s,r))}function eP(e,r){return function(){Yu(this,e).delay=+r.apply(this,arguments)}}function tP(e,r){return r=+r,function(){Yu(this,e).delay=r}}function rP(e){var r=this._id;return arguments.length?this.each((typeof e=="function"?eP:tP)(r,e)):Ss(this.node(),r).delay}function sP(e,r){return function(){Ns(this,e).duration=+r.apply(this,arguments)}}function nP(e,r){return r=+r,function(){Ns(this,e).duration=r}}function iP(e){var r=this._id;return arguments.length?this.each((typeof e=="function"?sP:nP)(r,e)):Ss(this.node(),r).duration}function oP(e,r){if(typeof r!="function")throw new Error;return function(){Ns(this,e).ease=r}}function aP(e){var r=this._id;return arguments.length?this.each(oP(r,e)):Ss(this.node(),r).ease}function lP(e,r){return function(){var t=r.apply(this,arguments);if(typeof t!="function")throw new Error;Ns(this,e).ease=t}}function cP(e){if(typeof e!="function")throw new Error;return this.each(lP(this._id,e))}function uP(e){typeof e!="function"&&(e=b0(e));for(var r=this._groups,t=r.length,s=new Array(t),n=0;n<t;++n)for(var i=r[n],o=i.length,a=s[n]=[],l,c=0;c<o;++c)(l=i[c])&&e.call(l,l.__data__,c,i)&&a.push(l);return new Xs(s,this._parents,this._name,this._id)}function dP(e){if(e._id!==this._id)throw new Error;for(var r=this._groups,t=e._groups,s=r.length,n=t.length,i=Math.min(s,n),o=new Array(s),a=0;a<i;++a)for(var l=r[a],c=t[a],p=l.length,d=o[a]=new Array(p),u,_=0;_<p;++_)(u=l[_]||c[_])&&(d[_]=u);for(;a<s;++a)o[a]=r[a];return new Xs(o,this._parents,this._name,this._id)}function pP(e){return(e+"").trim().split(/^|\s+/).every(function(r){var t=r.indexOf(".");return t>=0&&(r=r.slice(0,t)),!r||r==="start"})}function hP(e,r,t){var s,n,i=pP(r)?Yu:Ns;return function(){var o=i(this,e),a=o.on;a!==s&&(n=(s=a).copy()).on(r,t),o.on=n}}function mP(e,r){var t=this._id;return arguments.length<2?Ss(this.node(),t).on.on(e):this.each(hP(t,e,r))}function fP(e){return function(){var r=this.parentNode;for(var t in this.__transition)if(+t!==e)return;r&&r.removeChild(this)}}function _P(){return this.on("end.remove",fP(this._id))}function gP(e){var r=this._name,t=this._id;typeof e!="function"&&(e=qu(e));for(var s=this._groups,n=s.length,i=new Array(n),o=0;o<n;++o)for(var a=s[o],l=a.length,c=i[o]=new Array(l),p,d,u=0;u<l;++u)(p=a[u])&&(d=e.call(p,p.__data__,u,a))&&("__data__"in p&&(d.__data__=p.__data__),c[u]=d,Ja(c[u],r,t,u,c,Ss(p,t)));return new Xs(i,this._parents,r,t)}function wP(e){var r=this._name,t=this._id;typeof e!="function"&&(e=y0(e));for(var s=this._groups,n=s.length,i=[],o=[],a=0;a<n;++a)for(var l=s[a],c=l.length,p,d=0;d<c;++d)if(p=l[d]){for(var u=e.call(p,p.__data__,d,l),_,f=Ss(p,t),w=0,I=u.length;w<I;++w)(_=u[w])&&Ja(_,r,t,w,u,f);i.push(u),o.push(p)}return new Xs(i,o,r,t)}var yP=Mo.prototype.constructor;function bP(){return new yP(this._groups,this._parents)}function MP(e,r){var t,s,n;return function(){var i=gi(this,e),o=(this.style.removeProperty(e),gi(this,e));return i===o?null:i===t&&o===s?n:n=r(t=i,s=o)}}function j0(e){return function(){this.style.removeProperty(e)}}function vP(e,r,t){var s,n=t+"",i;return function(){var o=gi(this,e);return o===n?null:o===s?i:i=r(s=o,t)}}function xP(e,r,t){var s,n,i;return function(){var o=gi(this,e),a=t(this),l=a+"";return a==null&&(l=a=(this.style.removeProperty(e),gi(this,e))),o===l?null:o===s&&l===n?i:(n=l,i=r(s=o,a))}}function TP(e,r){var t,s,n,i="style."+r,o="end."+i,a;return function(){var l=Ns(this,e),c=l.on,p=l.value[i]==null?a||(a=j0(r)):void 0;(c!==t||n!==p)&&(s=(t=c).copy()).on(o,n=p),l.on=s}}function EP(e,r,t){var s=(e+="")=="transform"?SE:N0;return r==null?this.styleTween(e,MP(e,s)).on("end.style."+e,j0(e)):typeof r=="function"?this.styleTween(e,xP(e,s,Ju(this,"style."+e,r))).each(TP(this._id,e)):this.styleTween(e,vP(e,s,r),t).on("end.style."+e,null)}function PP(e,r,t){return function(s){this.style.setProperty(e,r.call(this,s),t)}}function CP(e,r,t){var s,n;function i(){var o=r.apply(this,arguments);return o!==n&&(s=(n=o)&&PP(e,o,t)),s}return i._value=r,i}function SP(e,r,t){var s="style."+(e+="");if(arguments.length<2)return(s=this.tween(s))&&s._value;if(r==null)return this.tween(s,null);if(typeof r!="function")throw new Error;return this.tween(s,CP(e,r,t??""))}function $P(e){return function(){this.textContent=e}}function kP(e){return function(){var r=e(this);this.textContent=r??""}}function IP(e){return this.tween("text",typeof e=="function"?kP(Ju(this,"text",e)):$P(e==null?"":e+""))}function AP(e){return function(r){this.textContent=e.call(this,r)}}function FP(e){var r,t;function s(){var n=e.apply(this,arguments);return n!==t&&(r=(t=n)&&AP(n)),r}return s._value=e,s}function DP(e){var r="text";if(arguments.length<1)return(r=this.tween(r))&&r._value;if(e==null)return this.tween(r,null);if(typeof e!="function")throw new Error;return this.tween(r,FP(e))}function OP(){for(var e=this._name,r=this._id,t=V0(),s=this._groups,n=s.length,i=0;i<n;++i)for(var o=s[i],a=o.length,l,c=0;c<a;++c)if(l=o[c]){var p=Ss(l,r);Ja(l,e,t,c,o,{time:p.time+p.delay+p.duration,delay:0,duration:p.duration,ease:p.ease})}return new Xs(s,this._parents,e,t)}function LP(){var e,r,t=this,s=t._id,n=t.size();return new Promise(function(i,o){var a={value:o},l={value:function(){--n===0&&i()}};t.each(function(){var c=Ns(this,s),p=c.on;p!==e&&(r=(e=p).copy(),r._.cancel.push(a),r._.interrupt.push(a),r._.end.push(l)),c.on=r}),n===0&&i()})}var zP=0;function Xs(e,r,t,s){this._groups=e,this._parents=r,this._name=t,this._id=s}function V0(){return++zP}var qs=Mo.prototype;Xs.prototype={constructor:Xs,select:gP,selectAll:wP,selectChild:qs.selectChild,selectChildren:qs.selectChildren,filter:uP,merge:dP,selection:bP,transition:OP,call:qs.call,nodes:qs.nodes,node:qs.node,size:qs.size,empty:qs.empty,each:qs.each,on:mP,attr:HE,attrTween:ZE,style:EP,styleTween:SP,text:IP,textTween:DP,remove:_P,tween:jE,delay:rP,duration:iP,ease:aP,easeVarying:cP,end:LP,[Symbol.iterator]:qs[Symbol.iterator]};function BP(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}var RP={time:null,delay:0,duration:250,ease:BP};function NP(e,r){for(var t;!(t=e.__transition)||!(t=t[r]);)if(!(e=e.parentNode))throw new Error(`transition ${r} not found`);return t}function jP(e){var r,t;e instanceof Xs?(r=e._id,e=e._name):(r=V0(),(t=RP).time=Xu(),e=e==null?null:e+"");for(var s=this._groups,n=s.length,i=0;i<n;++i)for(var o=s[i],a=o.length,l,c=0;c<a;++c)(l=o[c])&&Ja(l,e,r,c,o,t||NP(l,r));return new Xs(s,this._parents,e,r)}Mo.prototype.interrupt=BE;Mo.prototype.transition=jP;function ao(e,r,t){this.k=e,this.x=r,this.y=t}ao.prototype={constructor:ao,scale:function(e){return e===1?this:new ao(this.k*e,this.x,this.y)},translate:function(e,r){return e===0&r===0?this:new ao(this.k,this.x+this.k*e,this.y+this.k*r)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}};ao.prototype;const VP={dimension:64,numRepetitions:5,numSimhashProjections:4,seed:42,encodingType:0,projectionType:0,fillEmptyPartitions:!1};function UP(e,r){return(e<<1)+(Number(r)^e&1)}class WP{seed;constructor(r){this.seed=r}next(){return this.seed=(this.seed*9301+49297)%233280,this.seed/233280}normal(r=0,t=1){const s=this.next(),n=this.next();return Math.sqrt(-2*Math.log(s))*Math.cos(2*Math.PI*n)*t+r}}function GP(e,r,t){const s=new WP(t),n=[];for(let i=0;i<e;i++){n[i]=[];for(let o=0;o<r;o++)n[i][o]=s.normal(0,1)}return n}function KP(e){let r=0;for(const t of e)r=UP(r,t>0);return r}function qP(e,r){const t=new Array(e[0].length).fill(0);for(let s=0;s<r.length;s++)for(let n=0;n<e[0].length;n++)t[n]+=e[s][n]*r[s];return t}function U0(e,r){if(!e.length||e[0].length!==r.dimension)throw new Error(`Input data shape inconsistent with config dimension ${r.dimension}`);if(r.numSimhashProjections<0||r.numSimhashProjections>=32)throw new Error(`Number of SimHash projections must be between 0 and 31, got ${r.numSimhashProjections}`);const t=Math.pow(2,r.numSimhashProjections),s=r.projectionDimension||r.dimension;let n=[];for(let i=0;i<r.numRepetitions;i++){const o=r.seed+i,a=GP(r.dimension,r.numSimhashProjections,o),l=new Map,c=new Map;for(const d of e){const u=qP(a,d),_=KP(u);l.has(_)||(l.set(_,new Array(s).fill(0)),c.set(_,0));const f=l.get(_);for(let w=0;w<Math.min(d.length,s);w++)f[w]+=d[w];c.set(_,c.get(_)+1)}const p=[];for(let d=0;d<t;d++)if(l.has(d)&&c.get(d)>0){const u=l.get(d),_=c.get(d);if(r.encodingType===1)for(let f=0;f<s;f++)p.push(u[f]/_);else p.push(...u)}else for(let u=0;u<s;u++)p.push(0);n.push(...p)}return n}function HP(e,r){const t={...r,encodingType:0};return U0(e,t)}function QP(e,r){const t={...r,encodingType:1};return U0(e,t)}class XP{dimension;vocabMap;seed;constructor(r=128,t=42){this.dimension=r,this.vocabMap=new Map,this.seed=t}seededRandom(r){const t=Math.sin(r)*1e4;return t-Math.floor(t)}getWordEmbedding(r){const t=r.toLowerCase().replace(/[^a-z0-9]/g,"");if(this.vocabMap.has(t))return this.vocabMap.get(t);const s=new Array(this.dimension);let n=this.seed;for(let i=0;i<t.length;i++)n+=t.charCodeAt(i);for(let i=0;i<this.dimension;i++)n=(n*9301+49297)%233280,s[i]=n/233280*2-1;return this.vocabMap.set(t,s),s}textToVectors(r){const t=r.toLowerCase().replace(/[^\w\s]/g," ").split(/\s+/).filter(n=>n.length>0),s=t.map(n=>this.getWordEmbedding(n));return{words:t,vectors:s}}}class YP{embedder;fdeConfig;constructor(){this.embedder=new XP(64,42),this.fdeConfig={...VP,numSimhashProjections:4,numRepetitions:1}}processQuery(r){const{words:t,vectors:s}=this.embedder.textToVectors(r),n=HP(s,this.fdeConfig),i=s.map((o,a)=>{const l=Math.abs(o[0]+o[1]+o[2]);return Math.floor(l*6)%6+1});return{words:t,vectors:s,partitions:i,fdeVector:n}}processDocument(r){const{words:t,vectors:s}=this.embedder.textToVectors(r),n=QP(s,this.fdeConfig),i=s.map((o,a)=>{const l=Math.abs(o[0]+o[1]+o[2]);return Math.floor(l*6)%6+1});return{words:t,vectors:s,partitions:i,fdeVector:n}}calculateSimilarity(r,t){if(r.length!==t.length)return 0;let s=0;for(let o=0;o<r.length;o++)s+=r[o]*t[o];const n=Math.sqrt(r.reduce((o,a)=>o+a*a,0)),i=Math.sqrt(t.reduce((o,a)=>o+a*a,0));return n===0||i===0?0:s/(n*i)}}const Fa=new Map,Fn=[],JP=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){const s=Fa.get(e);if(s===void 0)Fa.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){const n=Fn.indexOf(e);n!==-1&&Fn.splice(n,1);for(let i=0;i<Fn.length;i++)if(Fa.get(Fn[i]).priority<=t){Fn.splice(i,0,e);return}Fn.push(e)}return}throw new TypeError("not a valid backend")},ZP=async e=>{const r=Fa.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{const t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},e2=async e=>{const r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?Fn:t;let n;const i=[],o=new Set;for(const l of s){const c=await ZP(l);typeof c=="string"?i.push({name:l,err:c}):(n||(n=c),n===c&&o.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(const{name:l,err:c}of i)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);const a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]},t2="1.21.0";let L_="warning";const Ps={wasm:{},webgl:{},webgpu:{},versions:{common:t2},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);L_=e}},get logLevel(){return L_}};Object.defineProperty(Ps,"logLevel",{enumerable:!0});const r2=Ps,s2=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];const s=t.getContext("2d");if(s!=null){let n,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[3]):(n=e.dims[3],i=e.dims[2]);const o=r?.format!==void 0?r.format:"RGB",a=r?.norm;let l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));const p=i*n;let d=0,u=p,_=p*2,f=-1;o==="RGBA"?(d=0,u=p,_=p*2,f=p*3):o==="RGB"?(d=0,u=p,_=p*2):o==="RBG"&&(d=0,_=p,u=p*2);for(let w=0;w<i;w++)for(let I=0;I<n;I++){const M=(e.data[d++]-c[0])*l[0],y=(e.data[u++]-c[1])*l[1],$=(e.data[_++]-c[2])*l[2],v=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+M+","+y+","+$+","+v+")",s.fillRect(I,w,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},n2=(e,r)=>{const t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d");let s;if(t!=null){let n,i,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[1],o=e.dims[3]):(n=e.dims[3],i=e.dims[2],o=e.dims[1]);const a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm;let c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));const d=i*n;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");const u=4;let _=0,f=1,w=2,I=3,M=0,y=d,$=d*2,v=-1;a==="RGBA"?(M=0,y=d,$=d*2,v=d*3):a==="RGB"?(M=0,y=d,$=d*2):a==="RBG"&&(M=0,$=d,y=d*2),s=t.createImageData(n,i);for(let T=0;T<i*n;_+=u,f+=u,w+=u,I+=u,T++)s.data[_]=(e.data[M++]-p[0])*c[0],s.data[f]=(e.data[y++]-p[1])*c[1],s.data[w]=(e.data[$++]-p[2])*c[2],s.data[I]=v===-1?255:(e.data[v++]-p[3])*c[3]}else throw new Error("Can not access image data");return s},Mc=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");const{height:t,width:s}=r,n=r.norm??{mean:255,bias:0};let i,o;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?o=[n.bias,n.bias,n.bias,n.bias]:o=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];const a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3);let d=4,u=0,_=1,f=2,w=3,I=0,M=c,y=c*2,$=-1;a==="RGB"&&(d=3,u=0,_=1,f=2,w=-1),l==="RGBA"?$=c*3:l==="RBG"?(I=0,y=c,M=c*2):l==="BGR"&&(y=0,M=c,I=c*2);for(let T=0;T<c;T++,u+=d,f+=d,_+=d,w+=d)p[I++]=(e[u]+o[0])/i[0],p[M++]=(e[_]+o[1])/i[1],p[y++]=(e[f]+o[2])/i[2],$!==-1&&w!==-1&&(p[$++]=(e[w]+o[3])/i[3]);return l==="RGBA"?new cs("float32",p,[1,4,t,s]):new cs("float32",p,[1,3,t,s])},i2=async(e,r)=>{const t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i=typeof e=="string";let o,a=r??{};const l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){let u=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=_}else a.tensorFormat="RGBA",a.height=u,a.width=_;d.drawImage(e,0,0),o=d.getImageData(0,0,_,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=d,r!==void 0){const u=l();u.width=d,u.height=p;const _=c(u);if(_!=null)_.putImageData(e,0,0),o=_.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else o=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");const p=l();p.width=e.width,p.height=e.height;const d=c(p);if(d!=null){const u=e.height,_=e.width;return d.drawImage(e,0,0,_,u),o=d.getImageData(0,0,_,u).data,a.height=u,a.width=_,Mc(o,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((p,d)=>{const u=l(),_=c(u);if(!e||!_)return d();const f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,_.drawImage(f,0,0,u.width,u.height);const w=_.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,p(Mc(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return Mc(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},o2=(e,r)=>{const{width:t,height:s,download:n,dispose:i}=r,o=[1,s,t,4];return new cs({location:"texture",type:"float32",texture:e,dims:o,download:n,dispose:i})},a2=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:i}=r;return new cs({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:i})},l2=(e,r)=>{const{dataType:t,dims:s,download:n,dispose:i}=r;return new cs({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:i})},c2=(e,r,t)=>new cs({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]}),mi=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),Da=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]);let z_=!1;const u2=()=>{if(!z_){z_=!0;const e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(mi.set("int64",BigInt64Array),Da.set(BigInt64Array,"int64")),r&&(mi.set("uint64",BigUint64Array),Da.set(BigUint64Array,"uint64")),s?(mi.set("float16",t),Da.set(t,"float16")):mi.set("float16",Uint16Array)}},d2=e=>{let r=1;for(let t=0;t<e.length;t++){const s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},p2=(e,r)=>{switch(e.location){case"cpu":return new cs(e.type,e.data,r);case"cpu-pinned":return new cs({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new cs({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new cs({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new cs({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}};let cs=class{constructor(r,t,s){u2();let n,i;if(typeof r=="object"&&"location"in r)switch(this.dataLocation=r.location,n=r.type,i=r.dims,r.location){case"cpu-pinned":{const a=mi.get(n);if(!a)throw new TypeError(`unsupported type "${n}" to create tensor from pinned buffer`);if(!(r.data instanceof a))throw new TypeError(`buffer should be of type ${a.name}`);this.cpuData=r.data;break}case"texture":{if(n!=="float32")throw new TypeError(`unsupported type "${n}" to create tensor from texture`);this.gpuTextureData=r.texture,this.downloader=r.download,this.disposer=r.dispose;break}case"gpu-buffer":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from gpu buffer`);this.gpuBufferData=r.gpuBuffer,this.downloader=r.download,this.disposer=r.dispose;break}case"ml-tensor":{if(n!=="float32"&&n!=="float16"&&n!=="int32"&&n!=="int64"&&n!=="uint32"&&n!=="uint64"&&n!=="int8"&&n!=="uint8"&&n!=="bool"&&n!=="uint4"&&n!=="int4")throw new TypeError(`unsupported type "${n}" to create tensor from MLTensor`);this.mlTensorData=r.mlTensor,this.downloader=r.download,this.disposer=r.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let a,l;if(typeof r=="string")if(n=r,l=s,r==="string"){if(!Array.isArray(t))throw new TypeError("A string tensor's data must be a string array.");a=t}else{const c=mi.get(r);if(c===void 0)throw new TypeError(`Unsupported tensor type: ${r}.`);if(Array.isArray(t)){if(r==="float16"&&c===Uint16Array||r==="uint4"||r==="int4")throw new TypeError(`Creating a ${r} tensor from number array is not supported. Please use ${c.name} as data.`);r==="uint64"||r==="int64"?a=c.from(t,BigInt):a=c.from(t)}else if(t instanceof c)a=t;else if(t instanceof Uint8ClampedArray)if(r==="uint8")a=Uint8Array.from(t);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(r==="float16"&&t instanceof Uint16Array&&c!==Uint16Array)a=new globalThis.Float16Array(t.buffer,t.byteOffset,t.length);else throw new TypeError(`A ${n} tensor's data must be type of ${c}`)}else if(l=t,Array.isArray(r)){if(r.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");const c=typeof r[0];if(c==="string")n="string",a=r;else if(c==="boolean")n="bool",a=Uint8Array.from(r);else throw new TypeError(`Invalid element type of data array: ${c}.`)}else if(r instanceof Uint8ClampedArray)n="uint8",a=Uint8Array.from(r);else{const c=Da.get(r.constructor);if(c===void 0)throw new TypeError(`Unsupported type for tensor data: ${r.constructor}.`);n=c,a=r}if(l===void 0)l=[a.length];else if(!Array.isArray(l))throw new TypeError("A tensor's dims must be a number array");i=l,this.cpuData=a,this.dataLocation="cpu"}const o=d2(i);if(this.cpuData&&o!==this.cpuData.length&&!((n==="uint4"||n==="int4")&&Math.ceil(o/2)===this.cpuData.length))throw new Error(`Tensor's size(${o}) does not match data length(${this.cpuData.length}).`);this.type=n,this.dims=i,this.size=o}static async fromImage(r,t){return i2(r,t)}static fromTexture(r,t){return o2(r,t)}static fromGpuBuffer(r,t){return a2(r,t)}static fromMLTensor(r,t){return l2(r,t)}static fromPinnedBuffer(r,t,s){return c2(r,t,s)}toDataURL(r){return s2(this,r)}toImageData(r){return n2(this,r)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(r){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;const t=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=t,r&&this.disposer&&(this.disposer(),this.disposer=void 0),t}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(r){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return p2(this,r)}};const pi=cs,W0=(e,r)=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||console.timeStamp(`${e}::ORT::${r}`)},G0=(e,r)=>{const t=new Error().stack?.split(/\r\n|\r|\n/g)||[];let s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),W0("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},$u=e=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||G0("BEGIN",e)},ku=e=>{(typeof Ps.trace>"u"?!Ps.wasm.trace:!Ps.trace)||G0("END",e)};let h2=class K0{constructor(r){this.handler=r}async run(r,t,s){$u();const n={};let i={};if(typeof r!="object"||r===null||r instanceof pi||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof pi)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(const c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);n[c]=null}if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1;const p=Object.getOwnPropertyNames(t);for(const d of this.outputNames)if(p.indexOf(d)!==-1){const u=t[d];(u===null||u instanceof pi)&&(c=!0,o=!1,n[d]=u)}if(c){if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(const c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(o)for(const c of this.outputNames)n[c]=null;const a=await this.handler.run(r,n,i),l={};for(const c in a)if(Object.hasOwnProperty.call(a,c)){const p=a[c];p instanceof pi?l[c]=p:l[c]=new pi(p.type,p.data,p.dims)}return ku(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){$u();let i,o={};if(typeof r=="string"){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){const p=r;let d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");const[a,l]=await e2(o),c=await a.createInferenceSessionHandler(i,l);return ku(),new K0(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}};const m2=h2,f2=Object.freeze(Object.defineProperty({__proto__:null,InferenceSession:m2,TRACE:W0,TRACE_FUNC_BEGIN:$u,TRACE_FUNC_END:ku,Tensor:pi,env:r2,registerBackend:JP},Symbol.toStringTag,{value:"Module"}));/*!
 * ONNX Runtime Web v1.22.0-dev.20250409-89f8206ba4
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */var Zu=Object.defineProperty,_2=Object.getOwnPropertyDescriptor,g2=Object.getOwnPropertyNames,w2=Object.prototype.hasOwnProperty,y2=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(r,t)=>(typeof require<"u"?require:r)[t]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')}),Be=(e,r)=>()=>(e&&(r=e(e=0)),r),Mi=(e,r)=>{for(var t in r)Zu(e,t,{get:r[t],enumerable:!0})},b2=(e,r,t,s)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of g2(r))!w2.call(e,n)&&n!==t&&Zu(e,n,{get:()=>r[n],enumerable:!(s=_2(r,n))||s.enumerable});return e},wo=e=>b2(Zu({},"__esModule",{value:!0}),e),Qi,ln,zn,B_,q0,H0=Be(()=>{Qi=new Map,ln=[],zn=(e,r,t)=>{if(r&&typeof r.init=="function"&&typeof r.createInferenceSessionHandler=="function"){let s=Qi.get(e);if(s===void 0)Qi.set(e,{backend:r,priority:t});else{if(s.priority>t)return;if(s.priority===t&&s.backend!==r)throw new Error(`cannot register backend "${e}" using priority ${t}`)}if(t>=0){let n=ln.indexOf(e);n!==-1&&ln.splice(n,1);for(let i=0;i<ln.length;i++)if(Qi.get(ln[i]).priority<=t){ln.splice(i,0,e);return}ln.push(e)}return}throw new TypeError("not a valid backend")},B_=async e=>{let r=Qi.get(e);if(!r)return"backend not found.";if(r.initialized)return r.backend;if(r.aborted)return r.error;{let t=!!r.initPromise;try{return t||(r.initPromise=r.backend.init(e)),await r.initPromise,r.initialized=!0,r.backend}catch(s){return t||(r.error=`${s}`,r.aborted=!0),r.error}finally{delete r.initPromise}}},q0=async e=>{let r=e.executionProviders||[],t=r.map(l=>typeof l=="string"?l:l.name),s=t.length===0?ln:t,n,i=[],o=new Set;for(let l of s){let c=await B_(l);typeof c=="string"?i.push({name:l,err:c}):(n||(n=c),n===c&&o.add(l))}if(!n)throw new Error(`no available backend found. ERR: ${i.map(l=>`[${l.name}] ${l.err}`).join(", ")}`);for(let{name:l,err:c}of i)t.includes(l)&&console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${c}`);let a=r.filter(l=>o.has(typeof l=="string"?l:l.name));return[n,new Proxy(e,{get:(l,c)=>c==="executionProviders"?a:Reflect.get(l,c)})]}}),M2=Be(()=>{H0()}),Q0,v2=Be(()=>{Q0="1.22.0-dev.20250409-89f8206ba4"}),vc,ls,X0=Be(()=>{v2(),vc="warning",ls={wasm:{},webgl:{},webgpu:{},versions:{common:Q0},set logLevel(e){if(e!==void 0){if(typeof e!="string"||["verbose","info","warning","error","fatal"].indexOf(e)===-1)throw new Error(`Unsupported logging level: ${e}`);vc=e}},get logLevel(){return vc}},Object.defineProperty(ls,"logLevel",{enumerable:!0})}),Zt,x2=Be(()=>{X0(),Zt=ls}),Y0,J0,T2=Be(()=>{Y0=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas"):new OffscreenCanvas(1,1);t.width=e.dims[3],t.height=e.dims[2];let s=t.getContext("2d");if(s!=null){let n,i;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[3]):(n=e.dims[3],i=e.dims[2]);let o=r?.format!==void 0?r.format:"RGB",a=r?.norm,l,c;a===void 0||a.mean===void 0?l=[255,255,255,255]:typeof a.mean=="number"?l=[a.mean,a.mean,a.mean,a.mean]:(l=[a.mean[0],a.mean[1],a.mean[2],0],a.mean[3]!==void 0&&(l[3]=a.mean[3])),a===void 0||a.bias===void 0?c=[0,0,0,0]:typeof a.bias=="number"?c=[a.bias,a.bias,a.bias,a.bias]:(c=[a.bias[0],a.bias[1],a.bias[2],0],a.bias[3]!==void 0&&(c[3]=a.bias[3]));let p=i*n,d=0,u=p,_=p*2,f=-1;o==="RGBA"?(d=0,u=p,_=p*2,f=p*3):o==="RGB"?(d=0,u=p,_=p*2):o==="RBG"&&(d=0,_=p,u=p*2);for(let w=0;w<i;w++)for(let I=0;I<n;I++){let M=(e.data[d++]-c[0])*l[0],y=(e.data[u++]-c[1])*l[1],$=(e.data[_++]-c[2])*l[2],v=f===-1?255:(e.data[f++]-c[3])*l[3];s.fillStyle="rgba("+M+","+y+","+$+","+v+")",s.fillRect(I,w,1,1)}if("toDataURL"in t)return t.toDataURL();throw new Error("toDataURL is not supported")}else throw new Error("Can not access image data")},J0=(e,r)=>{let t=typeof document<"u"?document.createElement("canvas").getContext("2d"):new OffscreenCanvas(1,1).getContext("2d"),s;if(t!=null){let n,i,o;r?.tensorLayout!==void 0&&r.tensorLayout==="NHWC"?(n=e.dims[2],i=e.dims[1],o=e.dims[3]):(n=e.dims[3],i=e.dims[2],o=e.dims[1]);let a=r!==void 0&&r.format!==void 0?r.format:"RGB",l=r?.norm,c,p;l===void 0||l.mean===void 0?c=[255,255,255,255]:typeof l.mean=="number"?c=[l.mean,l.mean,l.mean,l.mean]:(c=[l.mean[0],l.mean[1],l.mean[2],255],l.mean[3]!==void 0&&(c[3]=l.mean[3])),l===void 0||l.bias===void 0?p=[0,0,0,0]:typeof l.bias=="number"?p=[l.bias,l.bias,l.bias,l.bias]:(p=[l.bias[0],l.bias[1],l.bias[2],0],l.bias[3]!==void 0&&(p[3]=l.bias[3]));let d=i*n;if(r!==void 0&&(r.format!==void 0&&o===4&&r.format!=="RGBA"||o===3&&r.format!=="RGB"&&r.format!=="BGR"))throw new Error("Tensor format doesn't match input tensor dims");let u=4,_=0,f=1,w=2,I=3,M=0,y=d,$=d*2,v=-1;a==="RGBA"?(M=0,y=d,$=d*2,v=d*3):a==="RGB"?(M=0,y=d,$=d*2):a==="RBG"&&(M=0,$=d,y=d*2),s=t.createImageData(n,i);for(let T=0;T<i*n;_+=u,f+=u,w+=u,I+=u,T++)s.data[_]=(e.data[M++]-p[0])*c[0],s.data[f]=(e.data[y++]-p[1])*c[1],s.data[w]=(e.data[$++]-p[2])*c[2],s.data[I]=v===-1?255:(e.data[v++]-p[3])*c[3]}else throw new Error("Can not access image data");return s}}),_a,Z0,eb,tb,rb,sb,E2=Be(()=>{ed(),_a=(e,r)=>{if(e===void 0)throw new Error("Image buffer must be defined");if(r.height===void 0||r.width===void 0)throw new Error("Image height and width must be defined");if(r.tensorLayout==="NHWC")throw new Error("NHWC Tensor layout is not supported yet");let{height:t,width:s}=r,n=r.norm??{mean:255,bias:0},i,o;typeof n.mean=="number"?i=[n.mean,n.mean,n.mean,n.mean]:i=[n.mean[0],n.mean[1],n.mean[2],n.mean[3]??255],typeof n.bias=="number"?o=[n.bias,n.bias,n.bias,n.bias]:o=[n.bias[0],n.bias[1],n.bias[2],n.bias[3]??0];let a=r.format!==void 0?r.format:"RGBA",l=r.tensorFormat!==void 0&&r.tensorFormat!==void 0?r.tensorFormat:"RGB",c=t*s,p=l==="RGBA"?new Float32Array(c*4):new Float32Array(c*3),d=4,u=0,_=1,f=2,w=3,I=0,M=c,y=c*2,$=-1;a==="RGB"&&(d=3,u=0,_=1,f=2,w=-1),l==="RGBA"?$=c*3:l==="RBG"?(I=0,y=c,M=c*2):l==="BGR"&&(y=0,M=c,I=c*2);for(let v=0;v<c;v++,u+=d,f+=d,_+=d,w+=d)p[I++]=(e[u]+o[0])/i[0],p[M++]=(e[_]+o[1])/i[1],p[y++]=(e[f]+o[2])/i[2],$!==-1&&w!==-1&&(p[$++]=(e[w]+o[3])/i[3]);return l==="RGBA"?new Zr("float32",p,[1,4,t,s]):new Zr("float32",p,[1,3,t,s])},Z0=async(e,r)=>{let t=typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement,s=typeof ImageData<"u"&&e instanceof ImageData,n=typeof ImageBitmap<"u"&&e instanceof ImageBitmap,i=typeof e=="string",o,a=r??{},l=()=>{if(typeof document<"u")return document.createElement("canvas");if(typeof OffscreenCanvas<"u")return new OffscreenCanvas(1,1);throw new Error("Canvas is not supported")},c=p=>typeof HTMLCanvasElement<"u"&&p instanceof HTMLCanvasElement||p instanceof OffscreenCanvas?p.getContext("2d"):null;if(t){let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,_=e.width;if(r!==void 0&&r.resizedHeight!==void 0&&r.resizedWidth!==void 0&&(u=r.resizedHeight,_=r.resizedWidth),r!==void 0){if(a=r,r.tensorFormat!==void 0)throw new Error("Image input config format must be RGBA for HTMLImageElement");a.tensorFormat="RGBA",a.height=u,a.width=_}else a.tensorFormat="RGBA",a.height=u,a.width=_;d.drawImage(e,0,0),o=d.getImageData(0,0,_,u).data}else throw new Error("Can not access image data")}else if(s){let p,d;if(r!==void 0&&r.resizedWidth!==void 0&&r.resizedHeight!==void 0?(p=r.resizedHeight,d=r.resizedWidth):(p=e.height,d=e.width),r!==void 0&&(a=r),a.format="RGBA",a.height=p,a.width=d,r!==void 0){let u=l();u.width=d,u.height=p;let _=c(u);if(_!=null)_.putImageData(e,0,0),o=_.getImageData(0,0,d,p).data;else throw new Error("Can not access image data")}else o=e.data}else if(n){if(r===void 0)throw new Error("Please provide image config with format for Imagebitmap");let p=l();p.width=e.width,p.height=e.height;let d=c(p);if(d!=null){let u=e.height,_=e.width;return d.drawImage(e,0,0,_,u),o=d.getImageData(0,0,_,u).data,a.height=u,a.width=_,_a(o,a)}else throw new Error("Can not access image data")}else{if(i)return new Promise((p,d)=>{let u=l(),_=c(u);if(!e||!_)return d();let f=new Image;f.crossOrigin="Anonymous",f.src=e,f.onload=()=>{u.width=f.width,u.height=f.height,_.drawImage(f,0,0,u.width,u.height);let w=_.getImageData(0,0,u.width,u.height);a.height=u.height,a.width=u.width,p(_a(w.data,a))}});throw new Error("Input data provided is not supported - aborted tensor creation")}if(o!==void 0)return _a(o,a);throw new Error("Input data provided is not supported - aborted tensor creation")},eb=(e,r)=>{let{width:t,height:s,download:n,dispose:i}=r,o=[1,s,t,4];return new Zr({location:"texture",type:"float32",texture:e,dims:o,download:n,dispose:i})},tb=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:i}=r;return new Zr({location:"gpu-buffer",type:t??"float32",gpuBuffer:e,dims:s,download:n,dispose:i})},rb=(e,r)=>{let{dataType:t,dims:s,download:n,dispose:i}=r;return new Zr({location:"ml-tensor",type:t??"float32",mlTensor:e,dims:s,download:n,dispose:i})},sb=(e,r,t)=>new Zr({location:"cpu-pinned",type:e,data:r,dims:t??[r.length]})}),Dn,lo,xc,nb,P2=Be(()=>{Dn=new Map([["float32",Float32Array],["uint8",Uint8Array],["int8",Int8Array],["uint16",Uint16Array],["int16",Int16Array],["int32",Int32Array],["bool",Uint8Array],["float64",Float64Array],["uint32",Uint32Array],["int4",Uint8Array],["uint4",Uint8Array]]),lo=new Map([[Float32Array,"float32"],[Uint8Array,"uint8"],[Int8Array,"int8"],[Uint16Array,"uint16"],[Int16Array,"int16"],[Int32Array,"int32"],[Float64Array,"float64"],[Uint32Array,"uint32"]]),xc=!1,nb=()=>{if(!xc){xc=!0;let e=typeof BigInt64Array<"u"&&BigInt64Array.from,r=typeof BigUint64Array<"u"&&BigUint64Array.from,t=globalThis.Float16Array,s=typeof t<"u"&&t.from;e&&(Dn.set("int64",BigInt64Array),lo.set(BigInt64Array,"int64")),r&&(Dn.set("uint64",BigUint64Array),lo.set(BigUint64Array,"uint64")),s?(Dn.set("float16",t),lo.set(t,"float16")):Dn.set("float16",Uint16Array)}}}),ib,ob,C2=Be(()=>{ed(),ib=e=>{let r=1;for(let t=0;t<e.length;t++){let s=e[t];if(typeof s!="number"||!Number.isSafeInteger(s))throw new TypeError(`dims[${t}] must be an integer, got: ${s}`);if(s<0)throw new RangeError(`dims[${t}] must be a non-negative integer, got: ${s}`);r*=s}return r},ob=(e,r)=>{switch(e.location){case"cpu":return new Zr(e.type,e.data,r);case"cpu-pinned":return new Zr({location:"cpu-pinned",data:e.data,type:e.type,dims:r});case"texture":return new Zr({location:"texture",texture:e.texture,type:e.type,dims:r});case"gpu-buffer":return new Zr({location:"gpu-buffer",gpuBuffer:e.gpuBuffer,type:e.type,dims:r});case"ml-tensor":return new Zr({location:"ml-tensor",mlTensor:e.mlTensor,type:e.type,dims:r});default:throw new Error(`tensorReshape: tensor location ${e.location} is not supported`)}}}),Zr,ed=Be(()=>{T2(),E2(),P2(),C2(),Zr=class{constructor(e,r,t){nb();let s,n;if(typeof e=="object"&&"location"in e)switch(this.dataLocation=e.location,s=e.type,n=e.dims,e.location){case"cpu-pinned":{let o=Dn.get(s);if(!o)throw new TypeError(`unsupported type "${s}" to create tensor from pinned buffer`);if(!(e.data instanceof o))throw new TypeError(`buffer should be of type ${o.name}`);this.cpuData=e.data;break}case"texture":{if(s!=="float32")throw new TypeError(`unsupported type "${s}" to create tensor from texture`);this.gpuTextureData=e.texture,this.downloader=e.download,this.disposer=e.dispose;break}case"gpu-buffer":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from gpu buffer`);this.gpuBufferData=e.gpuBuffer,this.downloader=e.download,this.disposer=e.dispose;break}case"ml-tensor":{if(s!=="float32"&&s!=="float16"&&s!=="int32"&&s!=="int64"&&s!=="uint32"&&s!=="uint64"&&s!=="int8"&&s!=="uint8"&&s!=="bool"&&s!=="uint4"&&s!=="int4")throw new TypeError(`unsupported type "${s}" to create tensor from MLTensor`);this.mlTensorData=e.mlTensor,this.downloader=e.download,this.disposer=e.dispose;break}default:throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`)}else{let o,a;if(typeof e=="string")if(s=e,a=t,e==="string"){if(!Array.isArray(r))throw new TypeError("A string tensor's data must be a string array.");o=r}else{let l=Dn.get(e);if(l===void 0)throw new TypeError(`Unsupported tensor type: ${e}.`);if(Array.isArray(r)){if(e==="float16"&&l===Uint16Array||e==="uint4"||e==="int4")throw new TypeError(`Creating a ${e} tensor from number array is not supported. Please use ${l.name} as data.`);e==="uint64"||e==="int64"?o=l.from(r,BigInt):o=l.from(r)}else if(r instanceof l)o=r;else if(r instanceof Uint8ClampedArray)if(e==="uint8")o=Uint8Array.from(r);else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");else if(e==="float16"&&r instanceof Uint16Array&&l!==Uint16Array)o=new globalThis.Float16Array(r.buffer,r.byteOffset,r.length);else throw new TypeError(`A ${s} tensor's data must be type of ${l}`)}else if(a=r,Array.isArray(e)){if(e.length===0)throw new TypeError("Tensor type cannot be inferred from an empty array.");let l=typeof e[0];if(l==="string")s="string",o=e;else if(l==="boolean")s="bool",o=Uint8Array.from(e);else throw new TypeError(`Invalid element type of data array: ${l}.`)}else if(e instanceof Uint8ClampedArray)s="uint8",o=Uint8Array.from(e);else{let l=lo.get(e.constructor);if(l===void 0)throw new TypeError(`Unsupported type for tensor data: ${e.constructor}.`);s=l,o=e}if(a===void 0)a=[o.length];else if(!Array.isArray(a))throw new TypeError("A tensor's dims must be a number array");n=a,this.cpuData=o,this.dataLocation="cpu"}let i=ib(n);if(this.cpuData&&i!==this.cpuData.length&&!((s==="uint4"||s==="int4")&&Math.ceil(i/2)===this.cpuData.length))throw new Error(`Tensor's size(${i}) does not match data length(${this.cpuData.length}).`);this.type=s,this.dims=n,this.size=i}static async fromImage(e,r){return Z0(e,r)}static fromTexture(e,r){return eb(e,r)}static fromGpuBuffer(e,r){return tb(e,r)}static fromMLTensor(e,r){return rb(e,r)}static fromPinnedBuffer(e,r,t){return sb(e,r,t)}toDataURL(e){return Y0(this,e)}toImageData(e){return J0(this,e)}get data(){if(this.ensureValid(),!this.cpuData)throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");return this.cpuData}get location(){return this.dataLocation}get texture(){if(this.ensureValid(),!this.gpuTextureData)throw new Error("The data is not stored as a WebGL texture.");return this.gpuTextureData}get gpuBuffer(){if(this.ensureValid(),!this.gpuBufferData)throw new Error("The data is not stored as a WebGPU buffer.");return this.gpuBufferData}get mlTensor(){if(this.ensureValid(),!this.mlTensorData)throw new Error("The data is not stored as a WebNN MLTensor.");return this.mlTensorData}async getData(e){switch(this.ensureValid(),this.dataLocation){case"cpu":case"cpu-pinned":return this.data;case"texture":case"gpu-buffer":case"ml-tensor":{if(!this.downloader)throw new Error("The current tensor is not created with a specified data downloader.");if(this.isDownloading)throw new Error("The current tensor is being downloaded.");try{this.isDownloading=!0;let r=await this.downloader();return this.downloader=void 0,this.dataLocation="cpu",this.cpuData=r,e&&this.disposer&&(this.disposer(),this.disposer=void 0),r}finally{this.isDownloading=!1}}default:throw new Error(`cannot get data from location: ${this.dataLocation}`)}}dispose(){if(this.isDownloading)throw new Error("The current tensor is being downloaded.");this.disposer&&(this.disposer(),this.disposer=void 0),this.cpuData=void 0,this.gpuTextureData=void 0,this.gpuBufferData=void 0,this.mlTensorData=void 0,this.downloader=void 0,this.isDownloading=void 0,this.dataLocation="none"}ensureValid(){if(this.dataLocation==="none")throw new Error("The tensor is disposed.")}reshape(e){if(this.ensureValid(),this.downloader||this.disposer)throw new Error("Cannot reshape a tensor that owns GPU resource.");return ob(this,e)}}}),Es,ab=Be(()=>{ed(),Es=Zr}),yo,Tc,Cs,us,lb=Be(()=>{X0(),yo=(e,r)=>{(typeof ls.trace>"u"?!ls.wasm.trace:!ls.trace)||console.timeStamp(`${e}::ORT::${r}`)},Tc=(e,r)=>{let t=new Error().stack?.split(/\r\n|\r|\n/g)||[],s=!1;for(let n=0;n<t.length;n++){if(s&&!t[n].includes("TRACE_FUNC")){let i=`FUNC_${e}::${t[n].trim().split(" ")[1]}`;r&&(i+=`::${r}`),yo("CPU",i);return}t[n].includes("TRACE_FUNC")&&(s=!0)}},Cs=e=>{(typeof ls.trace>"u"?!ls.wasm.trace:!ls.trace)||Tc("BEGIN",e)},us=e=>{(typeof ls.trace>"u"?!ls.wasm.trace:!ls.trace)||Tc("END",e)}}),cb,S2=Be(()=>{H0(),ab(),lb(),cb=class ub{constructor(r){this.handler=r}async run(r,t,s){Cs();let n={},i={};if(typeof r!="object"||r===null||r instanceof Es||Array.isArray(r))throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");let o=!0;if(typeof t=="object"){if(t===null)throw new TypeError("Unexpected argument[1]: cannot be null.");if(t instanceof Es)throw new TypeError("'fetches' cannot be a Tensor");if(Array.isArray(t)){if(t.length===0)throw new TypeError("'fetches' cannot be an empty array.");o=!1;for(let c of t){if(typeof c!="string")throw new TypeError("'fetches' must be a string array or an object.");if(this.outputNames.indexOf(c)===-1)throw new RangeError(`'fetches' contains invalid output name: ${c}.`);n[c]=null}if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else{let c=!1,p=Object.getOwnPropertyNames(t);for(let d of this.outputNames)if(p.indexOf(d)!==-1){let u=t[d];(u===null||u instanceof Es)&&(c=!0,o=!1,n[d]=u)}if(c){if(typeof s=="object"&&s!==null)i=s;else if(typeof s<"u")throw new TypeError("'options' must be an object.")}else i=t}}else if(typeof t<"u")throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");for(let c of this.inputNames)if(typeof r[c]>"u")throw new Error(`input '${c}' is missing in 'feeds'.`);if(o)for(let c of this.outputNames)n[c]=null;let a=await this.handler.run(r,n,i),l={};for(let c in a)if(Object.hasOwnProperty.call(a,c)){let p=a[c];p instanceof Es?l[c]=p:l[c]=new Es(p.type,p.data,p.dims)}return us(),l}async release(){return this.handler.dispose()}static async create(r,t,s,n){Cs();let i,o={};if(typeof r=="string"){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof Uint8Array){if(i=r,typeof t=="object"&&t!==null)o=t;else if(typeof t<"u")throw new TypeError("'options' must be an object.")}else if(r instanceof ArrayBuffer||typeof SharedArrayBuffer<"u"&&r instanceof SharedArrayBuffer){let p=r,d=0,u=r.byteLength;if(typeof t=="object"&&t!==null)o=t;else if(typeof t=="number"){if(d=t,!Number.isSafeInteger(d))throw new RangeError("'byteOffset' must be an integer.");if(d<0||d>=p.byteLength)throw new RangeError(`'byteOffset' is out of range [0, ${p.byteLength}).`);if(u=r.byteLength-d,typeof s=="number"){if(u=s,!Number.isSafeInteger(u))throw new RangeError("'byteLength' must be an integer.");if(u<=0||d+u>p.byteLength)throw new RangeError(`'byteLength' is out of range (0, ${p.byteLength-d}].`);if(typeof n=="object"&&n!==null)o=n;else if(typeof n<"u")throw new TypeError("'options' must be an object.")}else if(typeof s<"u")throw new TypeError("'byteLength' must be a number.")}else if(typeof t<"u")throw new TypeError("'options' must be an object.");i=new Uint8Array(p,d,u)}else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");let[a,l]=await q0(o),c=await a.createInferenceSessionHandler(i,l);return us(),new ub(c)}startProfiling(){this.handler.startProfiling()}endProfiling(){this.handler.endProfiling()}get inputNames(){return this.handler.inputNames}get outputNames(){return this.handler.outputNames}get inputMetadata(){return this.handler.inputMetadata}get outputMetadata(){return this.handler.outputMetadata}}}),td,$2=Be(()=>{S2(),td=cb}),k2=Be(()=>{}),I2=Be(()=>{}),A2=Be(()=>{}),F2=Be(()=>{}),db={};Mi(db,{InferenceSession:()=>td,TRACE:()=>yo,TRACE_FUNC_BEGIN:()=>Cs,TRACE_FUNC_END:()=>us,Tensor:()=>Es,env:()=>Zt,registerBackend:()=>zn});var $s=Be(()=>{M2(),x2(),$2(),ab(),k2(),I2(),lb(),A2(),F2()}),rd=Be(()=>{}),pb={};Mi(pb,{default:()=>hb});var Ec,Pc,hb,D2=Be(()=>{wx(),Un(),sd(),Ec="ort-wasm-proxy-worker",Pc=globalThis.self?.name===Ec,Pc&&(self.onmessage=e=>{let{type:r,in:t}=e.data;try{switch(r){case"init-wasm":nd(t.wasm).then(()=>{vd(t).then(()=>{postMessage({type:r})},s=>{postMessage({type:r,err:s})})},s=>{postMessage({type:r,err:s})});break;case"init-ep":{let{epName:s,env:n}=t;xd(n,s).then(()=>{postMessage({type:r})},i=>{postMessage({type:r,err:i})});break}case"copy-from":{let{buffer:s}=t,n=Qa(s);postMessage({type:r,out:n});break}case"create":{let{model:s,options:n}=t;Td(s,n).then(i=>{postMessage({type:r,out:i})},i=>{postMessage({type:r,err:i})});break}case"release":Ed(t),postMessage({type:r});break;case"run":{let{sessionId:s,inputIndices:n,inputs:i,outputIndices:o,options:a}=t;Pd(s,n,i,o,new Array(o.length).fill(null),a).then(l=>{l.some(c=>c[3]!=="cpu")?postMessage({type:r,err:"Proxy does not support non-cpu tensor location."}):postMessage({type:r,out:l},Sd([...i,...l]))},l=>{postMessage({type:r,err:l})});break}case"end-profiling":Cd(t),postMessage({type:r});break;default:}}catch(s){postMessage({type:r,err:s})}}),hb=Pc?null:e=>new Worker(e??Jr,{type:"module",name:Ec})}),mb={};Mi(mb,{default:()=>fb});var Cc,Sc,fb,R_,O2=Be(()=>{Sc=(Cc=import.meta.url,async function(e={}){var r,t,s=e,n=new Promise((h,P)=>{r=h,t=P}),i=typeof window=="object",o=typeof WorkerGlobalScope<"u",a=o&&self.name?.startsWith("em-pthread");s.mountExternalData=(h,P)=>{h.startsWith("./")&&(h=h.substring(2)),(s.Eb||(s.Eb=new Map)).set(h,P)},s.unmountExternalData=()=>{delete s.Eb};var l=globalThis.SharedArrayBuffer??new WebAssembly.Memory({initial:0,maximum:0,pc:!0}).buffer.constructor;let c=h=>async(...P)=>{try{if(s.Fb)throw Error("Session already started");let A=s.Fb={dc:P[0],errors:[]},L=await h(...P);if(s.Fb!==A)throw Error("Session mismatch");s.Jb?.flush();let V=A.errors;if(0<V.length){let oe=await Promise.all(V);if(oe=oe.filter(Te=>Te),0<oe.length)throw Error(oe.join(`
`))}return L}finally{s.Fb=null}};s.jsepInit=(h,P)=>{if(h==="webgpu"){[s.Jb,s.Ub,s.Yb,s.Kb,s.Xb,s.jb,s.Zb,s.ac,s.Vb,s.Wb,s.$b]=P;let A=s.Jb;s.jsepRegisterBuffer=(L,V,oe,Te)=>A.registerBuffer(L,V,oe,Te),s.jsepGetBuffer=L=>A.getBuffer(L),s.jsepCreateDownloader=(L,V,oe)=>A.createDownloader(L,V,oe),s.jsepOnCreateSession=L=>{A.onCreateSession(L)},s.jsepOnReleaseSession=L=>{A.onReleaseSession(L)},s.jsepOnRunStart=L=>A.onRunStart(L),s.bc=(L,V)=>{A.upload(L,V)}}else if(h==="webnn"){let A=P[0];[s.nc,s.Nb,s.webnnEnsureTensor,s.Ob,s.webnnDownloadTensor]=P.slice(1),s.webnnReleaseTensorId=s.Nb,s.webnnUploadTensor=s.Ob,s.webnnOnRunStart=L=>A.onRunStart(L),s.webnnOnRunEnd=A.onRunEnd.bind(A),s.webnnRegisterMLContext=(L,V)=>{A.registerMLContext(L,V)},s.webnnOnReleaseSession=L=>{A.onReleaseSession(L)},s.webnnCreateMLTensorDownloader=(L,V)=>A.createMLTensorDownloader(L,V),s.webnnRegisterMLTensor=(L,V,oe,Te)=>A.registerMLTensor(L,V,oe,Te),s.webnnCreateMLContext=L=>A.createMLContext(L),s.webnnRegisterMLConstant=(L,V,oe,Te,Oe,qe)=>A.registerMLConstant(L,V,oe,Te,Oe,s.Eb,qe),s.webnnRegisterGraphInput=A.registerGraphInput.bind(A),s.webnnIsGraphInput=A.isGraphInput.bind(A),s.webnnCreateTemporaryTensor=A.createTemporaryTensor.bind(A),s.webnnIsInt64Supported=A.isInt64Supported.bind(A)}};let p=()=>{let h=(P,A,L)=>(...V)=>{let oe=Gt,Te=A?.();V=P(...V);let Oe=A?.();return Te!==Oe&&(P=Oe,L(Te),A=L=null),Gt!=oe?new Promise((qe,it)=>{hr={resolve:qe,reject:it}}):V};(()=>{for(let P of["_OrtAppendExecutionProvider","_OrtCreateSession","_OrtRun","_OrtRunWithBinding","_OrtBindInput"])s[P]=h(s[P],()=>s[P],A=>s[P]=A)})(),c!==void 0&&(s._OrtRun=c(s._OrtRun),s._OrtRunWithBinding=c(s._OrtRunWithBinding)),p=void 0};s.asyncInit=()=>{p?.()};var d,u,_=Object.assign({},s),f=(h,P)=>{throw P},w="";(i||o)&&(o?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),Cc&&(w=Cc),w=w.startsWith("blob:")?"":w.slice(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1),o&&(u=h=>{var P=new XMLHttpRequest;return P.open("GET",h,!1),P.responseType="arraybuffer",P.send(null),new Uint8Array(P.response)}),d=async h=>{if(ce(h))return new Promise((A,L)=>{var V=new XMLHttpRequest;V.open("GET",h,!0),V.responseType="arraybuffer",V.onload=()=>{V.status==200||V.status==0&&V.response?A(V.response):L(V.status)},V.onerror=L,V.send(null)});var P=await fetch(h,{credentials:"same-origin"});if(P.ok)return P.arrayBuffer();throw Error(P.status+" : "+P.url)});var I=console.log.bind(console),M=console.error.bind(console),y=I,$=M;Object.assign(s,_),_=null;var v,T,E,x,S,z,D,K,q,O,Z,Q,J,re=s.wasmBinary,te=!1,ce=h=>h.startsWith("file://");function ue(){return v.buffer!=x.buffer&&xe(),x}function B(){return v.buffer!=x.buffer&&xe(),S}function F(){return v.buffer!=x.buffer&&xe(),z}function G(){return v.buffer!=x.buffer&&xe(),D}function N(){return v.buffer!=x.buffer&&xe(),K}function ae(){return v.buffer!=x.buffer&&xe(),q}function ke(){return v.buffer!=x.buffer&&xe(),O}function ve(){return v.buffer!=x.buffer&&xe(),J}if(a){let h=function(P){try{var A=P.data,L=A.Bb;if(L==="load"){let V=[];self.onmessage=oe=>V.push(oe),self.startWorker=()=>{postMessage({Bb:"loaded"});for(let oe of V)h(oe);self.onmessage=h};for(let oe of A.Rb)s[oe]&&!s[oe].proxy||(s[oe]=(...Te)=>{postMessage({Bb:"callHandler",Qb:oe,args:Te})},oe=="print"&&(y=s[oe]),oe=="printErr"&&($=s[oe]));v=A.kc,xe(),Fe(A.lc)}else if(L==="run"){Kt(A.Ab),vn(A.Ab,0,0,1,0,0),Gr(),ee(A.Ab),Qe||(yn(),Qe=!0);try{Ir(A.fc,A.Hb)}catch(V){if(V!="unwind")throw V}}else A.target!=="setimmediate"&&(L==="checkMailbox"?Qe&&se():L&&($(`worker: received unknown command ${L}`),$(A)))}catch(V){throw Bi(),V}};var Fe,Qe=!1;$=function(...P){P=P.join(" "),console.error(P)},self.alert=function(...P){postMessage({Bb:"alert",text:P.join(" "),ic:bn()})},self.onunhandledrejection=P=>{throw P.reason||P},self.onmessage=h}function xe(){var h=v.buffer;s.HEAP8=x=new Int8Array(h),s.HEAP16=z=new Int16Array(h),s.HEAPU8=S=new Uint8Array(h),s.HEAPU16=D=new Uint16Array(h),s.HEAP32=K=new Int32Array(h),s.HEAPU32=q=new Uint32Array(h),s.HEAPF32=O=new Float32Array(h),s.HEAPF64=J=new Float64Array(h),s.HEAP64=Z=new BigInt64Array(h),s.HEAPU64=Q=new BigUint64Array(h)}function H(){a?startWorker(s):ut.Ca()}a||(v=new WebAssembly.Memory({initial:256,maximum:65536,shared:!0}),xe());var de,W=0,_e=null;function Ie(){if(--W==0&&_e){var h=_e;_e=null,h()}}function Me(h){throw $(h="Aborted("+h+")"),te=!0,h=new WebAssembly.RuntimeError(h+". Build with -sASSERTIONS for more info."),t(h),h}function ge(){return{a:{L:Ae,Aa:we,b:Zs,$:Vs,A:Et,pa:Is,X:j,Z:Y,qa:ne,na:he,ga:Se,ma:tt,J:lt,Y:Ge,V:St,oa:kt,W:_r,va:Kr,E:ps,Q:As,O:Qr,D:zr,u:Le,r:Re,P:rt,z:Gn,R:le,ja:k,T:me,aa:Ke,M:Xe,F:Ye,ia:ee,sa:Ue,t:rr,Ba:xr,w:fs,o:os,l:mr,c:qr,n:Nr,j:xo,v:To,p:Eo,f:Po,s:Co,m:tn,e:So,k:$o,i:ko,g:Io,d:Ao,da:rn,ea:Fo,fa:Do,ba:qn,ca:Ei,N:Ci,xa:Si,ua:$i,h:Ai,C:Fi,G:Hn,ta:Oo,x:Lo,ra:zo,U:Bo,q:Pi,y:Ro,K:No,S:jo,za:Vo,ya:Xn,ka:Os,la:Di,_:Je,B:Uo,I:Oi,ha:Wo,H:Zn,a:v,wa:et}}}var Ee={829644:(h,P,A,L,V)=>{if(s===void 0||!s.Eb)return 1;if((h=Wt(Number(h>>>0))).startsWith("./")&&(h=h.substring(2)),!(h=s.Eb.get(h)))return 2;if(P=Number(P>>>0),A=Number(A>>>0),L=Number(L>>>0),P+A>h.byteLength)return 3;try{let oe=h.subarray(P,P+A);switch(V){case 0:B().set(oe,L>>>0);break;case 1:s.mc?s.mc(L,oe):s.bc(L,oe);break;default:return 4}return 0}catch{return 4}},830468:(h,P,A)=>{s.Ob(h,B().subarray(P>>>0,P+A>>>0))},830532:()=>s.nc(),830574:h=>{s.Nb(h)},830611:()=>{s.Vb()},830642:()=>{s.Wb()},830671:()=>{s.$b()},830696:h=>s.Ub(h),830729:h=>s.Yb(h),830761:(h,P,A)=>{s.Kb(Number(h),Number(P),Number(A),!0)},830824:(h,P,A)=>{s.Kb(Number(h),Number(P),Number(A))},830881:()=>typeof wasmOffsetConverter<"u",830938:h=>{s.jb("Abs",h,void 0)},830989:h=>{s.jb("Neg",h,void 0)},831040:h=>{s.jb("Floor",h,void 0)},831093:h=>{s.jb("Ceil",h,void 0)},831145:h=>{s.jb("Reciprocal",h,void 0)},831203:h=>{s.jb("Sqrt",h,void 0)},831255:h=>{s.jb("Exp",h,void 0)},831306:h=>{s.jb("Erf",h,void 0)},831357:h=>{s.jb("Sigmoid",h,void 0)},831412:(h,P,A)=>{s.jb("HardSigmoid",h,{alpha:P,beta:A})},831491:h=>{s.jb("Log",h,void 0)},831542:h=>{s.jb("Sin",h,void 0)},831593:h=>{s.jb("Cos",h,void 0)},831644:h=>{s.jb("Tan",h,void 0)},831695:h=>{s.jb("Asin",h,void 0)},831747:h=>{s.jb("Acos",h,void 0)},831799:h=>{s.jb("Atan",h,void 0)},831851:h=>{s.jb("Sinh",h,void 0)},831903:h=>{s.jb("Cosh",h,void 0)},831955:h=>{s.jb("Asinh",h,void 0)},832008:h=>{s.jb("Acosh",h,void 0)},832061:h=>{s.jb("Atanh",h,void 0)},832114:h=>{s.jb("Tanh",h,void 0)},832166:h=>{s.jb("Not",h,void 0)},832217:(h,P,A)=>{s.jb("Clip",h,{min:P,max:A})},832286:h=>{s.jb("Clip",h,void 0)},832338:(h,P)=>{s.jb("Elu",h,{alpha:P})},832396:h=>{s.jb("Gelu",h,void 0)},832448:h=>{s.jb("Relu",h,void 0)},832500:(h,P)=>{s.jb("LeakyRelu",h,{alpha:P})},832564:(h,P)=>{s.jb("ThresholdedRelu",h,{alpha:P})},832634:(h,P)=>{s.jb("Cast",h,{to:P})},832692:h=>{s.jb("Add",h,void 0)},832743:h=>{s.jb("Sub",h,void 0)},832794:h=>{s.jb("Mul",h,void 0)},832845:h=>{s.jb("Div",h,void 0)},832896:h=>{s.jb("Pow",h,void 0)},832947:h=>{s.jb("Equal",h,void 0)},833e3:h=>{s.jb("Greater",h,void 0)},833055:h=>{s.jb("GreaterOrEqual",h,void 0)},833117:h=>{s.jb("Less",h,void 0)},833169:h=>{s.jb("LessOrEqual",h,void 0)},833228:(h,P,A,L,V)=>{s.jb("ReduceMean",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833403:(h,P,A,L,V)=>{s.jb("ReduceMax",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833577:(h,P,A,L,V)=>{s.jb("ReduceMin",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833751:(h,P,A,L,V)=>{s.jb("ReduceProd",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},833926:(h,P,A,L,V)=>{s.jb("ReduceSum",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834100:(h,P,A,L,V)=>{s.jb("ReduceL1",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834273:(h,P,A,L,V)=>{s.jb("ReduceL2",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834446:(h,P,A,L,V)=>{s.jb("ReduceLogSum",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834623:(h,P,A,L,V)=>{s.jb("ReduceSumSquare",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834803:(h,P,A,L,V)=>{s.jb("ReduceLogSumExp",h,{keepDims:!!P,noopWithEmptyAxes:!!A,axes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},834983:h=>{s.jb("Where",h,void 0)},835036:(h,P,A)=>{s.jb("Transpose",h,{perm:P?Array.from(N().subarray(Number(P)>>>0,Number(A)>>>0)):[]})},835160:(h,P,A,L)=>{s.jb("DepthToSpace",h,{blocksize:P,mode:Wt(A),format:L?"NHWC":"NCHW"})},835293:(h,P,A,L)=>{s.jb("DepthToSpace",h,{blocksize:P,mode:Wt(A),format:L?"NHWC":"NCHW"})},835426:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er,Ls)=>{s.jb("ConvTranspose",h,{format:qe?"NHWC":"NCHW",autoPad:P,dilations:[A],group:L,kernelShape:[V],pads:[oe,Te],strides:[Oe],wIsConst:()=>!!ue()[it>>>0],outputPadding:yt?Array.from(N().subarray(Number(yt)>>>0,Number(Ft)>>>0)):[],outputShape:Nt?Array.from(N().subarray(Number(Nt)>>>0,Number(Er)>>>0)):[],activation:Wt(Ls)})},835859:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er)=>{s.jb("ConvTranspose",h,{format:Oe?"NHWC":"NCHW",autoPad:P,dilations:Array.from(N().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:L,kernelShape:Array.from(N().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(N().subarray(Number(oe)>>>0,4+(Number(oe)>>>0)>>>0)),strides:Array.from(N().subarray(Number(Te)>>>0,2+(Number(Te)>>>0)>>>0)),wIsConst:()=>!!ue()[qe>>>0],outputPadding:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],outputShape:Ft?Array.from(N().subarray(Number(Ft)>>>0,Number(Nt)>>>0)):[],activation:Wt(Er)})},836520:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er,Ls)=>{s.jb("ConvTranspose",h,{format:qe?"NHWC":"NCHW",autoPad:P,dilations:[A],group:L,kernelShape:[V],pads:[oe,Te],strides:[Oe],wIsConst:()=>!!ue()[it>>>0],outputPadding:yt?Array.from(N().subarray(Number(yt)>>>0,Number(Ft)>>>0)):[],outputShape:Nt?Array.from(N().subarray(Number(Nt)>>>0,Number(Er)>>>0)):[],activation:Wt(Ls)})},836953:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er)=>{s.jb("ConvTranspose",h,{format:Oe?"NHWC":"NCHW",autoPad:P,dilations:Array.from(N().subarray(Number(A)>>>0,2+(Number(A)>>>0)>>>0)),group:L,kernelShape:Array.from(N().subarray(Number(V)>>>0,2+(Number(V)>>>0)>>>0)),pads:Array.from(N().subarray(Number(oe)>>>0,4+(Number(oe)>>>0)>>>0)),strides:Array.from(N().subarray(Number(Te)>>>0,2+(Number(Te)>>>0)>>>0)),wIsConst:()=>!!ue()[qe>>>0],outputPadding:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],outputShape:Ft?Array.from(N().subarray(Number(Ft)>>>0,Number(Nt)>>>0)):[],activation:Wt(Er)})},837614:(h,P)=>{s.jb("GlobalAveragePool",h,{format:P?"NHWC":"NCHW"})},837705:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er)=>{s.jb("AveragePool",h,{format:Er?"NHWC":"NCHW",auto_pad:P,ceil_mode:A,count_include_pad:L,storage_order:V,dilations:oe?Array.from(N().subarray(Number(oe)>>>0,Number(Te)>>>0)):[],kernel_shape:Oe?Array.from(N().subarray(Number(Oe)>>>0,Number(qe)>>>0)):[],pads:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],strides:Ft?Array.from(N().subarray(Number(Ft)>>>0,Number(Nt)>>>0)):[]})},838184:(h,P)=>{s.jb("GlobalAveragePool",h,{format:P?"NHWC":"NCHW"})},838275:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er)=>{s.jb("AveragePool",h,{format:Er?"NHWC":"NCHW",auto_pad:P,ceil_mode:A,count_include_pad:L,storage_order:V,dilations:oe?Array.from(N().subarray(Number(oe)>>>0,Number(Te)>>>0)):[],kernel_shape:Oe?Array.from(N().subarray(Number(Oe)>>>0,Number(qe)>>>0)):[],pads:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],strides:Ft?Array.from(N().subarray(Number(Ft)>>>0,Number(Nt)>>>0)):[]})},838754:(h,P)=>{s.jb("GlobalMaxPool",h,{format:P?"NHWC":"NCHW"})},838841:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er)=>{s.jb("MaxPool",h,{format:Er?"NHWC":"NCHW",auto_pad:P,ceil_mode:A,count_include_pad:L,storage_order:V,dilations:oe?Array.from(N().subarray(Number(oe)>>>0,Number(Te)>>>0)):[],kernel_shape:Oe?Array.from(N().subarray(Number(Oe)>>>0,Number(qe)>>>0)):[],pads:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],strides:Ft?Array.from(N().subarray(Number(Ft)>>>0,Number(Nt)>>>0)):[]})},839316:(h,P)=>{s.jb("GlobalMaxPool",h,{format:P?"NHWC":"NCHW"})},839403:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er)=>{s.jb("MaxPool",h,{format:Er?"NHWC":"NCHW",auto_pad:P,ceil_mode:A,count_include_pad:L,storage_order:V,dilations:oe?Array.from(N().subarray(Number(oe)>>>0,Number(Te)>>>0)):[],kernel_shape:Oe?Array.from(N().subarray(Number(Oe)>>>0,Number(qe)>>>0)):[],pads:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],strides:Ft?Array.from(N().subarray(Number(Ft)>>>0,Number(Nt)>>>0)):[]})},839878:(h,P,A,L,V)=>{s.jb("Gemm",h,{alpha:P,beta:A,transA:L,transB:V})},839982:h=>{s.jb("MatMul",h,void 0)},840036:(h,P,A,L)=>{s.jb("ArgMax",h,{keepDims:!!P,selectLastIndex:!!A,axis:L})},840144:(h,P,A,L)=>{s.jb("ArgMin",h,{keepDims:!!P,selectLastIndex:!!A,axis:L})},840252:(h,P)=>{s.jb("Softmax",h,{axis:P})},840315:(h,P)=>{s.jb("Concat",h,{axis:P})},840375:(h,P,A,L,V)=>{s.jb("Split",h,{axis:P,numOutputs:A,splitSizes:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},840531:h=>{s.jb("Expand",h,void 0)},840585:(h,P)=>{s.jb("Gather",h,{axis:Number(P)})},840656:(h,P)=>{s.jb("GatherElements",h,{axis:Number(P)})},840735:(h,P)=>{s.jb("GatherND",h,{batch_dims:Number(P)})},840814:(h,P,A,L,V,oe,Te,Oe,qe,it,yt)=>{s.jb("Resize",h,{antialias:P,axes:A?Array.from(N().subarray(Number(A)>>>0,Number(L)>>>0)):[],coordinateTransformMode:Wt(V),cubicCoeffA:oe,excludeOutside:Te,extrapolationValue:Oe,keepAspectRatioPolicy:Wt(qe),mode:Wt(it),nearestMode:Wt(yt)})},841176:(h,P,A,L,V,oe,Te)=>{s.jb("Slice",h,{starts:P?Array.from(N().subarray(Number(P)>>>0,Number(A)>>>0)):[],ends:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[],axes:oe?Array.from(N().subarray(Number(oe)>>>0,Number(Te)>>>0)):[]})},841440:h=>{s.jb("Tile",h,void 0)},841492:(h,P,A)=>{s.jb("InstanceNormalization",h,{epsilon:P,format:A?"NHWC":"NCHW"})},841606:(h,P,A)=>{s.jb("InstanceNormalization",h,{epsilon:P,format:A?"NHWC":"NCHW"})},841720:h=>{s.jb("Range",h,void 0)},841773:(h,P)=>{s.jb("Einsum",h,{equation:Wt(P)})},841854:(h,P,A,L,V)=>{s.jb("Pad",h,{mode:P,value:A,pads:L?Array.from(N().subarray(Number(L)>>>0,Number(V)>>>0)):[]})},841997:(h,P,A,L,V,oe)=>{s.jb("BatchNormalization",h,{epsilon:P,momentum:A,spatial:!!V,trainingMode:!!L,format:oe?"NHWC":"NCHW"})},842166:(h,P,A,L,V,oe)=>{s.jb("BatchNormalization",h,{epsilon:P,momentum:A,spatial:!!V,trainingMode:!!L,format:oe?"NHWC":"NCHW"})},842335:(h,P,A)=>{s.jb("CumSum",h,{exclusive:Number(P),reverse:Number(A)})},842432:(h,P,A)=>{s.jb("DequantizeLinear",h,{axis:P,blockSize:A})},842522:(h,P,A,L,V)=>{s.jb("GridSample",h,{align_corners:P,mode:Wt(A),padding_mode:Wt(L),format:V?"NHWC":"NCHW"})},842692:(h,P,A,L,V)=>{s.jb("GridSample",h,{align_corners:P,mode:Wt(A),padding_mode:Wt(L),format:V?"NHWC":"NCHW"})},842862:(h,P)=>{s.jb("ScatterND",h,{reduction:Wt(P)})},842947:(h,P,A,L,V,oe,Te,Oe,qe)=>{s.jb("Attention",h,{numHeads:P,isUnidirectional:A,maskFilterValue:L,scale:V,doRotary:oe,qkvHiddenSizes:Te?Array.from(N().subarray(Number(Oe)>>>0,Number(Oe)+Te>>>0)):[],pastPresentShareBuffer:!!qe})},843219:h=>{s.jb("BiasAdd",h,void 0)},843274:h=>{s.jb("BiasSplitGelu",h,void 0)},843335:h=>{s.jb("FastGelu",h,void 0)},843391:(h,P,A,L,V,oe,Te,Oe,qe,it,yt,Ft,Nt,Er,Ls,qo)=>{s.jb("Conv",h,{format:Ft?"NHWC":"NCHW",auto_pad:P,dilations:A?Array.from(N().subarray(Number(A)>>>0,Number(L)>>>0)):[],group:V,kernel_shape:oe?Array.from(N().subarray(Number(oe)>>>0,Number(Te)>>>0)):[],pads:Oe?Array.from(N().subarray(Number(Oe)>>>0,Number(qe)>>>0)):[],strides:it?Array.from(N().subarray(Number(it)>>>0,Number(yt)>>>0)):[],w_is_const:()=>!!ue()[Number(Nt)>>>0],activation:Wt(Er),activation_params:Ls?Array.from(ke().subarray(Number(Ls)>>>0,Number(qo)>>>0)):[]})},843975:h=>{s.jb("Gelu",h,void 0)},844027:(h,P,A,L,V,oe,Te,Oe,qe)=>{s.jb("GroupQueryAttention",h,{numHeads:P,kvNumHeads:A,scale:L,softcap:V,doRotary:oe,rotaryInterleaved:Te,smoothSoftmax:Oe,localWindowSize:qe})},844244:(h,P,A,L)=>{s.jb("LayerNormalization",h,{axis:P,epsilon:A,simplified:!!L})},844355:(h,P,A,L)=>{s.jb("LayerNormalization",h,{axis:P,epsilon:A,simplified:!!L})},844466:(h,P,A,L,V,oe)=>{s.jb("MatMulNBits",h,{k:P,n:A,accuracyLevel:L,bits:V,blockSize:oe})},844593:(h,P,A,L,V,oe)=>{s.jb("MultiHeadAttention",h,{numHeads:P,isUnidirectional:A,maskFilterValue:L,scale:V,doRotary:oe})},844752:(h,P)=>{s.jb("QuickGelu",h,{alpha:P})},844816:(h,P,A,L,V)=>{s.jb("RotaryEmbedding",h,{interleaved:!!P,numHeads:A,rotaryEmbeddingDim:L,scale:V})},844955:(h,P,A)=>{s.jb("SkipLayerNormalization",h,{epsilon:P,simplified:!!A})},845057:(h,P,A)=>{s.jb("SkipLayerNormalization",h,{epsilon:P,simplified:!!A})},845159:(h,P,A,L)=>{s.jb("GatherBlockQuantized",h,{gatherAxis:P,quantizeAxis:A,blockSize:L})},845280:h=>{s.Zb(h)},845314:(h,P)=>s.ac(Number(h),Number(P),s.Fb.dc,s.Fb.errors)};function we(h,P,A){return Rr(async()=>{await s.Xb(Number(h),Number(P),Number(A))})}function Ae(){return typeof wasmOffsetConverter<"u"}class De{name="ExitStatus";constructor(P){this.message=`Program terminated with exit(${P})`,this.status=P}}var We=h=>{h.terminate(),h.onmessage=()=>{}},be=[],st=h=>{Ze.length==0&&(rs(),Or(Ze[0]));var P=Ze.pop();if(!P)return 6;Ct.push(P),ft[h.Ab]=P,P.Ab=h.Ab;var A={Bb:"run",fc:h.ec,Hb:h.Hb,Ab:h.Ab};return P.postMessage(A,h.Mb),0},je=0,Ne=(h,P,...A)=>{for(var L=2*A.length,V=si(),oe=Tn(8*L),Te=oe>>>3,Oe=0;Oe<A.length;Oe++){var qe=A[Oe];typeof qe=="bigint"?(Z[Te+2*Oe]=1n,Z[Te+2*Oe+1]=qe):(Z[Te+2*Oe]=0n,ve()[Te+2*Oe+1>>>0]=qe)}return h=Ri(h,0,L,oe,P),xn(V),h};function et(h){if(a)return Ne(0,1,h);if(E=h,!(0<je)){for(var P of Ct)We(P);for(P of Ze)We(P);Ze=[],Ct=[],ft={},te=!0}f(0,new De(h))}function He(h){if(a)return Ne(1,0,h);Je(h)}var Je=h=>{if(E=h,a)throw He(h),"unwind";et(h)},Ze=[],Ct=[],At=[],ft={},Mr=h=>{var P=h.Ab;delete ft[P],Ze.push(h),Ct.splice(Ct.indexOf(h),1),h.Ab=0,ei(P)};function Gr(){At.forEach(h=>h())}var Or=h=>new Promise(P=>{h.onmessage=V=>{var oe=(V=V.data).Bb;if(V.Gb&&V.Gb!=bn()){var Te=ft[V.Gb];Te?Te.postMessage(V,V.Mb):$(`Internal error! Worker sent a message "${oe}" to target pthread ${V.Gb}, but that thread no longer exists!`)}else oe==="checkMailbox"?se():oe==="spawnThread"?st(V):oe==="cleanupThread"?Mr(ft[V.hc]):oe==="loaded"?(h.loaded=!0,P(h)):oe==="alert"?alert(`Thread ${V.ic}: ${V.text}`):V.target==="setimmediate"?h.postMessage(V):oe==="callHandler"?s[V.Qb](...V.args):oe&&$(`worker sent an unknown command ${oe}`)},h.onerror=V=>{throw $(`worker sent an error! ${V.filename}:${V.lineno}: ${V.message}`),V};var A,L=[];for(A of[])s.propertyIsEnumerable(A)&&L.push(A);h.postMessage({Bb:"load",Rb:L,kc:v,lc:T})});function rs(){var h=new Worker((()=>{let P=URL;return import.meta.url>"file:"&&import.meta.url<"file;"?new P("ort.bundle.min.mjs",import.meta.url):new URL(import.meta.url)})(),{type:"module",workerData:"em-pthread",name:"em-pthread"});Ze.push(h)}var Kt=h=>{xe();var P=ae()[h+52>>>2>>>0];h=ae()[h+56>>>2>>>0],ji(P,P-h),xn(P)},Ir=(h,P)=>{je=0,h=Vi(h,P),0<je?E=h:ti(h)};class Js{constructor(P){this.Ib=P-24}}function Zs(h,P,A){var L=new Js(h>>>=0);throw P>>>=0,A>>>=0,ae()[L.Ib+16>>>2>>>0]=0,ae()[L.Ib+4>>>2>>>0]=P,ae()[L.Ib+8>>>2>>>0]=A,h}function js(h,P,A,L){return a?Ne(2,1,h,P,A,L):Vs(h,P,A,L)}function Vs(h,P,A,L){if(h>>>=0,A>>>=0,L>>>=0,l===void 0)return 6;var V=[];return a&&V.length===0?js(h,P>>>=0,A,L):(h={ec:A,Ab:h,Hb:L,Mb:V},a?(h.Bb="spawnThread",postMessage(h,V),0):st(h))}var dt=typeof TextDecoder<"u"?new TextDecoder:void 0,ks=(h,P=0,A=NaN)=>{var L=(P>>>=0)+A;for(A=P;h[A]&&!(A>=L);)++A;if(16<A-P&&h.buffer&&dt)return dt.decode(h.buffer instanceof ArrayBuffer?h.subarray(P,A):h.slice(P,A));for(L="";P<A;){var V=h[P++];if(128&V){var oe=63&h[P++];if((224&V)==192)L+=String.fromCharCode((31&V)<<6|oe);else{var Te=63&h[P++];65536>(V=(240&V)==224?(15&V)<<12|oe<<6|Te:(7&V)<<18|oe<<12|Te<<6|63&h[P++])?L+=String.fromCharCode(V):(V-=65536,L+=String.fromCharCode(55296|V>>10,56320|1023&V))}}else L+=String.fromCharCode(V)}return L},Wt=(h,P)=>(h>>>=0)?ks(B(),h,P):"";function Et(h,P,A){return a?Ne(3,1,h,P,A):0}function Is(h,P){if(a)return Ne(4,1,h,P)}var C=h=>{for(var P=0,A=0;A<h.length;++A){var L=h.charCodeAt(A);127>=L?P++:2047>=L?P+=2:55296<=L&&57343>=L?(P+=4,++A):P+=3}return P},X=(h,P,A)=>{var L=B();if(P>>>=0,0<A){var V=P;A=P+A-1;for(var oe=0;oe<h.length;++oe){var Te=h.charCodeAt(oe);if(55296<=Te&&57343>=Te&&(Te=65536+((1023&Te)<<10)|1023&h.charCodeAt(++oe)),127>=Te){if(P>=A)break;L[P++>>>0]=Te}else{if(2047>=Te){if(P+1>=A)break;L[P++>>>0]=192|Te>>6}else{if(65535>=Te){if(P+2>=A)break;L[P++>>>0]=224|Te>>12}else{if(P+3>=A)break;L[P++>>>0]=240|Te>>18,L[P++>>>0]=128|Te>>12&63}L[P++>>>0]=128|Te>>6&63}L[P++>>>0]=128|63&Te}}L[P>>>0]=0,h=P-V}else h=0;return h};function j(h,P){if(a)return Ne(5,1,h,P)}function Y(h,P,A){if(a)return Ne(6,1,h,P,A)}function ne(h,P,A){return a?Ne(7,1,h,P,A):0}function he(h,P){if(a)return Ne(8,1,h,P)}function Se(h,P,A){if(a)return Ne(9,1,h,P,A)}function tt(h,P,A,L){if(a)return Ne(10,1,h,P,A,L)}function lt(h,P,A,L){if(a)return Ne(11,1,h,P,A,L)}function Ge(h,P,A,L){if(a)return Ne(12,1,h,P,A,L)}function St(h){if(a)return Ne(13,1,h)}function kt(h,P){if(a)return Ne(14,1,h,P)}function _r(h,P,A){if(a)return Ne(15,1,h,P,A)}var Rt,ur,Kr=()=>Me(""),Xt=h=>{for(var P="";B()[h>>>0];)P+=Rt[B()[h++>>>0]];return P},gr={},ss={};function dr(h,P,A={}){return(function(L,V,oe={}){var Te=V.name;if(!L)throw new ur(`type "${Te}" must have a positive integer typeid pointer`);if(ss.hasOwnProperty(L)){if(oe.Sb)return;throw new ur(`Cannot register type '${Te}' twice`)}ss[L]=V,gr.hasOwnProperty(L)&&(V=gr[L],delete gr[L],V.forEach(Oe=>Oe()))})(h,P,A)}var ds=(h,P,A)=>{switch(P){case 1:return A?L=>ue()[L>>>0]:L=>B()[L>>>0];case 2:return A?L=>F()[L>>>1>>>0]:L=>G()[L>>>1>>>0];case 4:return A?L=>N()[L>>>2>>>0]:L=>ae()[L>>>2>>>0];case 8:return A?L=>Z[L>>>3]:L=>Q[L>>>3];default:throw new TypeError(`invalid integer width (${P}): ${h}`)}};function ps(h,P,A){A>>>=0,dr(h>>>=0,{name:P=Xt(P>>>0),fromWireType:L=>L,toWireType:function(L,V){if(typeof V!="bigint"&&typeof V!="number")throw V=V===null?"null":(L=typeof V)=="object"||L==="array"||L==="function"?V.toString():""+V,new TypeError(`Cannot convert "${V}" to ${this.name}`);return typeof V=="number"&&(V=BigInt(V)),V},Cb:Lr,readValueFromPointer:ds(P,A,P.indexOf("u")==-1),Db:null})}var Lr=8;function As(h,P,A,L){dr(h>>>=0,{name:P=Xt(P>>>0),fromWireType:function(V){return!!V},toWireType:function(V,oe){return oe?A:L},Cb:Lr,readValueFromPointer:function(V){return this.fromWireType(B()[V>>>0])},Db:null})}var hs=[],nr=[];function qr(h){9<(h>>>=0)&&--nr[h+1]==0&&(nr[h]=void 0,hs.push(h))}var pr=h=>{if(!h)throw new ur("Cannot use deleted val. handle = "+h);return nr[h]},vr=h=>{switch(h){case void 0:return 2;case null:return 4;case!0:return 6;case!1:return 8;default:let P=hs.pop()||nr.length;return nr[P]=h,nr[P+1]=1,P}};function ns(h){return this.fromWireType(ae()[h>>>2>>>0])}var Fs={name:"emscripten::val",fromWireType:h=>{var P=pr(h);return qr(h),P},toWireType:(h,P)=>vr(P),Cb:Lr,readValueFromPointer:ns,Db:null};function Qr(h){return dr(h>>>0,Fs)}var Us=(h,P)=>{switch(P){case 4:return function(A){return this.fromWireType(ke()[A>>>2>>>0])};case 8:return function(A){return this.fromWireType(ve()[A>>>3>>>0])};default:throw new TypeError(`invalid float width (${P}): ${h}`)}};function zr(h,P,A){A>>>=0,dr(h>>>=0,{name:P=Xt(P>>>0),fromWireType:L=>L,toWireType:(L,V)=>V,Cb:Lr,readValueFromPointer:Us(P,A),Db:null})}function Le(h,P,A,L,V){if(h>>>=0,A>>>=0,P=Xt(P>>>0),V===-1&&(V=4294967295),V=Oe=>Oe,L===0){var oe=32-8*A;V=Oe=>Oe<<oe>>>oe}var Te=P.includes("unsigned")?function(Oe,qe){return qe>>>0}:function(Oe,qe){return qe};dr(h,{name:P,fromWireType:V,toWireType:Te,Cb:Lr,readValueFromPointer:ds(P,A,L!==0),Db:null})}function Re(h,P,A){function L(oe){var Te=ae()[oe>>>2>>>0];return oe=ae()[oe+4>>>2>>>0],new V(ue().buffer,oe,Te)}var V=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,BigInt64Array,BigUint64Array][P];dr(h>>>=0,{name:A=Xt(A>>>0),fromWireType:L,Cb:Lr,readValueFromPointer:L},{Sb:!0})}function rt(h,P){dr(h>>>=0,{name:P=Xt(P>>>0),fromWireType:function(A){for(var L,V=ae()[A>>>2>>>0],oe=A+4,Te=oe,Oe=0;Oe<=V;++Oe){var qe=oe+Oe;Oe!=V&&B()[qe>>>0]!=0||(Te=Wt(Te,qe-Te),L===void 0?L=Te:(L+="\0",L+=Te),Te=qe+1)}return Yr(A),L},toWireType:function(A,L){L instanceof ArrayBuffer&&(L=new Uint8Array(L));var V=typeof L=="string";if(!(V||L instanceof Uint8Array||L instanceof Uint8ClampedArray||L instanceof Int8Array))throw new ur("Cannot pass non-string to std::string");var oe=V?C(L):L.length,Te=Mn(4+oe+1),Oe=Te+4;if(ae()[Te>>>2>>>0]=oe,V)X(L,Oe,oe+1);else if(V)for(V=0;V<oe;++V){var qe=L.charCodeAt(V);if(255<qe)throw Yr(Te),new ur("String has UTF-16 code units that do not fit in 8 bits");B()[Oe+V>>>0]=qe}else for(V=0;V<oe;++V)B()[Oe+V>>>0]=L[V];return A!==null&&A.push(Yr,Te),Te},Cb:Lr,readValueFromPointer:ns,Db(A){Yr(A)}})}var Yt=typeof TextDecoder<"u"?new TextDecoder("utf-16le"):void 0,Ws=(h,P)=>{for(var A=h>>1,L=A+P/2;!(A>=L)&&G()[A>>>0];)++A;if(32<(A<<=1)-h&&Yt)return Yt.decode(B().slice(h,A));for(A="",L=0;!(L>=P/2);++L){var V=F()[h+2*L>>>1>>>0];if(V==0)break;A+=String.fromCharCode(V)}return A},Ds=(h,P,A)=>{if(A??=2147483647,2>A)return 0;var L=P;A=(A-=2)<2*h.length?A/2:h.length;for(var V=0;V<A;++V){var oe=h.charCodeAt(V);F()[P>>>1>>>0]=oe,P+=2}return F()[P>>>1>>>0]=0,P-L},Gs=h=>2*h.length,ms=(h,P)=>{for(var A=0,L="";!(A>=P/4);){var V=N()[h+4*A>>>2>>>0];if(V==0)break;++A,65536<=V?(V-=65536,L+=String.fromCharCode(55296|V>>10,56320|1023&V)):L+=String.fromCharCode(V)}return L},mn=(h,P,A)=>{if(P>>>=0,A??=2147483647,4>A)return 0;var L=P;A=L+A-4;for(var V=0;V<h.length;++V){var oe=h.charCodeAt(V);if(55296<=oe&&57343>=oe&&(oe=65536+((1023&oe)<<10)|1023&h.charCodeAt(++V)),N()[P>>>2>>>0]=oe,(P+=4)+4>A)break}return N()[P>>>2>>>0]=0,P-L},fn=h=>{for(var P=0,A=0;A<h.length;++A){var L=h.charCodeAt(A);55296<=L&&57343>=L&&++A,P+=4}return P};function Gn(h,P,A){if(h>>>=0,P>>>=0,A=Xt(A>>>=0),P===2)var L=Ws,V=Ds,oe=Gs,Te=Oe=>G()[Oe>>>1>>>0];else P===4&&(L=ms,V=mn,oe=fn,Te=Oe=>ae()[Oe>>>2>>>0]);dr(h,{name:A,fromWireType:Oe=>{for(var qe,it=ae()[Oe>>>2>>>0],yt=Oe+4,Ft=0;Ft<=it;++Ft){var Nt=Oe+4+Ft*P;Ft!=it&&Te(Nt)!=0||(yt=L(yt,Nt-yt),qe===void 0?qe=yt:(qe+="\0",qe+=yt),yt=Nt+P)}return Yr(Oe),qe},toWireType:(Oe,qe)=>{if(typeof qe!="string")throw new ur(`Cannot pass non-string to C++ string type ${A}`);var it=oe(qe),yt=Mn(4+it+P);return ae()[yt>>>2>>>0]=it/P,V(qe,yt+4,it+P),Oe!==null&&Oe.push(Yr,yt),yt},Cb:Lr,readValueFromPointer:ns,Db(Oe){Yr(Oe)}})}function le(h,P){dr(h>>>=0,{Tb:!0,name:P=Xt(P>>>0),Cb:0,fromWireType:()=>{},toWireType:()=>{}})}function k(h){vn(h>>>0,!o,1,!i,131072,!1),Gr()}var U=h=>{if(!te)try{if(h(),!(0<je))try{a?ti(E):Je(E)}catch(P){P instanceof De||P=="unwind"||f(0,P)}}catch(P){P instanceof De||P=="unwind"||f(0,P)}};function ee(h){h>>>=0,typeof Atomics.jc=="function"&&(Atomics.jc(N(),h>>>2,h).value.then(se),h+=128,Atomics.store(N(),h>>>2,1))}var se=()=>{var h=bn();h&&(ee(h),U(ri))};function me(h,P){(h>>>=0)==P>>>0?setTimeout(se):a?postMessage({Gb:h,Bb:"checkMailbox"}):(h=ft[h])&&h.postMessage({Bb:"checkMailbox"})}var Ce=[];function Ke(h,P,A,L,V){for(P>>>=0,L/=2,Ce.length=L,A=V>>>0>>>3,V=0;V<L;V++)Ce[V]=Z[A+2*V]?Z[A+2*V+1]:ve()[A+2*V+1>>>0];return(P?Ee[P]:Ko[h])(...Ce)}var Xe=()=>{je=0};function Ye(h){h>>>=0,a?postMessage({Bb:"cleanupThread",hc:h}):Mr(ft[h])}function Ue(h){}var $t=(h,P)=>{var A=ss[h];if(A===void 0)throw h=zi(h),A=Xt(h),Yr(h),new ur(`${P} has unknown type ${A}`);return A},wt=(h,P,A)=>{var L=[];return h=h.toWireType(L,A),L.length&&(ae()[P>>>2>>>0]=vr(L)),h};function rr(h,P,A){return P>>>=0,A>>>=0,h=pr(h>>>0),P=$t(P,"emval::as"),wt(P,A,h)}function xr(h,P){return P>>>=0,h=pr(h>>>0),(P=$t(P,"emval::as")).toWireType(null,h)}var qt=h=>{try{h()}catch(P){Me(P)}},sr=0,Gt=null,Vr=0,is=[],Ar={},Xr={},er=0,hr=null,Br=[];function Rr(h){return(function(P){if(!te){if(sr===0){var A=!1,L=!1;P((V=0)=>{if(!te&&(Vr=V,A=!0,L)){sr=2,qt(()=>Wi(Gt)),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.resume(),V=!1;try{var oe=(function(){var qe=N()[Gt+8>>>2>>>0];return qe=ut[Xr[qe]],--je,qe()})()}catch(qe){oe=qe,V=!0}var Te=!1;if(!Gt){var Oe=hr;Oe&&(hr=null,(V?Oe.reject:Oe.resolve)(oe),Te=!0)}if(V&&!Te)throw oe}}),L=!0,A||(sr=1,Gt=(function(){var V=Mn(65548),oe=V+12;ae()[V>>>2>>>0]=oe,ae()[V+4>>>2>>>0]=oe+65536,oe=is[0];var Te=Ar[oe];return Te===void 0&&(Te=er++,Ar[oe]=Te,Xr[Te]=oe),oe=Te,N()[V+8>>>2>>>0]=oe,V})(),typeof MainLoop<"u"&&MainLoop.Pb&&MainLoop.pause(),qt(()=>ni(Gt)))}else sr===2?(sr=0,qt(ii),Yr(Gt),Gt=null,Br.forEach(U)):Me(`invalid state: ${sr}`);return Vr}})(P=>{h().then(P)})}function fs(h){return h>>>=0,Rr(async()=>{var P=await pr(h);return vr(P)})}var wr=[];function os(h,P,A,L){return A>>>=0,L>>>=0,(h=wr[h>>>0])(null,P=pr(P>>>0),A,L)}var Tr={},Jt=h=>{var P=Tr[h];return P===void 0?Xt(h):P};function mr(h,P,A,L,V){return A>>>=0,L>>>=0,V>>>=0,(h=wr[h>>>0])(P=pr(P>>>0),P[A=Jt(A)],L,V)}var lr=()=>typeof globalThis=="object"?globalThis:Function("return this")();function Nr(h){return(h>>>=0)==0?vr(lr()):(h=Jt(h),vr(lr()[h]))}var en=h=>{var P=wr.length;return wr.push(h),P},Kn=(h,P)=>{for(var A=Array(h),L=0;L<h;++L)A[L]=$t(ae()[P+4*L>>>2>>>0],"parameter "+L);return A},Ks=(h,P)=>Object.defineProperty(P,"name",{value:h});function xo(h,P,A){var L=(P=Kn(h,P>>>0)).shift();h--;var V=`return function (obj, func, destructorsRef, args) {
`,oe=0,Te=[];A===0&&Te.push("obj");for(var Oe=["retType"],qe=[L],it=0;it<h;++it)Te.push("arg"+it),Oe.push("argType"+it),qe.push(P[it]),V+=`  var arg${it} = argType${it}.readValueFromPointer(args${oe?"+"+oe:""});
`,oe+=P[it].Cb;return V+=`  var rv = ${A===1?"new func":"func.call"}(${Te.join(", ")});
`,L.Tb||(Oe.push("emval_returnValue"),qe.push(wt),V+=`  return emval_returnValue(retType, destructorsRef, rv);
`),Oe.push(V+`};
`),h=(function(yt){var Ft=Function;if(!(Ft instanceof Function))throw new TypeError(`new_ called with constructor type ${typeof Ft} which is not a function`);var Nt=Ks(Ft.name||"unknownFunctionName",function(){});return Nt.prototype=Ft.prototype,Nt=new Nt,(yt=Ft.apply(Nt,yt))instanceof Object?yt:Nt})(Oe)(...qe),A=`methodCaller<(${P.map(yt=>yt.name).join(", ")}) => ${L.name}>`,en(Ks(A,h))}function To(h){return h=Jt(h>>>0),vr(s[h])}function Eo(h,P){return P>>>=0,h=pr(h>>>0),P=pr(P),vr(h[P])}function Po(h){9<(h>>>=0)&&(nr[h+1]+=1)}function Co(){return vr([])}function tn(h){h=pr(h>>>0);for(var P=Array(h.length),A=0;A<h.length;A++)P[A]=h[A];return vr(P)}function So(h){return vr(Jt(h>>>0))}function $o(){return vr({})}function ko(h){for(var P=pr(h>>>=0);P.length;){var A=P.pop();P.pop()(A)}qr(h)}function Io(h,P,A){P>>>=0,A>>>=0,h=pr(h>>>0),P=pr(P),A=pr(A),h[P]=A}function Ao(h,P){return P>>>=0,h=(h=$t(h>>>0,"_emval_take_value")).readValueFromPointer(P),vr(h)}function rn(h,P){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),P>>>=0,h=new Date(1e3*h),N()[P>>>2>>>0]=h.getUTCSeconds(),N()[P+4>>>2>>>0]=h.getUTCMinutes(),N()[P+8>>>2>>>0]=h.getUTCHours(),N()[P+12>>>2>>>0]=h.getUTCDate(),N()[P+16>>>2>>>0]=h.getUTCMonth(),N()[P+20>>>2>>>0]=h.getUTCFullYear()-1900,N()[P+24>>>2>>>0]=h.getUTCDay(),h=(h.getTime()-Date.UTC(h.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,N()[P+28>>>2>>>0]=h}var vi=h=>h%4==0&&(h%100!=0||h%400==0),xi=[0,31,60,91,121,152,182,213,244,274,305,335],Ti=[0,31,59,90,120,151,181,212,243,273,304,334];function Fo(h,P){h=-9007199254740992>h||9007199254740992<h?NaN:Number(h),P>>>=0,h=new Date(1e3*h),N()[P>>>2>>>0]=h.getSeconds(),N()[P+4>>>2>>>0]=h.getMinutes(),N()[P+8>>>2>>>0]=h.getHours(),N()[P+12>>>2>>>0]=h.getDate(),N()[P+16>>>2>>>0]=h.getMonth(),N()[P+20>>>2>>>0]=h.getFullYear()-1900,N()[P+24>>>2>>>0]=h.getDay();var A=(vi(h.getFullYear())?xi:Ti)[h.getMonth()]+h.getDate()-1|0;N()[P+28>>>2>>>0]=A,N()[P+36>>>2>>>0]=-60*h.getTimezoneOffset(),A=new Date(h.getFullYear(),6,1).getTimezoneOffset();var L=new Date(h.getFullYear(),0,1).getTimezoneOffset();h=0|(A!=L&&h.getTimezoneOffset()==Math.min(L,A)),N()[P+32>>>2>>>0]=h}function Do(h){h>>>=0;var P=new Date(N()[h+20>>>2>>>0]+1900,N()[h+16>>>2>>>0],N()[h+12>>>2>>>0],N()[h+8>>>2>>>0],N()[h+4>>>2>>>0],N()[h>>>2>>>0],0),A=N()[h+32>>>2>>>0],L=P.getTimezoneOffset(),V=new Date(P.getFullYear(),6,1).getTimezoneOffset(),oe=new Date(P.getFullYear(),0,1).getTimezoneOffset(),Te=Math.min(oe,V);return 0>A?N()[h+32>>>2>>>0]=+(V!=oe&&Te==L):0<A!=(Te==L)&&(V=Math.max(oe,V),P.setTime(P.getTime()+6e4*((0<A?Te:V)-L))),N()[h+24>>>2>>>0]=P.getDay(),A=(vi(P.getFullYear())?xi:Ti)[P.getMonth()]+P.getDate()-1|0,N()[h+28>>>2>>>0]=A,N()[h>>>2>>>0]=P.getSeconds(),N()[h+4>>>2>>>0]=P.getMinutes(),N()[h+8>>>2>>>0]=P.getHours(),N()[h+12>>>2>>>0]=P.getDate(),N()[h+16>>>2>>>0]=P.getMonth(),N()[h+20>>>2>>>0]=P.getYear(),h=P.getTime(),BigInt(isNaN(h)?-1:h/1e3)}function qn(h,P,A,L,V,oe,Te){return a?Ne(16,1,h,P,A,L,V,oe,Te):-52}function Ei(h,P,A,L,V,oe){if(a)return Ne(17,1,h,P,A,L,V,oe)}var sn={},Pi=()=>performance.timeOrigin+performance.now();function Ci(h,P){if(a)return Ne(18,1,h,P);if(sn[h]&&(clearTimeout(sn[h].id),delete sn[h]),!P)return 0;var A=setTimeout(()=>{delete sn[h],U(()=>Ni(h,performance.timeOrigin+performance.now()))},P);return sn[h]={id:A,qc:P},0}function Si(h,P,A,L){h>>>=0,P>>>=0,A>>>=0,L>>>=0;var V=new Date().getFullYear(),oe=new Date(V,0,1).getTimezoneOffset();V=new Date(V,6,1).getTimezoneOffset();var Te=Math.max(oe,V);ae()[h>>>2>>>0]=60*Te,N()[P>>>2>>>0]=+(oe!=V),h=(P=Oe=>{var qe=Math.abs(Oe);return`UTC${0<=Oe?"-":"+"}${String(Math.floor(qe/60)).padStart(2,"0")}${String(qe%60).padStart(2,"0")}`})(oe),P=P(V),V<oe?(X(h,A,17),X(P,L,17)):(X(h,L,17),X(P,A,17))}var Oo=()=>Date.now();function $i(h,P,A){return 0<=h&&3>=h?(h===0?h=Date.now():h=performance.timeOrigin+performance.now(),Z[A>>>0>>>3]=BigInt(Math.round(1e6*h)),0):28}var ki=[],Ii=(h,P)=>{ki.length=0;for(var A;A=B()[h++>>>0];){var L=A!=105;P+=(L&=A!=112)&&P%8?4:0,ki.push(A==112?ae()[P>>>2>>>0]:A==106?Z[P>>>3]:A==105?N()[P>>>2>>>0]:ve()[P>>>3>>>0]),P+=L?8:4}return ki};function Ai(h,P,A){return h>>>=0,P=Ii(P>>>0,A>>>0),Ee[h](...P)}function Fi(h,P,A){return h>>>=0,P=Ii(P>>>0,A>>>0),Ee[h](...P)}var Hn=()=>{};function Lo(h,P){return $(Wt(h>>>0,P>>>0))}var zo=()=>{throw je+=1,"unwind"};function Bo(){return 4294901760}var Ro=()=>navigator.hardwareConcurrency;function No(){return Me("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"),0}function jo(h){h>>>=0;var P=B().length;if(h<=P||4294901760<h)return!1;for(var A=1;4>=A;A*=2){var L=P*(1+.2/A);L=Math.min(L,h+100663296);e:{L=(Math.min(4294901760,65536*Math.ceil(Math.max(h,L)/65536))-v.buffer.byteLength+65535)/65536|0;try{v.grow(L),xe();var V=1;break e}catch{}V=void 0}if(V)return!0}return!1}var _n=()=>(Me("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"),0),nn={},Qn=h=>{h.forEach(P=>{_n()})};function Vo(){var h=Error().stack.toString().split(`
`);return h[0]=="Error"&&h.shift(),Qn(h),nn.Lb=_n(),nn.cc=h,nn.Lb}function Xn(h,P,A){if(h>>>=0,P>>>=0,nn.Lb==h)var L=nn.cc;else(L=Error().stack.toString().split(`
`))[0]=="Error"&&L.shift(),Qn(L);for(var V=3;L[V]&&_n()!=h;)++V;for(h=0;h<A&&L[h+V];++h)N()[P+4*h>>>2>>>0]=_n();return h}var gn,Yn={},Jn=()=>{if(!gn){var h,P={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:(typeof navigator=="object"&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:"./this.program"};for(h in Yn)Yn[h]===void 0?delete P[h]:P[h]=Yn[h];var A=[];for(h in P)A.push(`${h}=${P[h]}`);gn=A}return gn};function Os(h,P){if(a)return Ne(19,1,h,P);h>>>=0,P>>>=0;var A=0;return Jn().forEach((L,V)=>{var oe=P+A;for(V=ae()[h+4*V>>>2>>>0]=oe,oe=0;oe<L.length;++oe)ue()[V++>>>0]=L.charCodeAt(oe);ue()[V>>>0]=0,A+=L.length+1}),0}function Di(h,P){if(a)return Ne(20,1,h,P);h>>>=0,P>>>=0;var A=Jn();ae()[h>>>2>>>0]=A.length;var L=0;return A.forEach(V=>L+=V.length+1),ae()[P>>>2>>>0]=L,0}function Uo(h){return a?Ne(21,1,h):52}function Oi(h,P,A,L){return a?Ne(22,1,h,P,A,L):52}function Wo(h,P,A,L){return a?Ne(23,1,h,P,A,L):70}var Go=[null,[],[]];function Zn(h,P,A,L){if(a)return Ne(24,1,h,P,A,L);P>>>=0,A>>>=0,L>>>=0;for(var V=0,oe=0;oe<A;oe++){var Te=ae()[P>>>2>>>0],Oe=ae()[P+4>>>2>>>0];P+=8;for(var qe=0;qe<Oe;qe++){var it=B()[Te+qe>>>0],yt=Go[h];it===0||it===10?((h===1?y:$)(ks(yt)),yt.length=0):yt.push(it)}V+=Oe}return ae()[L>>>2>>>0]=V,0}a||(function(){for(var h=s.numThreads-1;h--;)rs();be.unshift(()=>{W++,(function(P){a?P():Promise.all(Ze.map(Or)).then(P)})(()=>Ie())})})();for(var Li=Array(256),wn=0;256>wn;++wn)Li[wn]=String.fromCharCode(wn);Rt=Li,ur=s.BindingError=class extends Error{constructor(h){super(h),this.name="BindingError"}},s.InternalError=class extends Error{constructor(h){super(h),this.name="InternalError"}},nr.push(0,1,void 0,1,null,1,!0,1,!1,1),s.count_emval_handles=()=>nr.length/2-5-hs.length;var ut,Ko=[et,He,js,Et,Is,j,Y,ne,he,Se,tt,lt,Ge,St,kt,_r,qn,Ei,Ci,Os,Di,Uo,Oi,Wo,Zn];(async function(){function h(L,V){return ut=L.exports,ut=(function(){var oe=ut,Te={};for(let[Oe,qe]of Object.entries(oe))Te[Oe]=typeof qe=="function"?(...it)=>{is.push(Oe);try{return qe(...it)}finally{te||(is.pop(),Gt&&sr===1&&is.length===0&&(sr=0,je+=1,qt(Ui),typeof Fibers<"u"&&Fibers.rc()))}}:qe;return Te})(),ut=(function(){var oe=ut,Te=qe=>it=>qe(it)>>>0,Oe=qe=>()=>qe()>>>0;return(oe=Object.assign({},oe)).Da=Te(oe.Da),oe.fb=Oe(oe.fb),oe.hb=Te(oe.hb),oe.tb=Te(oe.tb),oe.ub=Oe(oe.ub),oe.__cxa_get_exception_ptr=Te(oe.__cxa_get_exception_ptr),oe})(),At.push(ut.ib),T=V,Ie(),ut}W++;var P=ge();if(s.instantiateWasm)return new Promise(L=>{s.instantiateWasm(P,(V,oe)=>{h(V,oe),L(V.exports)})});if(a)return new Promise(L=>{Fe=V=>{var oe=new WebAssembly.Instance(V,ge());L(h(oe,V))}});de??=s.locateFile?s.locateFile?s.locateFile("ort-wasm-simd-threaded.jsep.wasm",w):w+"ort-wasm-simd-threaded.jsep.wasm":new URL("/muvera-browser/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href;try{var A=await(async function(L){var V=de;if(!re&&typeof WebAssembly.instantiateStreaming=="function"&&!ce(V))try{var oe=fetch(V,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(oe,L)}catch(Te){$(`wasm streaming compile failed: ${Te}`),$("falling back to ArrayBuffer instantiation")}return(async function(Te,Oe){try{var qe=await(async function(it){if(!re)try{var yt=await d(it);return new Uint8Array(yt)}catch{}if(it==de&&re)it=new Uint8Array(re);else{if(!u)throw"both async and sync fetching of the wasm failed";it=u(it)}return it})(Te);return await WebAssembly.instantiate(qe,Oe)}catch(it){$(`failed to asynchronously prepare wasm: ${it}`),Me(it)}})(V,L)})(P);return h(A.instance,A.module)}catch(L){return t(L),Promise.reject(L)}})();var zi=h=>(zi=ut.Da)(h),yn=()=>(yn=ut.Ea)();s._OrtInit=(h,P)=>(s._OrtInit=ut.Fa)(h,P),s._OrtGetLastError=(h,P)=>(s._OrtGetLastError=ut.Ga)(h,P),s._OrtCreateSessionOptions=(h,P,A,L,V,oe,Te,Oe,qe,it)=>(s._OrtCreateSessionOptions=ut.Ha)(h,P,A,L,V,oe,Te,Oe,qe,it),s._OrtAppendExecutionProvider=(h,P,A,L,V)=>(s._OrtAppendExecutionProvider=ut.Ia)(h,P,A,L,V),s._OrtAddFreeDimensionOverride=(h,P,A)=>(s._OrtAddFreeDimensionOverride=ut.Ja)(h,P,A),s._OrtAddSessionConfigEntry=(h,P,A)=>(s._OrtAddSessionConfigEntry=ut.Ka)(h,P,A),s._OrtReleaseSessionOptions=h=>(s._OrtReleaseSessionOptions=ut.La)(h),s._OrtCreateSession=(h,P,A)=>(s._OrtCreateSession=ut.Ma)(h,P,A),s._OrtReleaseSession=h=>(s._OrtReleaseSession=ut.Na)(h),s._OrtGetInputOutputCount=(h,P,A)=>(s._OrtGetInputOutputCount=ut.Oa)(h,P,A),s._OrtGetInputOutputMetadata=(h,P,A,L)=>(s._OrtGetInputOutputMetadata=ut.Pa)(h,P,A,L),s._OrtFree=h=>(s._OrtFree=ut.Qa)(h),s._OrtCreateTensor=(h,P,A,L,V,oe)=>(s._OrtCreateTensor=ut.Ra)(h,P,A,L,V,oe),s._OrtGetTensorData=(h,P,A,L,V)=>(s._OrtGetTensorData=ut.Sa)(h,P,A,L,V),s._OrtReleaseTensor=h=>(s._OrtReleaseTensor=ut.Ta)(h),s._OrtCreateRunOptions=(h,P,A,L)=>(s._OrtCreateRunOptions=ut.Ua)(h,P,A,L),s._OrtAddRunConfigEntry=(h,P,A)=>(s._OrtAddRunConfigEntry=ut.Va)(h,P,A),s._OrtReleaseRunOptions=h=>(s._OrtReleaseRunOptions=ut.Wa)(h),s._OrtCreateBinding=h=>(s._OrtCreateBinding=ut.Xa)(h),s._OrtBindInput=(h,P,A)=>(s._OrtBindInput=ut.Ya)(h,P,A),s._OrtBindOutput=(h,P,A,L)=>(s._OrtBindOutput=ut.Za)(h,P,A,L),s._OrtClearBoundOutputs=h=>(s._OrtClearBoundOutputs=ut._a)(h),s._OrtReleaseBinding=h=>(s._OrtReleaseBinding=ut.$a)(h),s._OrtRunWithBinding=(h,P,A,L,V)=>(s._OrtRunWithBinding=ut.ab)(h,P,A,L,V),s._OrtRun=(h,P,A,L,V,oe,Te,Oe)=>(s._OrtRun=ut.bb)(h,P,A,L,V,oe,Te,Oe),s._OrtEndProfiling=h=>(s._OrtEndProfiling=ut.cb)(h),s._JsepOutput=(h,P,A)=>(s._JsepOutput=ut.db)(h,P,A),s._JsepGetNodeName=h=>(s._JsepGetNodeName=ut.eb)(h);var bn=()=>(bn=ut.fb)(),Yr=s._free=h=>(Yr=s._free=ut.gb)(h),Mn=s._malloc=h=>(Mn=s._malloc=ut.hb)(h),vn=(h,P,A,L,V,oe)=>(vn=ut.kb)(h,P,A,L,V,oe),Bi=()=>(Bi=ut.lb)(),Ri=(h,P,A,L,V)=>(Ri=ut.mb)(h,P,A,L,V),ei=h=>(ei=ut.nb)(h),ti=h=>(ti=ut.ob)(h),Ni=(h,P)=>(Ni=ut.pb)(h,P),ri=()=>(ri=ut.qb)(),ji=(h,P)=>(ji=ut.rb)(h,P),xn=h=>(xn=ut.sb)(h),Tn=h=>(Tn=ut.tb)(h),si=()=>(si=ut.ub)(),Vi=s.dynCall_ii=(h,P)=>(Vi=s.dynCall_ii=ut.vb)(h,P),ni=h=>(ni=ut.wb)(h),Ui=()=>(Ui=ut.xb)(),Wi=h=>(Wi=ut.yb)(h),ii=()=>(ii=ut.zb)();return s.stackSave=()=>si(),s.stackRestore=h=>xn(h),s.stackAlloc=h=>Tn(h),s.setValue=function(h,P,A="i8"){switch(A.endsWith("*")&&(A="*"),A){case"i1":case"i8":ue()[h>>>0]=P;break;case"i16":F()[h>>>1>>>0]=P;break;case"i32":N()[h>>>2>>>0]=P;break;case"i64":Z[h>>>3]=BigInt(P);break;case"float":ke()[h>>>2>>>0]=P;break;case"double":ve()[h>>>3>>>0]=P;break;case"*":ae()[h>>>2>>>0]=P;break;default:Me(`invalid type for setValue: ${A}`)}},s.getValue=function(h,P="i8"){switch(P.endsWith("*")&&(P="*"),P){case"i1":case"i8":return ue()[h>>>0];case"i16":return F()[h>>>1>>>0];case"i32":return N()[h>>>2>>>0];case"i64":return Z[h>>>3];case"float":return ke()[h>>>2>>>0];case"double":return ve()[h>>>3>>>0];case"*":return ae()[h>>>2>>>0];default:Me(`invalid type for getValue: ${P}`)}},s.UTF8ToString=Wt,s.stringToUTF8=X,s.lengthBytesUTF8=C,(function h(){if(0<W)_e=h;else if(a)r(s),H();else{for(;0<be.length;)be.shift()(s);0<W?_e=h:(s.calledRun=!0,te||(H(),r(s)))}})(),s.PTR_SIZE=4,n}),fb=Sc,R_=globalThis.self?.name?.startsWith("em-pthread"),R_&&Sc()}),$c,Iu,N_,Jr,_b,ga,j_,V_,kc,U_,Ic,gb,Ac,wb,sd=Be(()=>{rd(),$c=typeof location>"u"?void 0:location.origin,Iu=import.meta.url>"file:"&&import.meta.url<"file;",N_=()=>{{if(Iu){let e=URL;return new URL(new e("ort.bundle.min.mjs",import.meta.url).href,$c).href}return import.meta.url}},Jr=N_(),_b=()=>{if(Jr&&!Jr.startsWith("blob:"))return Jr.substring(0,Jr.lastIndexOf("/")+1)},ga=(e,r)=>{try{let t=r??Jr;return(t?new URL(e,t):new URL(e)).origin===$c}catch{return!1}},j_=(e,r)=>{let t=r??Jr;try{return(t?new URL(e,t):new URL(e)).href}catch{return}},V_=(e,r)=>`${r??"./"}${e}`,kc=async e=>{let r=await(await fetch(e,{credentials:"same-origin"})).blob();return URL.createObjectURL(r)},U_=async e=>(await import(e)).default,Ic=(D2(),wo(pb)).default,gb=async()=>{if(!Jr)throw new Error("Failed to load proxy worker: cannot determine the script source URL.");if(ga(Jr))return[void 0,Ic()];let e=await kc(Jr);return[e,Ic(e)]},Ac=(O2(),wo(mb)).default,wb=async(e,r,t)=>{if(!e&&!r&&Ac&&Jr&&ga(Jr))return[void 0,Ac];{let s="ort-wasm-simd-threaded.jsep.mjs",n=e??j_(s,r),i=t&&n&&!ga(n,r),o=i?await kc(n):n??V_(s,r);return[i?o:void 0,await U_(o)]}}}),Fc,wa,Xi,Dc,W_,G_,K_,nd,Qt,Un=Be(()=>{sd(),wa=!1,Xi=!1,Dc=!1,W_=()=>{if(typeof SharedArrayBuffer>"u")return!1;try{return typeof MessageChannel<"u"&&new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}},G_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,30,1,28,0,65,0,253,15,253,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,253,186,1,26,11]))}catch{return!1}},K_=()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,5,1,96,0,1,123,3,2,1,0,10,19,1,17,0,65,1,253,15,65,2,253,15,65,3,253,15,253,147,2,11]))}catch{return!1}},nd=async e=>{if(wa)return Promise.resolve();if(Xi)throw new Error("multiple calls to 'initializeWebAssembly()' detected.");if(Dc)throw new Error("previous call to 'initializeWebAssembly()' failed.");Xi=!0;let r=e.initTimeout,t=e.numThreads;if(e.simd!==!1){if(e.simd==="relaxed"){if(!K_())throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.")}else if(!G_())throw new Error("WebAssembly SIMD is not supported in the current environment.")}let s=W_();t>1&&!s&&(typeof self<"u"&&!self.crossOriginIsolated&&console.warn("env.wasm.numThreads is set to "+t+", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."),console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."),e.numThreads=t=1);let n=e.wasmPaths,i=typeof n=="string"?n:void 0,o=n?.mjs,a=o?.href??o,l=n?.wasm,c=l?.href??l,p=e.wasmBinary,[d,u]=await wb(a,i,t>1),_=!1,f=[];if(r>0&&f.push(new Promise(w=>{setTimeout(()=>{_=!0,w()},r)})),f.push(new Promise((w,I)=>{let M={numThreads:t};if(p)M.wasmBinary=p;else if(c||i)M.locateFile=y=>c??i+y;else if(a&&a.indexOf("blob:")!==0)M.locateFile=y=>new URL(y,a).href;else if(d){let y=_b();y&&(M.locateFile=$=>y+$)}u(M).then(y=>{Xi=!1,wa=!0,Fc=y,w(),d&&URL.revokeObjectURL(d)},y=>{Xi=!1,Dc=!0,I(y)})})),await Promise.race(f),_)throw new Error(`WebAssembly backend initializing failed due to timeout: ${r}ms`)},Qt=()=>{if(wa&&Fc)return Fc;throw new Error("WebAssembly is not initialized yet.")}}),xs,Ua,Ut,id=Be(()=>{Un(),xs=(e,r)=>{let t=Qt(),s=t.lengthBytesUTF8(e)+1,n=t._malloc(s);return t.stringToUTF8(e,n,s),r.push(n),n},Ua=(e,r,t,s)=>{if(typeof e=="object"&&e!==null){if(t.has(e))throw new Error("Circular reference in options");t.add(e)}Object.entries(e).forEach(([n,i])=>{let o=r?r+n:n;if(typeof i=="object")Ua(i,o+".",t,s);else if(typeof i=="string"||typeof i=="number")s(o,i.toString());else if(typeof i=="boolean")s(o,i?"1":"0");else throw new Error(`Can't handle extra config type: ${typeof i}`)})},Ut=e=>{let r=Qt(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetLastError(n,n+s);let i=Number(r.getValue(n,s===4?"i32":"i64")),o=r.getValue(n+s,"*"),a=o?r.UTF8ToString(o):"";throw new Error(`${e} ERROR_CODE: ${i}, ERROR_MESSAGE: ${a}`)}finally{r.stackRestore(t)}}}),yb,L2=Be(()=>{Un(),id(),yb=e=>{let r=Qt(),t=0,s=[],n=e||{};try{if(e?.logSeverityLevel===void 0)n.logSeverityLevel=2;else if(typeof e.logSeverityLevel!="number"||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(e?.logVerbosityLevel===void 0)n.logVerbosityLevel=0;else if(typeof e.logVerbosityLevel!="number"||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);e?.terminate===void 0&&(n.terminate=!1);let i=0;return e?.tag!==void 0&&(i=xs(e.tag,s)),t=r._OrtCreateRunOptions(n.logSeverityLevel,n.logVerbosityLevel,!!n.terminate,i),t===0&&Ut("Can't create run options."),e?.extra!==void 0&&Ua(e.extra,"",new WeakSet,(o,a)=>{let l=xs(o,s),c=xs(a,s);r._OrtAddRunConfigEntry(t,l,c)!==0&&Ut(`Can't set a run config entry: ${o} - ${a}.`)}),[t,s]}catch(i){throw t!==0&&r._OrtReleaseRunOptions(t),s.forEach(o=>r._free(o)),i}}}),q_,H_,Q_,Yi,X_,bb,z2=Be(()=>{Un(),id(),q_=e=>{switch(e){case"disabled":return 0;case"basic":return 1;case"extended":return 2;case"all":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}},H_=e=>{switch(e){case"sequential":return 0;case"parallel":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}},Q_=e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});let r=e.extra.session;r.use_ort_model_bytes_directly||(r.use_ort_model_bytes_directly="1"),e.executionProviders&&e.executionProviders.some(t=>(typeof t=="string"?t:t.name)==="webgpu")&&(e.enableMemPattern=!1)},Yi=(e,r,t,s)=>{let n=xs(r,s),i=xs(t,s);Qt()._OrtAddSessionConfigEntry(e,n,i)!==0&&Ut(`Can't set a session config entry: ${r} - ${t}.`)},X_=async(e,r,t)=>{for(let s of r){let n=typeof s=="string"?s:s.name,i=[];switch(n){case"webnn":if(n="WEBNN",typeof s!="string"){let p=s?.deviceType;p&&Yi(e,"deviceType",p,t)}break;case"webgpu":if(n="JS",typeof s!="string"){let p=s;if(p?.preferredLayout){if(p.preferredLayout!=="NCHW"&&p.preferredLayout!=="NHWC")throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${p.preferredLayout}`);Yi(e,"preferredLayout",p.preferredLayout,t)}}break;case"wasm":case"cpu":continue;default:throw new Error(`not supported execution provider: ${n}`)}let o=xs(n,t),a=i.length,l=0,c=0;if(a>0){l=Qt()._malloc(a*Qt().PTR_SIZE),t.push(l),c=Qt()._malloc(a*Qt().PTR_SIZE),t.push(c);for(let p=0;p<a;p++)Qt().setValue(l+p*Qt().PTR_SIZE,i[p][0],"*"),Qt().setValue(c+p*Qt().PTR_SIZE,i[p][1],"*")}await Qt()._OrtAppendExecutionProvider(e,o,l,c,a)!==0&&Ut(`Can't append execution provider: ${n}.`)}},bb=async e=>{let r=Qt(),t=0,s=[],n=e||{};Q_(n);try{let i=q_(n.graphOptimizationLevel??"all"),o=H_(n.executionMode??"sequential"),a=typeof n.logId=="string"?xs(n.logId,s):0,l=n.logSeverityLevel??2;if(!Number.isInteger(l)||l<0||l>4)throw new Error(`log serverity level is not valid: ${l}`);let c=n.logVerbosityLevel??0;if(!Number.isInteger(c)||c<0||c>4)throw new Error(`log verbosity level is not valid: ${c}`);let p=typeof n.optimizedModelFilePath=="string"?xs(n.optimizedModelFilePath,s):0;if(t=r._OrtCreateSessionOptions(i,!!n.enableCpuMemArena,!!n.enableMemPattern,o,!!n.enableProfiling,0,a,l,c,p),t===0&&Ut("Can't create session options."),n.executionProviders&&await X_(t,n.executionProviders,s),n.enableGraphCapture!==void 0){if(typeof n.enableGraphCapture!="boolean")throw new Error(`enableGraphCapture must be a boolean value: ${n.enableGraphCapture}`);Yi(t,"enableGraphCapture",n.enableGraphCapture.toString(),s)}if(n.freeDimensionOverrides)for(let[d,u]of Object.entries(n.freeDimensionOverrides)){if(typeof d!="string")throw new Error(`free dimension override name must be a string: ${d}`);if(typeof u!="number"||!Number.isInteger(u)||u<0)throw new Error(`free dimension override value must be a non-negative integer: ${u}`);let _=xs(d,s);r._OrtAddFreeDimensionOverride(t,_,u)!==0&&Ut(`Can't set a free dimension override: ${d} - ${u}.`)}return n.extra!==void 0&&Ua(n.extra,"",new WeakSet,(d,u)=>{Yi(t,d,u,s)}),[t,s]}catch(i){throw t!==0&&r._OrtReleaseSessionOptions(t)!==0&&Ut("Can't release session options."),s.forEach(o=>r._free(o)),i}}}),hi,Qs,On,od,Wa,ad,ld,Au,gt=Be(()=>{hi=e=>{switch(e){case"int8":return 3;case"uint8":return 2;case"bool":return 9;case"int16":return 5;case"uint16":return 4;case"int32":return 6;case"uint32":return 12;case"float16":return 10;case"float32":return 1;case"float64":return 11;case"string":return 8;case"int64":return 7;case"uint64":return 13;case"int4":return 22;case"uint4":return 21;default:throw new Error(`unsupported data type: ${e}`)}},Qs=e=>{switch(e){case 3:return"int8";case 2:return"uint8";case 9:return"bool";case 5:return"int16";case 4:return"uint16";case 6:return"int32";case 12:return"uint32";case 10:return"float16";case 1:return"float32";case 11:return"float64";case 8:return"string";case 7:return"int64";case 13:return"uint64";case 22:return"int4";case 21:return"uint4";default:throw new Error(`unsupported data type: ${e}`)}},On=(e,r)=>{let t=[-1,4,1,1,2,2,4,8,-1,1,2,8,4,8,-1,-1,-1,-1,-1,-1,-1,.5,.5][e],s=typeof r=="number"?r:r.reduce((n,i)=>n*i,1);return t>0?Math.ceil(s*t):void 0},od=e=>{switch(e){case"float16":return typeof Float16Array<"u"&&Float16Array.from?Float16Array:Uint16Array;case"float32":return Float32Array;case"uint8":return Uint8Array;case"int8":return Int8Array;case"uint16":return Uint16Array;case"int16":return Int16Array;case"int32":return Int32Array;case"bool":return Uint8Array;case"float64":return Float64Array;case"uint32":return Uint32Array;case"int64":return BigInt64Array;case"uint64":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}},Wa=e=>{switch(e){case"verbose":return 0;case"info":return 1;case"warning":return 2;case"error":return 3;case"fatal":return 4;default:throw new Error(`unsupported logging level: ${e}`)}},ad=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",ld=e=>e==="float32"||e==="float16"||e==="int32"||e==="int64"||e==="uint32"||e==="uint64"||e==="int8"||e==="uint8"||e==="bool"||e==="uint4"||e==="int4",Au=e=>{switch(e){case"none":return 0;case"cpu":return 1;case"cpu-pinned":return 2;case"texture":return 3;case"gpu-buffer":return 4;case"ml-tensor":return 5;default:throw new Error(`unsupported data location: ${e}`)}}}),cd,Mb=Be(()=>{rd(),cd=async e=>{if(typeof e=="string"){let r=await fetch(e);if(!r.ok)throw new Error(`failed to load external data file: ${e}`);let t=r.headers.get("Content-Length"),s=t?parseInt(t,10):0;if(s<1073741824)return new Uint8Array(await r.arrayBuffer());{if(!r.body)throw new Error(`failed to load external data file: ${e}, no response body.`);let n=r.body.getReader(),i;try{i=new ArrayBuffer(s)}catch(a){if(a instanceof RangeError){let l=Math.ceil(s/65536);i=new WebAssembly.Memory({initial:l,maximum:l}).buffer}else throw a}let o=0;for(;;){let{done:a,value:l}=await n.read();if(a)break;let c=l.byteLength;new Uint8Array(i,o,c).set(l),o+=c}return new Uint8Array(i,0,s)}}else return e instanceof Blob?new Uint8Array(await e.arrayBuffer()):e instanceof Uint8Array?e:new Uint8Array(e)}}),Y_,J_,Z_,eg,ud,tg,Dt,Ys=Be(()=>{gt(),Y_=["V","I","W","E","F"],J_=(e,r)=>{console.log(`[${Y_[e]},${new Date().toISOString()}]${r}`)},ud=(e,r)=>{Z_=e,eg=r},tg=(e,r)=>{let t=Wa(e),s=Wa(Z_);t>=s&&J_(t,typeof r=="function"?r():r)},Dt=(...e)=>{eg&&tg(...e)}}),rg,yi,ye,Ga,vb,xb,Tb,vt=Be(()=>{rg=class{static calcMatMulShape(e,r){return e[1]!==r[0]?void 0:[e[0],r[1]]}},yi=class{static calcShape(e,r,t=!1){let s=e.length,n=r.length;if(s===0)return r;if(n===0)return e;let i=Math.max(e.length,r.length),o=new Array(i);if(t){if(s<2||n<2)return;let a=rg.calcMatMulShape([e[s-2],e[s-1]],[r[n-2],r[n-1]]);if(a===void 0)return;[o[i-2],o[i-1]]=a}for(let a=t?3:1;a<=i;a++){let l=s-a<0?1:e[s-a],c=n-a<0?1:r[n-a];if(l!==c&&l>1&&c>1)return;let p=Math.max(l,c);if(l&&c)o[i-a]=Math.max(l,c);else{if(p>1)return;o[i-a]=0}}return o}static isValidBroadcast(e,r){let t=e.length,s=r.length;if(t>s)return!1;for(let n=1;n<=t;n++)if(e[t-n]!==1&&e[t-n]!==r[s-n])return!1;return!0}},ye=class Oa{static size(r){return Oa.getSizeFromDimensionRange(r,0,r.length)}static convertShape(r,t=4){let s=r.length;if(s===0)return[];let n=new Array(s),i=s-1;for(;i>=0;){if(r[i]%t===0){n[i]=r[i]/t;break}if(t%r[i]!==0)throw new Error("cannot convert shape");n[i]=1,t/=r[i],i--}for(i--;i>=0;i--)n[i]=r[i];return n}static sizeFromDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeFromDimension as Tensor has ${r.length} dimensions.`);return Oa.getSizeFromDimensionRange(r,t,r.length)}static sizeToDimension(r,t){if(t<0||t>r.length)throw new Error(`invalid dimension of ${t} for sizeToDimension as Tensor has ${r.length} dimensions.`);return Oa.getSizeFromDimensionRange(r,0,t)}static getSizeFromDimensionRange(r,t,s){let n=1;for(let i=t;i<s;i++){if(r[i]<0)throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");n*=Number(r[i])}return n}static computeStrides(r){let t=r.length;if(t===0)return[];if(t===1)return[1];let s=new Array(t);s[t-1]=1,s[t-2]=r[t-1];for(let n=t-3;n>=0;--n)s[n]=s[n+1]*r[n+1];return s}static normalizeAxis(r,t){if(r<-t&&r>=t)throw new Error("unsupported axis for this operation.");return r<0?r+t:r}static normalizeAxes(r,t){return r.map(s=>this.normalizeAxis(s,t??r.length))}static sortBasedOnPerm(r,t){return t?t.map(s=>r[s]):r.slice().reverse()}static padShape(r,t){let s=r.length;return r.map((n,i)=>n+t[i]+t[i+s])}static areEqual(r,t){return r.length!==t.length?!1:r.every((s,n)=>s===t[n])}},Ga=class co{static adjustPoolAttributes(r,t,s,n,i,o){if(!r&&s.length!==t.length-2)throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");if(r)for(let a=0;a<t.length-2;a++)a>=s.length?s.push(t[a+2]):s[a]=t[a+2];for(let a=0;a<s.length;a++)if(a<n.length){if(n[a]<0)throw new Error("strides should be greater than or equal to 1")}else n.push(1);for(let a=0;a<s.length;a++)if(a<i.length){if(i[a]<0)throw new Error("dilations should be greater than or equal to 1")}else i.push(1);for(let a=0;a<s.length*2;a++)if(a<o.length){if(o[a]<0)throw new Error("pad should be greater than or equal to 1")}else o.push(0);for(let a=0;a<s.length;a++){if(s[a]<=0)throw new Error("kernel shapes need to be greater than 0");if(o[a]>=s[a]||o[a+s.length]>=s[a])throw new Error("pads should be smaller than kernel")}}static adjustPadsBasedOnAutoPad(r,t,s,n,i,o,a){if(a){if(i.length!==2*(r.length-2))throw new Error("length of pads should be twice the length of data dimensions");if(t.length!==r.length-2)throw new Error("length of strides should be the length of data dimensions");if(n.length!==r.length-2)throw new Error("length of kernel shapes should be the length of data dimensions");for(let l=0;l<r.length-2;l++)co.adjustPadAndReturnShape(r[l+(o?1:2)],t[l],s[l],n[l],i,l,l+r.length-2,a)}}static computePoolOutputShape(r,t,s,n,i,o,a){if(t.length<=0)throw new Error("input shape must be of size greater than 0");let l=[t[0],t[1]];return co.computeShapeHelper(r,t,l,s,n,i,o,a),l}static computeConvOutputShape(r,t,s,n,i,o,a){if(r.length<=0||t.length<=0)throw new Error("invalid input tensor dims or invalid filter tensor dims");let l=[r[0],t[0]];return co.computeShapeHelper(!1,r,l,s,n,i,o,a),l}static computeShapeHelper(r,t,s,n,i,o,a,l){if(r)for(let c=0;c<t.length-2;c++)s.push(1);else for(let c=0;c<t.length-2;c++)s.push(co.adjustPadAndReturnShape(t[c+2],n[c],i[c],o[c],a,c,c+t.length-2,l))}static adjustPadAndReturnShape(r,t,s,n,i,o,a,l){let c=s*(n-1)+1;if(l&&l!=="NOTSET")switch(l){case"VALID":return i[o]=0,i[a]=0,Math.floor((r-c)/t+1);case"SAME_LOWER":case"SAME_UPPER":if(s!==1)throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");{let p=((r+t-1)/t-1)*t+n-r;return i[o]=Math.floor(l==="SAME_LOWER"?(p+1)/2:p/2),i[a]=p-i[o],Math.floor((r+p-n)/t+1)}default:throw new Error("Unsupported AutoPad type")}else return Math.floor((r+i[o]+i[a]-c)/t+1)}},vb=class{static getShapeOfGemmResult(e,r,t,s,n){if(e.length!==2||t.length!==2)throw new Error("shape need to be of size 2");let i,o,a;r?(i=e[1],o=e[0]):(i=e[0],o=e[1]);let l=-1;if(s?(a=t[0],l=1):(a=t[1],l=0),t[l]!==o)throw new Error("dimension mismatch");if(i<=0||a<=0||o<=0)throw new Error("invalid shape specified");if(n&&!yi.isValidBroadcast(n,[i,a]))throw new Error("gemm: invalid bias shape for broadcast");return[i,a,o]}},xb=-34028234663852886e22,Tb=34028234663852886e22}),dd,Eb=Be(()=>{gt(),dd=(e,r)=>new(od(r))(e)}),Fu,Oc,sg,Lc,ng,zc,Bc,Rc,ig,Pb,B2=Be(()=>{Ys(),Fu=(e,r=!0)=>{if(e.byteLength%8!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 8 (BigInt).");let t=e.byteLength/8,s=new BigInt64Array(e.buffer,e.byteOffset,t),n=new Int32Array(t);for(let i=0;i<t;i++){let o=s[i];if(o>2147483647n||o<-2147483648n)throw new Error(`Overflow occurred when converting BigInt to Int32 at index ${i}: ${o}`);n[i]=Number(o)}return r?new Uint8Array(n.buffer):n},Oc=(e,r=!0)=>{if(e.byteLength%4!==0)throw new Error("Invalid Uint8Array length - must be a multiple of 4 (Int32).");let t=e.byteLength/4,s=new Int32Array(e.buffer,e.byteOffset,t),n=BigInt64Array.from(s,BigInt);return r?new Uint8Array(n.buffer):n},sg=1,Lc=()=>sg++,ng=new Map([["float32",32],["float16",16],["int32",32],["uint32",32],["int64",64],["uint64",64],["int8",8],["uint8",8],["int4",4],["uint4",4]]),zc=(e,r)=>{let t=ng.get(e);if(!t)throw new Error("Unsupported data type.");return r.length>0?Math.ceil(r.reduce((s,n)=>s*n)*t/8):0},Bc=class{constructor(e){this.shouldConvertInt64toInt32=!1,this.isInt64ToInt32Converted=!1;let{sessionId:r,context:t,tensor:s,dataType:n,shape:i,shouldConvertInt64toInt32:o=!1}=e;this.sessionId=r,this.mlContext=t,this.mlTensor=s,this.dataType=n,this.tensorShape=i,this.shouldConvertInt64toInt32=o}get tensor(){return this.mlTensor}get type(){return this.dataType}get shape(){return this.tensorShape}get byteLength(){return zc(this.dataType,this.tensorShape)}destroy(){Dt("verbose",()=>"[WebNN] TensorWrapper.destroy"),this.mlTensor.destroy()}write(e){this.mlContext.writeTensor(this.mlTensor,e)}async read(e,r){if(e){let t=await this.mlContext.readTensor(this.mlTensor),s=Oc(new Uint8Array(t));if(r){(r instanceof ArrayBuffer?new Uint8Array(r):new Uint8Array(r.buffer,r.byteOffset,r.byteLength)).set(s);return}else return s.buffer}else return r?this.mlContext.readTensor(this.mlTensor,r):this.mlContext.readTensor(this.mlTensor)}canReuseTensor(e,r,t){return this.mlContext===e&&this.dataType===r&&this.tensorShape.length===t.length&&this.tensorShape.every((s,n)=>s===t[n])}setIsInt64ToInt32Converted(e){this.isInt64ToInt32Converted=e}},Rc=class{constructor(e,r){this.tensorManager=e,this.wrapper=r}get tensorWrapper(){return this.wrapper}releaseTensor(){this.tensorWrapper&&(this.tensorManager.releaseTensor(this.tensorWrapper),this.wrapper=void 0)}async ensureTensor(e,r,t,s){let n=r,i=this.tensorManager.getMLContext(e),o=n==="int64"&&!i.opSupportLimits().input.dataTypes.includes("int64");if(o&&(n="int32",Dt("verbose",()=>"[WebNN] TensorIdTracker.ensureTensor: convert dataType from int64 to int32")),this.wrapper){if(this.wrapper.canReuseTensor(i,n,t))return this.wrapper.tensor;if(s){if(this.wrapper.byteLength!==zc(n,t))throw new Error("Unable to copy data to tensor with different size.");this.activeUpload=new Uint8Array(await this.wrapper.read())}this.tensorManager.releaseTensor(this.wrapper)}let a=typeof MLTensorUsage>"u"?void 0:MLTensorUsage.READ|MLTensorUsage.WRITE;return this.wrapper=await this.tensorManager.getCachedTensor(e,n,t,a,!0,!0,o),s&&this.activeUpload&&(this.wrapper.write(this.activeUpload),this.activeUpload=void 0),this.wrapper.tensor}upload(e){let r=e;if(this.wrapper)if(this.wrapper.shouldConvertInt64toInt32&&(r=Fu(e,!0),this.wrapper.setIsInt64ToInt32Converted(!0)),r.byteLength===this.wrapper.byteLength){this.wrapper.write(r);return}else Dt("verbose",()=>"Data size does not match tensor size. Releasing tensor."),this.releaseTensor();this.activeUpload?this.activeUpload.set(r):this.activeUpload=new Uint8Array(r)}async download(e){if(this.activeUpload){let r=this.wrapper?.isInt64ToInt32Converted?Oc(this.activeUpload):this.activeUpload;if(e){e instanceof ArrayBuffer?new Uint8Array(e).set(r):new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(r);return}else return r.buffer}if(!this.wrapper)throw new Error("Tensor has not been created.");return e?this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32,e):this.wrapper.read(this.wrapper?.shouldConvertInt64toInt32)}},ig=class{constructor(e){this.backend=e,this.tensorTrackersById=new Map,this.freeTensors=[],this.externalTensors=new Set}getMLContext(e){let r=this.backend.getMLContext(e);if(!r)throw new Error("MLContext not found for session.");return r}reserveTensorId(){let e=Lc();return this.tensorTrackersById.set(e,new Rc(this)),e}releaseTensorId(e){let r=this.tensorTrackersById.get(e);r&&(this.tensorTrackersById.delete(e),r.tensorWrapper&&this.releaseTensor(r.tensorWrapper))}async ensureTensor(e,r,t,s,n){Dt("verbose",()=>`[WebNN] TensorManager.ensureTensor {tensorId: ${r}, dataType: ${t}, shape: ${s}, copyOld: ${n}}`);let i=this.tensorTrackersById.get(r);if(!i)throw new Error("Tensor not found.");return i.ensureTensor(e,t,s,n)}upload(e,r){let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");t.upload(r)}async download(e,r){Dt("verbose",()=>`[WebNN] TensorManager.download {tensorId: ${e}, dstBuffer: ${r?.byteLength}}`);let t=this.tensorTrackersById.get(e);if(!t)throw new Error("Tensor not found.");return t.download(r)}releaseTensorsForSession(e){for(let r of this.freeTensors)r.sessionId===e&&r.destroy();this.freeTensors=this.freeTensors.filter(r=>r.sessionId!==e)}registerTensor(e,r,t,s){let n=this.getMLContext(e),i=Lc(),o=new Bc({sessionId:e,context:n,tensor:r,dataType:t,shape:s});return this.tensorTrackersById.set(i,new Rc(this,o)),this.externalTensors.add(o),i}async getCachedTensor(e,r,t,s,n,i,o=!1){let a=this.getMLContext(e);for(let[c,p]of this.freeTensors.entries())if(p.canReuseTensor(a,r,t)){Dt("verbose",()=>`[WebNN] Reusing tensor {dataType: ${r}, shape: ${t}}`);let d=this.freeTensors.splice(c,1)[0];return d.sessionId=e,d}Dt("verbose",()=>`[WebNN] MLContext.createTensor {dataType: ${r}, shape: ${t}}`);let l=await a.createTensor({dataType:r,shape:t,dimensions:t,usage:s,writable:n,readable:i});return new Bc({sessionId:e,context:a,tensor:l,dataType:r,shape:t,shouldConvertInt64toInt32:o})}releaseTensor(e){this.externalTensors.has(e)&&this.externalTensors.delete(e),this.freeTensors.push(e)}},Pb=(...e)=>new ig(...e)}),ya,og,Cb,R2=Be(()=>{gt(),Un(),Eb(),B2(),Ys(),ya=new Map([[1,"float32"],[10,"float16"],[6,"int32"],[12,"uint32"],[7,"int64"],[13,"uint64"],[22,"int4"],[21,"uint4"],[3,"int8"],[2,"uint8"],[9,"uint8"]]),og=(e,r)=>{if(e===r)return!0;if(e===void 0||r===void 0)return!1;let t=Object.keys(e).sort(),s=Object.keys(r).sort();return t.length===s.length&&t.every((n,i)=>n===s[i]&&e[n]===r[n])},Cb=class{constructor(e){this.tensorManager=Pb(this),this.mlContextBySessionId=new Map,this.sessionIdsByMLContext=new Map,this.mlContextCache=[],this.sessionGraphInputs=new Map,this.temporaryGraphInputs=[],this.temporarySessionTensorIds=new Map,ud(e.logLevel,!!e.debug)}get currentSessionId(){if(this.activeSessionId===void 0)throw new Error("No active session");return this.activeSessionId}onRunStart(e){Dt("verbose",()=>`[WebNN] onRunStart {sessionId: ${e}}`),this.activeSessionId=e}onRunEnd(e){Dt("verbose",()=>`[WebNN] onRunEnd {sessionId: ${e}}`);let r=this.temporarySessionTensorIds.get(e);if(r){for(let t of r)Dt("verbose",()=>`[WebNN] releasing temporary tensor {tensorId: ${t}}`),this.tensorManager.releaseTensorId(t);this.temporarySessionTensorIds.delete(e),this.activeSessionId=void 0}}async createMLContext(e){if(e instanceof GPUDevice){let t=this.mlContextCache.findIndex(s=>s.gpuDevice===e);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext(e);return this.mlContextCache.push({gpuDevice:e,mlContext:s}),s}}else if(e===void 0){let t=this.mlContextCache.findIndex(s=>s.options===void 0&&s.gpuDevice===void 0);if(t!==-1)return this.mlContextCache[t].mlContext;{let s=await navigator.ml.createContext();return this.mlContextCache.push({mlContext:s}),s}}let r=this.mlContextCache.findIndex(t=>og(t.options,e));if(r!==-1)return this.mlContextCache[r].mlContext;{let t=await navigator.ml.createContext(e);return this.mlContextCache.push({options:e,mlContext:t}),t}}registerMLContext(e,r){this.mlContextBySessionId.set(e,r);let t=this.sessionIdsByMLContext.get(r);t||(t=new Set,this.sessionIdsByMLContext.set(r,t)),t.add(e),this.temporaryGraphInputs.length>0&&(this.sessionGraphInputs.set(e,this.temporaryGraphInputs),this.temporaryGraphInputs=[])}onReleaseSession(e){this.sessionGraphInputs.delete(e);let r=this.mlContextBySessionId.get(e);if(!r)return;this.tensorManager.releaseTensorsForSession(e),this.mlContextBySessionId.delete(e);let t=this.sessionIdsByMLContext.get(r);if(t.delete(e),t.size===0){this.sessionIdsByMLContext.delete(r);let s=this.mlContextCache.findIndex(n=>n.mlContext===r);s!==-1&&this.mlContextCache.splice(s,1)}}getMLContext(e){return this.mlContextBySessionId.get(e)}reserveTensorId(){return this.tensorManager.reserveTensorId()}releaseTensorId(e){Dt("verbose",()=>`[WebNN] releaseTensorId {tensorId: ${e}}`),this.tensorManager.releaseTensorId(e)}async ensureTensor(e,r,t,s,n){let i=ya.get(t);if(!i)throw new Error(`Unsupported ONNX data type: ${t}`);return this.tensorManager.ensureTensor(e??this.currentSessionId,r,i,s,n)}async createTemporaryTensor(e,r,t){Dt("verbose",()=>`[WebNN] createTemporaryTensor {onnxDataType: ${r}, shape: ${t}}`);let s=ya.get(r);if(!s)throw new Error(`Unsupported ONNX data type: ${r}`);let n=this.tensorManager.reserveTensorId();await this.tensorManager.ensureTensor(e,n,s,t,!1);let i=this.temporarySessionTensorIds.get(e);return i?i.push(n):this.temporarySessionTensorIds.set(e,[n]),n}uploadTensor(e,r){if(!Qt().shouldTransferToMLTensor)throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");Dt("verbose",()=>`[WebNN] uploadTensor {tensorId: ${e}, data: ${r.byteLength}}`),this.tensorManager.upload(e,r)}async downloadTensor(e,r){return this.tensorManager.download(e,r)}createMLTensorDownloader(e,r){return async()=>{let t=await this.tensorManager.download(e);return dd(t,r)}}registerMLTensor(e,r,t,s){let n=ya.get(t);if(!n)throw new Error(`Unsupported ONNX data type: ${t}`);let i=this.tensorManager.registerTensor(e,r,n,s);return Dt("verbose",()=>`[WebNN] registerMLTensor {tensor: ${r}, dataType: ${n}, dimensions: ${s}} -> {tensorId: ${i}}`),i}registerMLConstant(e,r,t,s,n,i,o=!1){if(!i)throw new Error("External mounted files are not available.");let a=e;e.startsWith("./")&&(a=e.substring(2));let l=i.get(a);if(!l)throw new Error(`File with name ${a} not found in preloaded files.`);if(r+t>l.byteLength)throw new Error("Out of bounds: data offset and length exceed the external file data size.");let c=l.slice(r,r+t).buffer,p;switch(n.dataType){case"float32":p=new Float32Array(c);break;case"float16":p=typeof Float16Array<"u"&&Float16Array.from?new Float16Array(c):new Uint16Array(c);break;case"int32":p=new Int32Array(c);break;case"uint32":p=new Uint32Array(c);break;case"int64":o?(p=Fu(new Uint8Array(c),!1),n.dataType="int32"):p=new BigInt64Array(c);break;case"uint64":p=new BigUint64Array(c);break;case"int8":p=new Int8Array(c);break;case"int4":case"uint4":case"uint8":p=new Uint8Array(c);break;default:throw new Error(`Unsupported data type: ${n.dataType} in creating WebNN Constant from external data.`)}return Dt("verbose",()=>`[WebNN] registerMLConstant {dataType: ${n.dataType}, shape: ${n.shape}}} ${o?"(Note: it was int64 data type and registered to int32 as workaround)":""}`),s.constant(n,p)}registerGraphInput(e){this.temporaryGraphInputs.push(e)}isGraphInput(e,r){let t=this.sessionGraphInputs.get(e);return t?t.includes(r):!1}isInt64Supported(e){return!!this.mlContextBySessionId.get(e)?.opSupportLimits().input.dataTypes.includes("int64")}flush(){}}}),pd=Be(()=>{}),Nc,ba,Ma,ag,lg,jc,Du,cg,Sb,N2=Be(()=>{Ys(),pd(),Nc=new Map([[64,250],[128,200],[256,200],[512,200],[2048,230],[4096,200],[8192,50],[16384,50],[32768,50],[65536,50],[131072,50],[262144,50],[524288,50],[1048576,50],[2097152,30],[4194304,20],[8388608,10],[12582912,10],[16777216,10],[26214400,15],[33554432,22],[44236800,2],[58982400,6],[67108864,6],[134217728,6],[167772160,6]]),ba=[],Ma=e=>Math.ceil(Number(e)/16)*16,ag=e=>{for(let r=0;r<ba.length;r++){let t=ba[r];if(e<=t)return t}return Math.ceil(e/16)*16},lg=1,jc=()=>lg++,Du=async(e,r,t,s)=>{let n=Ma(t),i=e.device.createBuffer({size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});try{let o=e.getCommandEncoder();e.endComputePass(),o.copyBufferToBuffer(r,0,i,0,n),e.flush(),await i.mapAsync(GPUMapMode.READ);let a=i.getMappedRange();if(s){let l=s();return l.set(new Uint8Array(a,0,t)),l}else return new Uint8Array(a.slice(0,t))}finally{i.destroy()}},cg=class{constructor(e){this.backend=e,this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.buffersPending=[],this.capturedPendingBuffers=new Map;for(let[r]of Nc)ba.push(r),this.freeBuffers.set(r,[]),this.freeUniformBuffers.set(r,[]);this.sessionCount=0}upload(e,r){let t=r.buffer,s=r.byteOffset,n=r.byteLength,i=Ma(n),o=this.storageCache.get(e);if(!o)throw new Error("gpu data for uploading does not exist");if(Number(o.originalSize)!==n)throw new Error(`inconsistent data size. gpu data size=${o.originalSize}, data size=${n}`);let a=this.backend.device.createBuffer({mappedAtCreation:!0,size:i,usage:GPUBufferUsage.MAP_WRITE|GPUBufferUsage.COPY_SRC}),l=a.getMappedRange();new Uint8Array(l).set(new Uint8Array(t,s,n)),a.unmap();let c=this.backend.device.createCommandEncoder();c.copyBufferToBuffer(a,0,o.gpuData.buffer,0,i),this.backend.device.queue.submit([c.finish()]),a.destroy(),Dt("verbose",()=>`[WebGPU] GpuDataManager.upload(id=${e})`)}memcpy(e,r){let t=this.storageCache.get(e);if(!t)throw new Error("source gpu data for memcpy does not exist");let s=this.storageCache.get(r);if(!s)throw new Error("destination gpu data for memcpy does not exist");if(t.originalSize!==s.originalSize)throw new Error("inconsistent source and destination gpu data size");let n=Ma(t.originalSize),i=this.backend.getCommandEncoder();this.backend.endComputePass(),i.copyBufferToBuffer(t.gpuData.buffer,0,s.gpuData.buffer,0,n)}registerExternalBuffer(e,r,t){let s;if(t){if(s=t[0],e===t[1])return Dt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, buffer is the same, skip.`),s;if(this.backend.capturedCommandList.has(this.backend.currentSessionId))throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`)}else s=jc();return this.storageCache.set(s,{gpuData:{id:s,type:0,buffer:e},originalSize:r}),Dt("verbose",()=>`[WebGPU] GpuDataManager.registerExternalBuffer(size=${r}) => id=${s}, registered.`),s}unregisterExternalBuffer(e){e!==void 0&&(this.storageCache.delete(e),Dt("verbose",()=>`[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${e}`))}create(e,r=GPUBufferUsage.STORAGE|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST){let t=ag(e),s,n=(r&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE,i=(r&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM;if(n||i){let a=(n?this.freeBuffers:this.freeUniformBuffers).get(t);a?a.length>0?s=a.pop():s=this.backend.device.createBuffer({size:t,usage:r}):s=this.backend.device.createBuffer({size:t,usage:r})}else s=this.backend.device.createBuffer({size:t,usage:r});let o={id:jc(),type:0,buffer:s};return this.storageCache.set(o.id,{gpuData:o,originalSize:Number(e)}),Dt("verbose",()=>`[WebGPU] GpuDataManager.create(size=${e}) => id=${o.id}`),o}get(e){return this.storageCache.get(e)?.gpuData}release(e){let r=typeof e=="bigint"?Number(e):e,t=this.storageCache.get(r);if(!t){if(this.storageCache.size===0)return 0;throw new Error("releasing data does not exist")}return Dt("verbose",()=>`[WebGPU] GpuDataManager.release(id=${r}), gpuDataId=${t.gpuData.id}`),this.storageCache.delete(r),this.buffersPending.push(t.gpuData.buffer),t.originalSize}async download(e,r){let t=this.storageCache.get(Number(e));if(!t)throw new Error("data does not exist");await Du(this.backend,t.gpuData.buffer,t.originalSize,r)}refreshPendingBuffers(){if(this.buffersPending.length!==0)if(this.backend.sessionStatus==="default"){for(let e of this.buffersPending){let r=Nc.get(e.size);if((e.usage&GPUBufferUsage.STORAGE)===GPUBufferUsage.STORAGE){let t=this.freeBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else if((e.usage&GPUBufferUsage.UNIFORM)===GPUBufferUsage.UNIFORM){let t=this.freeUniformBuffers.get(e.size)||[];r===void 0||t.length>=r?e.destroy():t.push(e)}else e.destroy()}this.buffersPending=[]}else{let e=this.capturedPendingBuffers.get(this.backend.currentSessionId);e||(e=[],this.capturedPendingBuffers.set(this.backend.currentSessionId,e));for(let r of this.buffersPending)e.push(r);this.buffersPending=[]}}dispose(){this.freeBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.freeUniformBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache.forEach(e=>{e.gpuData.buffer.destroy()}),this.capturedPendingBuffers.forEach(e=>{e.forEach(r=>{r.destroy()})}),this.storageCache=new Map,this.freeBuffers=new Map,this.freeUniformBuffers=new Map,this.capturedPendingBuffers=new Map}onCreateSession(){this.sessionCount+=1}onReleaseSession(e){let r=this.capturedPendingBuffers.get(e);r&&(r.forEach(t=>{t.destroy()}),this.capturedPendingBuffers.delete(e)),this.sessionCount-=1,this.sessionCount===0&&(Dt("warning",()=>"[WebGPU] Clearing webgpu buffer cache"),this.storageCache.forEach(t=>{t.gpuData.buffer.destroy()}),this.storageCache=new Map)}},Sb=(...e)=>new cg(...e)}),ug,Bt,cr=Be(()=>{ug=class{constructor(e){Object.assign(this,e)}get cacheKey(){return this.key||(this.key=Object.getOwnPropertyNames(this).sort().map(e=>`${this[e]}`).join(";")),this.key}},Bt=e=>new ug(e)}),bi,va,kr,jr,ct,ar,Ou,fi,pn,at,Ji,Pe,ot,$b,hd,dg,kb,Tt=Be(()=>{gt(),vt(),bi=64,va=(e,r)=>{if(r===3)throw new Error("vec3 has same alignment as vec4, use vec4 instead");switch(Number(e)){case 10:return r>1?`vec${r}<f16>`:"f16";case 1:return r>1?`vec${r}<f32>`:"f32";case 6:return r>1?`vec${r}<i32>`:"i32";case 12:return r>1?`vec${r}<u32>`:"u32";case 7:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","i32"];case 13:if(r>1)throw new Error("currently not supported vecX of uint64 yet");return["vec2<u32>","u32"];case 9:if(r!==4)throw new Error("bool must be vec4");return["u32","vec4<bool>"];case 22:return"i32";case 21:return"u32";default:throw new Error(`Unknown data type: ${e}`)}},kr=(e,r=1)=>{let t=va(e,r);return typeof t=="string"?t:t[0]},jr=(e,r=1)=>{let t=va(e,r);return typeof t=="string"?t:t[1]},ct=(...e)=>{let r=[];return e.forEach(t=>{t.length!==0&&r.push({type:12,data:t},{type:12,data:ye.computeStrides(t)})}),r},ar=e=>e%4===0?4:e%2===0?2:1,Ou=(e="f32",r,t="0")=>!r||r===1?`${e}(${t})`:`vec${r}<${e}>(${t})`,fi=(e,r,t)=>e==="f32"?t:r===1?`f32(${t})`:`vec${r}<f32>(${t})`,pn=(e,r)=>r===4?`(${e}.x + ${e}.y + ${e}.z + ${e}.w)`:r===2?`(${e}.x + ${e}.y)`:r===3?`(${e}.x + ${e}.y + ${e}.z)`:e,at=(e,r,t,s)=>e.startsWith("uniforms.")&&t>4?typeof r=="string"?s==="f16"?`${e}[(${r}) / 8][(${r}) % 8 / 4][(${r}) % 8 % 4]`:`${e}[(${r}) / 4][(${r}) % 4]`:s==="f16"?`${e}[${Math.floor(r/8)}][${Math.floor(r%8/4)}][${r%8%4}]`:`${e}[${Math.floor(r/4)}][${r%4}]`:t>1?`${e}[${r}]`:e,Ji=(e,r,t,s,n)=>{let i=typeof t=="number",o=i?t:t.length,a=[...new Array(o).keys()],l=o<2?"u32":o<=4?`vec${o}<u32>`:`array<u32, ${o}>`,c=va(r,n),p=typeof c=="string"?c:c[1],d=typeof c=="string"?c:c[0],u={indices:l,value:p,storage:d,tensor:r},_=B=>typeof B=="string"?B:`${B}u`,f={offsetToIndices:!1,indicesToOffset:!1,broadcastedIndicesToOffset:!1,set:!1,setByIndices:!1,get:!1,getByIndices:!1},w=i?"uniforms.":"",I=`${w}${e}_shape`,M=`${w}${e}_strides`,y="";for(let B=0;B<o-1;B++)y+=`
    let dim${B} = current / ${at(M,B,o)};
    let rest${B} = current % ${at(M,B,o)};
    indices[${B}] = dim${B};
    current = rest${B};
    `;y+=`indices[${o-1}] = current;`;let $=o<2?"":`
  fn o2i_${e}(offset: u32) -> ${u.indices} {
    var indices: ${u.indices};
    var current = offset;
    ${y}
    return indices;
  }`,v=B=>(f.offsetToIndices=!0,o<2?B:`o2i_${e}(${B})`),T=[];if(o>=2)for(let B=o-1;B>=0;B--)T.push(`${at(M,B,o)} * (indices[${B}])`);let E=o<2?"":`
  fn i2o_${e}(indices: ${u.indices}) -> u32 {
    return ${T.join("+")};
  }`,x=B=>(f.indicesToOffset=!0,o<2?B:`i2o_${e}(${B})`),S=(...B)=>o===0?"0u":`${u.indices}(${B.map(_).join(",")})`,z=(B,F)=>o<2?`${B}`:`${at(B,F,o)}`,D=(B,F,G)=>o<2?`${B}=${G};`:`${at(B,F,o)}=${G};`,K={},q=(B,F)=>{f.broadcastedIndicesToOffset=!0;let G=`${F.name}broadcastedIndicesTo${e}Offset`;if(G in K)return`${G}(${B})`;let N=[];for(let ae=o-1;ae>=0;ae--){let ke=F.indicesGet("outputIndices",ae+F.rank-o);N.push(`${z(M,ae)} * (${ke} % ${z(I,ae)})`)}return K[G]=`fn ${G}(outputIndices: ${F.type.indices}) -> u32 {
             return ${N.length>0?N.join("+"):"0u"};
           }`,`${G}(${B})`},O=(B,F)=>(()=>{if(u.storage===u.value)return`${e}[${B}]=${F};`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`${e}[${B}]=vec2<u32>(u32(${F}), select(0u, 0xFFFFFFFFu, ${F} < 0));`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`${e}[${B}]=vec2<u32>(u32(${F}), 0u);`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`${e}[${B}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${F}));`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),Z=B=>(()=>{if(u.storage===u.value)return`${e}[${B}]`;if(u.storage==="vec2<u32>"&&u.value==="i32")return`i32(${e}[${B}].x)`;if(u.storage==="vec2<u32>"&&u.value==="u32")return`u32(${e}[${B}].x)`;if(u.storage==="u32"&&u.value==="vec4<bool>")return`vec4<bool>(bool(${e}[${B}] & 0xFFu), bool(${e}[${B}] & 0xFF00u), bool(${e}[${B}] & 0xFF0000u), bool(${e}[${B}] & 0xFF000000u))`;throw new Error(`not supported combination of storage type ${u.storage} and value type ${u.value} yet`)})(),Q=o<2?"":`
  fn get_${e}ByIndices(indices: ${u.indices}) -> ${p} {
    return ${Z(`i2o_${e}(indices)`)};
  }`,J=o<2?"":(()=>{let B=a.map(G=>`d${G}: u32`).join(", "),F=a.map(G=>`d${G}`).join(", ");return`
  fn get_${e}(${B}) -> ${p} {
    return get_${e}ByIndices(${S(F)});
  }`})(),re=(...B)=>{if(B.length!==o)throw new Error(`indices length must be ${o}`);let F=B.map(_).join(",");return o===0?Z("0u"):o===1?Z(F[0]):(f.get=!0,f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}(${F})`)},te=B=>o<2?Z(B):(f.getByIndices=!0,f.indicesToOffset=!0,`get_${e}ByIndices(${B})`),ce=o<2?"":`
  fn set_${e}ByIndices(indices: ${u.indices}, value: ${p}) {
    ${O(`i2o_${e}(indices)`,"value")}
  }`,ue=o<2?"":(()=>{let B=a.map(G=>`d${G}: u32`).join(", "),F=a.map(G=>`d${G}`).join(", ");return`
  fn set_${e}(${B}, value: ${p}) {
    set_${e}ByIndices(${S(F)}, value);
  }`})();return{impl:()=>{let B=[],F=!1;return f.offsetToIndices&&(B.push($),F=!0),f.indicesToOffset&&(B.push(E),F=!0),f.broadcastedIndicesToOffset&&(Object.values(K).forEach(G=>B.push(G)),F=!0),f.set&&(B.push(ue),F=!0),f.setByIndices&&(B.push(ce),F=!0),f.get&&(B.push(J),F=!0),f.getByIndices&&(B.push(Q),F=!0),!i&&F&&B.unshift(`const ${I} = ${u.indices}(${t.join(",")});`,`const ${M} = ${u.indices}(${ye.computeStrides(t).join(",")});`),B.join(`
`)},type:u,offsetToIndices:v,indicesToOffset:x,broadcastedIndicesToOffset:q,indices:S,indicesGet:z,indicesSet:D,set:(...B)=>{if(B.length!==o+1)throw new Error(`indices length must be ${o}`);let F=B[o];if(typeof F!="string")throw new Error("value must be string");let G=B.slice(0,o).map(_).join(",");return o===0?O("0u",F):o===1?O(G[0],F):(f.set=!0,f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}(${G}, ${F})`)},setByOffset:O,setByIndices:(B,F)=>o<2?O(B,F):(f.setByIndices=!0,f.indicesToOffset=!0,`set_${e}ByIndices(${B}, ${F});`),get:re,getByOffset:Z,getByIndices:te,usage:s,name:e,strides:M,shape:I,rank:o}},Pe=(e,r,t,s=1)=>Ji(e,r,t,"input",s),ot=(e,r,t,s=1)=>Ji(e,r,t,"output",s),$b=(e,r,t)=>Ji(e,r,t,"atomicOutput",1),hd=(e,r,t,s=1)=>Ji(e,r,t,"internal",s),dg=class{constructor(e,r){this.normalizedDispatchGroup=e,this.limits=r,this.internalVariables=[],this.variables=[],this.uniforms=[],this.variableIndex=0}guardAgainstOutOfBoundsWorkgroupSizes(e){return`if (global_idx >= ${typeof e=="number"?`${e}u`:e}) { return; }`}mainStart(e=bi){let r=typeof e=="number"?e:e[0],t=typeof e=="number"?1:e[1],s=typeof e=="number"?1:e[2];if(r>this.limits.maxComputeWorkgroupSizeX||t>this.limits.maxComputeWorkgroupSizeY||s>this.limits.maxComputeWorkgroupSizeZ)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);if(r*t*s>this.limits.maxComputeInvocationsPerWorkgroup)throw new Error(`workgroup size [${r}, ${t}, ${s}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);let n=this.normalizedDispatchGroup[1]===1&&this.normalizedDispatchGroup[2]===1,i=n?`@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>`:`@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`,o=n?`let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;`:`let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${r*t*s}u + local_idx;`;return`@compute @workgroup_size(${r}, ${t}, ${s})
  fn main(${i}) {
    ${o}
  `}appendVariableUniforms(e){e.rank!==0&&(e.shape.startsWith("uniforms.")&&this.uniforms.push({name:e.shape.replace("uniforms.",""),type:"u32",length:e.rank}),e.strides.startsWith("uniforms.")&&this.uniforms.push({name:e.strides.replace("uniforms.",""),type:"u32",length:e.rank}))}declareVariable(e,r){if(e.usage==="internal")throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");this.variables.push(e),this.appendVariableUniforms(e);let t=e.usage==="input"?"read":"read_write",s=e.usage==="atomicOutput"?"atomic<i32>":e.type.storage;return`@group(0) @binding(${r}) var<storage, ${t}> ${e.name}: array<${s}>;`}declareVariables(...e){return e.map(r=>this.declareVariable(r,this.variableIndex++)).join(`
`)}registerInternalVariable(e){if(e.usage!=="internal")throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");this.internalVariables.push(e),this.appendVariableUniforms(e)}registerInternalVariables(...e){return e.forEach(r=>this.registerInternalVariable(r)),this}registerUniform(e,r,t=1){return this.uniforms.push({name:e,type:r,length:t}),this}registerUniforms(e){return this.uniforms=this.uniforms.concat(e),this}uniformDeclaration(){if(this.uniforms.length===0)return"";let e=[];for(let{name:r,type:t,length:s}of this.uniforms)if(s&&s>4)t==="f16"?e.push(`@align(16) ${r}:array<mat2x4<${t}>, ${Math.ceil(s/8)}>`):e.push(`${r}:array<vec4<${t}>, ${Math.ceil(s/4)}>`);else{let n=s==null||s===1?t:`vec${s}<${t}>`;e.push(`${r}:${n}`)}return`
      struct Uniforms { ${e.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`}get additionalImplementations(){return this.uniformDeclaration()+this.variables.map(e=>e.impl()).join(`
`)+this.internalVariables.map(e=>e.impl()).join(`
`)}get variablesInfo(){if(this.uniforms.length===0)return;let e=r=>[12,10,1,6][["u32","f16","f32","i32"].indexOf(r)];return this.uniforms.map(r=>[e(r.type),r.length??1])}},kb=(e,r)=>new dg(e,r)}),pg,Vc,hg,mg,fg,_g,es,Ib,Ab,hn=Be(()=>{gt(),vt(),cr(),Tt(),pg=(e,r)=>{if(!e||e.length!==1)throw new Error("Transpose requires 1 input.");if(r.length!==0&&r.length!==e[0].dims.length)throw new Error(`perm size ${r.length} does not match input rank ${e[0].dims.length}`)},Vc=(e,r)=>r.length!==0?r:[...new Array(e).keys()].reverse(),hg=(e,r)=>ye.sortBasedOnPerm(e,Vc(e.length,r)),mg=(e,r,t,s)=>{let n=`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`;for(let i=0;i<r;++i)n+=`a[${e[i]}]=i[${i}];`;return n+="return a;}"},fg=(e,r)=>{let t=[],s=[];for(let n=0;n<e.length;++n)e[n]!==1&&t.push(e[n]),e[r[n]]!==1&&s.push(r[n]);return{newShape:t,newPerm:s}},_g=(e,r)=>{let t=0;for(let s=0;s<e.length;++s)if(r[e[s]]!==1){if(e[s]<t)return!1;t=e[s]}return!0},es=(e,r)=>{let t=e.dataType,s=e.dims.length,n=Vc(s,r),i=hg(e.dims,n),o=e.dims,a=i,l=s<2||_g(n,e.dims),c;if(l)return c=f=>{let w=Pe("input",t,o,4),I=ot("output",t,a,4);return`
  ${f.registerUniform("output_size","u32").declareVariables(w,I)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`},{name:"TransposeCopy",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let f=ye.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64/4)},programUniforms:[{type:12,data:Math.ceil(f/4)}]}},getShaderSource:c};let{newShape:p,newPerm:d}=fg(e.dims,n),u=ye.areEqual(d,[2,3,1]),_=ye.areEqual(d,[3,1,2]);if(p.length===2||u||_){o=u?[p[0],p[1]*p[2]]:_?[p[0]*p[1],p[2]]:p,a=[o[1],o[0]];let f=16;return c=w=>{let I=Pe("a",t,o.length),M=ot("output",t,a.length);return`
  ${w.registerUniform("output_size","u32").declareVariables(I,M)}
  var<workgroup> tile : array<array<${M.type.value}, ${f+1}>, ${f}>;
  ${w.mainStart([f,f,1])}
    let stride = (uniforms.output_shape[1] - 1) / ${f} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${f}u + local_id.x;
    let input_row = workgroup_id_x * ${f}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${I.getByIndices(`${I.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${f}u + local_id.x;
    let output_row = workgroup_id_y * ${f}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${M.setByIndices(`${M.type.indices}(output_row, output_col)`,"tile[local_id.x][local_id.y]")}
    }
  }`},{name:"TransposeShared",shaderCache:{inputDependencies:["type"]},getRunData:()=>{let w=ye.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(a[1]/f),y:Math.ceil(a[0]/f)},programUniforms:[{type:12,data:w},...ct(o,a)]}},getShaderSource:c}}return c=f=>{let w=Pe("a",t,o.length),I=ot("output",t,a.length);return`
  ${f.registerUniform("output_size","u32").declareVariables(w,I)}

  ${mg(n,s,w,I)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${I.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${I.setByOffset("global_idx",w.getByIndices("aIndices"))}
  }`},{name:"Transpose",shaderCache:{hint:`${r}`,inputDependencies:["rank"]},getRunData:()=>{let f=ye.size(i);return{outputs:[{dims:i,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ct(o,a)]}},getShaderSource:c}},Ib=(e,r)=>{pg(e.inputs,r.perm),e.compute(es(e.inputs[0],r.perm))},Ab=e=>Bt({perm:e.perm})}),gg,wg,yg,bg,Mg,vg,xg,Tg,Eg,Pg,ws,Fb,Db,Ob,Lb,zb,Bb,Rb,Nb,jb,Vb,j2=Be(()=>{gt(),vt(),Tt(),md(),hn(),gg={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate * candidate",logSumExp:"bestValue + exp(candidate)",l1:"bestValue + abs(candidate)",l2:"bestValue + candidate * candidate",logSum:"bestValue + candidate"},wg={max:"select(bestValue, candidate, candidate > bestValue)",min:"select(bestValue, candidate, candidate < bestValue)",mean:"bestValue + candidate",sum:"bestValue + candidate",prod:"bestValue * candidate",sumSquare:"bestValue + candidate",logSumExp:"bestValue + candidate",l1:"bestValue + candidate",l2:"bestValue + candidate",logSum:"bestValue + candidate"},yg={max:"_A[offset]",min:"_A[offset]",mean:"0",sum:"0",prod:"1",sumSquare:"0",logSumExp:"0",l1:"0",l2:"0",logSum:"0"},bg={max:"bestValue",min:"bestValue",sum:"bestValue",prod:"bestValue",sumSquare:"bestValue",logSumExp:"log(bestValue)",l1:"bestValue",l2:"sqrt(bestValue)",logSum:"log(bestValue)"},Mg=(e,r)=>{let t=[];for(let s=r-e;s<r;++s)t.push(s);return t},vg=(e,r)=>{let t=[],s=e.length;for(let i=0;i<s;i++)r.indexOf(i)===-1&&t.push(e[i]);let n=r.map(i=>e[i]);return[t,n]},xg=(e,r)=>{let t=e.length+r.length,s=[],n=0;for(let i=0;i<t;i++)r.indexOf(i)===-1?s.push(e[n++]):s.push(1);return s},Tg=(e,r)=>{for(let t=0;t<e.length;++t)if(e[e.length-t-1]!==r-1-t)return!1;return!0},Eg=(e,r)=>{let t=[];if(!Tg(e,r)){for(let s=0;s<r;++s)e.indexOf(s)===-1&&t.push(s);e.forEach(s=>t.push(s))}return t},Pg=(e,r,t,s,n,i,o)=>{let a=t[0].dims,l=ye.size(i),c=ye.size(o),p=Pe("_A",t[0].dataType,a),d=ot("output",n,i),u=64;l===1&&(u=256);let _=`
          var<workgroup> aBestValues : array<f32, ${u}>;
       `,f=w=>`
        ${w.registerUniform("reduceSize","u32").declareVariables(p,d)}
        ${_}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${w.mainStart(u)}

          let outputIndex = global_idx / ${u};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${yg[s]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${u}) {
           let candidate = f32(${p.getByOffset("offset + k")});
           bestValue = ${gg[s]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${u}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${wg[s]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex",`${s==="mean"?`${d.type.storage}(bestValue / f32(uniforms.reduceSize))`:`${d.type.storage}(${bg[s]})`}`)};
         }
        }`;return{name:e,shaderCache:{hint:`${r};${u}`,inputDependencies:["type"]},getShaderSource:f,getRunData:()=>({outputs:[{dims:i,dataType:n}],dispatchGroup:{x:l},programUniforms:[{type:12,data:c}]})}},ws=(e,r,t,s)=>{let n=e.inputs.length===1?t:Lu(e.inputs,t),i=n.axes;i.length===0&&!n.noopWithEmptyAxes&&(i=e.inputs[0].dims.map((_,f)=>f));let o=ye.normalizeAxes(i,e.inputs[0].dims.length),a=o,l=e.inputs[0],c=Eg(a,e.inputs[0].dims.length);c.length>0&&(l=e.compute(es(e.inputs[0],c),{inputs:[0],outputs:[-1]})[0],a=Mg(a.length,l.dims.length));let[p,d]=vg(l.dims,a),u=p;n.keepDims&&(u=xg(p,o)),e.compute(Pg(r,n.cacheKey,[l],s,e.inputs[0].dataType,u,d),{inputs:[l]})},Fb=(e,r)=>{ws(e,"ReduceMeanShared",r,"mean")},Db=(e,r)=>{ws(e,"ReduceL1Shared",r,"l1")},Ob=(e,r)=>{ws(e,"ReduceL2Shared",r,"l2")},Lb=(e,r)=>{ws(e,"ReduceLogSumExpShared",r,"logSumExp")},zb=(e,r)=>{ws(e,"ReduceMaxShared",r,"max")},Bb=(e,r)=>{ws(e,"ReduceMinShared",r,"min")},Rb=(e,r)=>{ws(e,"ReduceProdShared",r,"prod")},Nb=(e,r)=>{ws(e,"ReduceSumShared",r,"sum")},jb=(e,r)=>{ws(e,"ReduceSumSquareShared",r,"sumSquare")},Vb=(e,r)=>{ws(e,"ReduceLogSumShared",r,"logSum")}}),ys,Cg,Ka,Lu,bs,Sg,$g,kg,Ig,Ag,Fg,Dg,Og,Lg,zg,Ms,Ub,Wb,Gb,Kb,qb,Hb,Qb,Xb,Yb,Jb,md=Be(()=>{gt(),vt(),cr(),Tt(),j2(),ys=e=>{if(!e||e.length===0||e.length>2)throw new Error("Reduce op requires 1 or 2 inputs.");if(e.length===2&&e[1].dims.length!==1)throw new Error("Invalid axes input dims.")},Cg=e=>["","",`var value = ${e.getByIndices("input_indices")};`,""],Ka=(e,r,t,s,n,i,o=!1,a=!1)=>{let l=[],c=t[0].dims,p=c.length,d=ye.normalizeAxes(n,p),u=!a&&d.length===0;c.forEach((w,I)=>{u||d.indexOf(I)>=0?o&&l.push(1):l.push(w)});let _=l.length,f=ye.size(l);return{name:e,shaderCache:r,getShaderSource:w=>{let I=[],M=Pe("_A",t[0].dataType,p),y=ot("output",i,_),$=s(M,y,d),v=$[2];for(let T=0,E=0;T<p;T++)u||d.indexOf(T)>=0?(o&&E++,v=`for(var j${T}: u32 = 0; j${T} < ${c[T]}; j${T}++) {
                  ${$[2].includes("last_index")?`let last_index = j${T};`:""}
                  ${M.indicesSet("input_indices",T,`j${T}`)}
                  ${v}
                }`):(I.push(`${M.indicesSet("input_indices",T,y.indicesGet("output_indices",E))};`),E++);return`

        ${w.registerUniform("output_size","u32").declareVariables(M,y)}

        ${w.mainStart()}
          ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${M.type.indices};
          let output_indices = ${y.offsetToIndices("global_idx")};

          ${I.join(`
`)}
          ${$[0]}       // init ops for reduce max/min
          ${$[1]}
          ${v}
          ${$[3]}
          ${$.length===4?y.setByOffset("global_idx","value"):$.slice(4).join(`
`)}
        }`},getRunData:()=>({outputs:[{dims:l,dataType:i}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:[{type:12,data:f},...ct(c,l)]})}},Lu=(e,r)=>{let t=[];return e[1].dims[0]>0&&e[1].getBigInt64Array().forEach(s=>t.push(Number(s))),Bt({axes:t,keepDims:r.keepDims,noopWithEmptyAxes:r.noopWithEmptyAxes})},bs=(e,r,t,s)=>{let n=e.inputs,i=n.length===1?t:Lu(n,t);e.compute(Ka(r,{hint:i.cacheKey,inputDependencies:["rank"]},[n[0]],i.noopWithEmptyAxes&&i.axes.length===0?Cg:s,i.axes,n[0].dataType,i.keepDims,i.noopWithEmptyAxes),{inputs:[0]})},Sg=(e,r)=>{ys(e.inputs),bs(e,"ReduceLogSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,"value = log(value);"])},$g=(e,r)=>{ys(e.inputs),bs(e,"ReduceL1",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += abs(${t.getByIndices("input_indices")});`,""])},kg=(e,r)=>{ys(e.inputs),bs(e,"ReduceL2",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += (t * t);`,"value = sqrt(value);"])},Ig=(e,r)=>{ys(e.inputs),bs(e,"ReduceLogSumExp",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += exp(${t.getByIndices("input_indices")});`,"value = log(value);"])},Ag=(e,r)=>{ys(e.inputs),bs(e,"ReduceMax",r,(t,s,n)=>{let i=[];for(let o=0;o<t.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(t.indicesSet("input_indices",o,0));return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = max(value, ${t.getByIndices("input_indices")});`,""]})},Fg=(e,r)=>{ys(e.inputs),bs(e,"ReduceMean",r,(t,s,n)=>{let i=1;for(let o=0;o<t.rank;o++)(n.indexOf(o)>=0||n.length===0)&&(i*=e.inputs[0].dims[o]);return["var sum = f32(0);","",`sum += f32(${t.getByIndices("input_indices")});`,`let value = ${s.type.value}(sum / ${i});`]})},Dg=(e,r)=>{ys(e.inputs),bs(e,"ReduceMin",r,(t,s,n)=>{let i=[];for(let o=0;o<t.rank;o++)(n.indexOf(o)>=0||n.length===0)&&i.push(`input_indices[${o}] = 0;`);return[`${i.join(`
`)}`,`var value = ${t.getByIndices("input_indices")};`,`value = min(value, ${t.getByIndices("input_indices")});`,""]})},Og=(e,r)=>{ys(e.inputs),bs(e,"ReduceProd",r,(t,s)=>[`var value = ${s.type.storage}(1);`,"",`value *= ${t.getByIndices("input_indices")};`,""])},Lg=(e,r)=>{ys(e.inputs),bs(e,"ReduceSum",r,(t,s)=>[`var value = ${s.type.storage}(0);`,"",`value += ${t.getByIndices("input_indices")};`,""])},zg=(e,r)=>{ys(e.inputs),bs(e,"ReduceSumSquare",r,(t,s)=>[`var t = ${s.type.value}(0); var value = ${s.type.value}(0);`,"",`t = ${t.getByIndices("input_indices")}; value += t * t;`,""])},Ms=(e,r,t)=>{if(r.length===0)return t;let s=1,n=1;for(let i=0;i<r.length;i++)r.indexOf(i)===-1?s*=e[i]:n*=e[i];return n<32&&s>1024},Ub=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Fg(e,r):Fb(e,r)},Wb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?$g(e,r):Db(e,r)},Gb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?kg(e,r):Ob(e,r)},Kb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ig(e,r):Lb(e,r)},qb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Ag(e,r):zb(e,r)},Hb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Dg(e,r):Bb(e,r)},Qb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Og(e,r):Rb(e,r)},Xb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Lg(e,r):Nb(e,r)},Yb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?zg(e,r):jb(e,r)},Jb=(e,r)=>{Ms(e.inputs[0].dims,r.axes,r.noopWithEmptyAxes)?Sg(e,r):Vb(e,r)}}),Uc,Zb,eM,zu,V2=Be(()=>{gt(),cr(),md(),Uc=e=>{if(!e||e.length===0||e.length>2)throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");if(e[0].dataType!==1)throw new Error("Invalid input type.")},Zb=(e,r)=>{Uc(e.inputs);let t=(s,n,i)=>{let o=[];for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?"<=":"<"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Ka("ArgMin",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},eM=(e,r)=>{Uc(e.inputs);let t=(s,n,i)=>{let o=[];for(let a=0;a<s.rank;a++)(i.indexOf(a)>=0||i.length===0)&&o.push(`input_indices[${a}] = 0;`);return[`${o.join(`
`)}`,`var value = ${s.getByIndices("input_indices")};
var best_index : i32 = 0;`,`if (${s.getByIndices("input_indices")} ${r.selectLastIndex>0?">=":">"} value) {
         value = ${s.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`,"",n.setByOffset("global_idx","best_index")]};e.compute(Ka("argMax",{hint:r.cacheKey,inputDependencies:["rank"]},[e.inputs[0]],t,[r.axis],7,r.keepDims),{inputs:[0]})},zu=e=>Bt(e)}),Bg,xa,Rg,Ng,jg,bo,Vg,tM,fd=Be(()=>{gt(),vt(),pd(),Tt(),Bg=(e,r)=>{let t=e[0],s=e[1],n=e[2],i=e[3],o=e[4],a=e[5];if(o&&a)throw new Error("Attention cannot have both past and attention_bias");if(t.dims.length!==3)throw new Error('Input "input" must have 3 dimensions');let l=t.dims[0],c=t.dims[1],p=t.dims[2];if(n.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimensions');if(s.dims.length!==2)throw new Error('Input "weights" is expected to have 2 dimensions');if(s.dims[0]!==p)throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");if(n.dims[0]!==s.dims[1])throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');let d=n.dims[0]/3,u=d,_=u;if(r.qkvHiddenSizes.length>0){if(r.qkvHiddenSizes.length!==3)throw new Error("qkv_hidden_sizes attribute should have 3 elements");for(let $ of r.qkvHiddenSizes)if($%r.numHeads!==0)throw new Error("qkv_hidden_sizes should be divisible by num_heads");d=r.qkvHiddenSizes[0],u=r.qkvHiddenSizes[1],_=r.qkvHiddenSizes[2]}let f=c;if(d!==u)throw new Error("qkv_hidden_sizes first element should be same as the second");if(n.dims[0]!==d+u+_)throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');let w=0;if(o){if(u!==_)throw new Error('Input "past" expect k_hidden_size == v_hidden_size');if(o.dims.length!==5)throw new Error('Input "past" must have 5 dimensions');if(o.dims[0]!==2)throw new Error('Input "past" first dimension must be 2');if(o.dims[1]!==l)throw new Error('Input "past" second dimension must be batch_size');if(o.dims[2]!==r.numHeads)throw new Error('Input "past" third dimension must be num_heads');if(o.dims[4]!==u/r.numHeads)throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');r.pastPresentShareBuffer||(w=o.dims[3])}let I=f+w,M=-1,y=0;if(i)throw new Error("Mask not supported");if(o)throw new Error("past is not supported");if(a){if(a.dims.length!==4)throw new Error('Input "attention_bias" must have 4 dimensions');if(a.dims[0]!==l||a.dims[1]!==r.numHeads||a.dims[2]!==c||a.dims[3]!==I)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:l,sequenceLength:c,pastSequenceLength:w,kvSequenceLength:f,totalSequenceLength:I,maxSequenceLength:M,inputHiddenSize:p,hiddenSize:d,vHiddenSize:_,headSize:Math.floor(d/r.numHeads),vHeadSize:Math.floor(_/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:y,scale:r.scale,broadcastResPosBias:!1,passPastInKv:!1,qkvFormat:1}},xa=(e,r,t)=>r&&e?`
      let total_sequence_length_input = u32(${r.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${e?.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       `:`
    ${t?"let past_sequence_length = uniforms.past_sequence_length":""};
    let present_sequence_length = total_sequence_length;
    `,Rg=(e,r,t,s,n,i,o,a)=>{let l=ar(o?1:i),c=64,p=i/l;p<c&&(c=32);let d=Math.ceil(i/l/c),u=[{type:12,data:r},{type:12,data:t},{type:12,data:s},{type:12,data:n},{type:12,data:p},{type:12,data:d}],_=kr(e.dataType,l),f=jr(1,l),w=["type"];o&&w.push("type"),a&&w.push("type");let I=M=>{let y=ot("x",e.dataType,e.dims,l),$=[y],v=o?Pe("seq_lens",o.dataType,o.dims):void 0;v&&$.push(v);let T=a?Pe("total_sequence_length_input",a.dataType,a.dims):void 0;T&&$.push(T);let E=jr(e.dataType),x=[{name:"batch_size",type:"u32"},{name:"num_heads",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"sequence_length",type:"u32"},{name:"total_sequence_length",type:"u32"},{name:"elements_per_thread",type:"u32"}];return`
  var<workgroup> thread_max: array<f32, ${c}>;
  var<workgroup> thread_sum: array<f32, ${c}>;
  ${M.registerUniforms(x).declareVariables(...$)}
  ${M.mainStart([c,1,1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${xa(v,T,!1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${c}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${o?"u32(past_sequence_length + workgroup_id.y + 1)":"total_sequence_length"};
    var thread_max_vector = ${f}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${f}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(()=>{switch(l){case 1:return"thread_max_vector";case 2:return"max(thread_max_vector.x, thread_max_vector.y)";case 4:return"max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${c}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${f}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${f}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(()=>{switch(l){case 1:return"sum_vector";case 2:return"sum_vector.x + sum_vector.y";case 4:return"sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";default:throw new Error(`Unsupported components: ${l}`)}})()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${c}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${y.type.value}(${E}(1.0) / ${E}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${f}(x[offset + i]);
        x[offset + i] = ${y.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${o?`
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${y.type.value}(${E}(0));
        }`:""};
  }`};return{name:"AttentionProbsSoftmax",shaderCache:{hint:`${c};${_};${l}`,inputDependencies:w},getShaderSource:I,getRunData:()=>({outputs:[],dispatchGroup:{x:1,y:n,z:r*t},programUniforms:u})}},Ng=(e,r,t,s,n,i,o,a,l)=>{let c=o+i.kvSequenceLength,p=[i.batchSize,i.numHeads,i.sequenceLength,c],d=e>1&&s,u=i.kvNumHeads?i.kvNumHeads:i.numHeads,_=d?[i.batchSize,u,c,i.headSize]:void 0,f=i.nReps?i.nReps:1,w=i.scale===0?1/Math.sqrt(i.headSize):i.scale,I=ar(i.headSize),M=i.headSize/I,y=12,$={x:Math.ceil(c/y),y:Math.ceil(i.sequenceLength/y),z:i.batchSize*i.numHeads},v=[{type:12,data:i.sequenceLength},{type:12,data:M},{type:12,data:c},{type:12,data:i.numHeads},{type:12,data:i.headSize},{type:1,data:w},{type:12,data:o},{type:12,data:i.kvSequenceLength},{type:12,data:f}],T=d&&s&&ye.size(s.dims)>0,E=["type","type"];T&&E.push("type"),n&&E.push("type"),a&&E.push("type"),l&&E.push("type");let x=[{dims:p,dataType:r.dataType,gpuDataType:0}];d&&x.push({dims:_,dataType:r.dataType,gpuDataType:0});let S=z=>{let D=Pe("q",r.dataType,r.dims,I),K=Pe("key",t.dataType,t.dims,I),q=[D,K];if(T){let ce=Pe("past_key",s.dataType,s.dims,I);q.push(ce)}n&&q.push(Pe("attention_bias",n.dataType,n.dims));let O=a?Pe("seq_lens",a.dataType,a.dims):void 0;O&&q.push(O);let Z=l?Pe("total_sequence_length_input",l.dataType,l.dims):void 0;Z&&q.push(Z);let Q=ot("output",r.dataType,p),J=[Q];d&&J.push(ot("present_key",r.dataType,_,I));let re=jr(1,I),te=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"alpha",type:"f32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${y}u;

  var<workgroup> tileQ: array<${D.type.storage}, ${y*y}>;
  var<workgroup> tileK: array<${D.type.storage}, ${y*y}>;
  ${z.registerUniforms(te).declareVariables(...q,...J)}
  ${z.mainStart([y,y,1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${f===1?"headIdx":"headIdx / uniforms.n_reps"};
    let kv_num_heads = ${f===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${xa(O,Z,!0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${T&&d?"let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;":""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d?"let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;":""}
    var value = ${re}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${T&&d?`
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }`:`
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d?`if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }`:""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${re}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(()=>{switch(I){case 1:return"value";case 2:return"value.x + value.y";case 4:return"value.x + value.y + value.z + value.w";default:throw new Error(`Unsupported components: ${I}`)}})()};
        output[outputIdx] = ${Q.type.value} (sum * uniforms.alpha) + ${n?"attention_bias[outputIdx]":"0.0"};
    }
  }`};return{name:"AttentionProbs",shaderCache:{hint:`${I};${n!==void 0};${s!==void 0};${e}`,inputDependencies:E},getRunData:()=>({outputs:x,dispatchGroup:$,programUniforms:v}),getShaderSource:S}},jg=(e,r,t,s,n,i,o=void 0,a=void 0)=>{let l=i+n.kvSequenceLength,c=n.nReps?n.nReps:1,p=n.vHiddenSize*c,d=e>1&&s,u=n.kvNumHeads?n.kvNumHeads:n.numHeads,_=d?[n.batchSize,u,l,n.headSize]:void 0,f=[n.batchSize,n.sequenceLength,p],w=12,I={x:Math.ceil(n.vHeadSize/w),y:Math.ceil(n.sequenceLength/w),z:n.batchSize*n.numHeads},M=[{type:12,data:n.sequenceLength},{type:12,data:l},{type:12,data:n.vHeadSize},{type:12,data:n.numHeads},{type:12,data:n.headSize},{type:12,data:p},{type:12,data:i},{type:12,data:n.kvSequenceLength},{type:12,data:c}],y=d&&s&&ye.size(s.dims)>0,$=["type","type"];y&&$.push("type"),o&&$.push("type"),a&&$.push("type");let v=[{dims:f,dataType:r.dataType,gpuDataType:0}];d&&v.push({dims:_,dataType:r.dataType,gpuDataType:0});let T=E=>{let x=Pe("probs",r.dataType,r.dims),S=Pe("v",t.dataType,t.dims),z=[x,S];y&&z.push(Pe("past_value",s.dataType,s.dims));let D=o?Pe("seq_lens",o.dataType,o.dims):void 0;o&&z.push(D);let K=a?Pe("total_sequence_length_input",a.dataType,a.dims):void 0;a&&z.push(K);let q=[ot("output",r.dataType,f)];d&&q.push(ot("present_value",r.dataType,_));let O=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"v_hidden_size",type:"u32"},{name:"past_sequence_length",type:"u32"},{name:"kv_sequence_length",type:"u32"},{name:"n_reps",type:"u32"}];return`
  const TILE_SIZE = ${w}u;
  var<workgroup> tileQ: array<${x.type.value}, ${w*w}>;
  var<workgroup> tileV: array<${x.type.value}, ${w*w}>;
  ${E.registerUniforms(O).declareVariables(...z,...q)}
  ${E.mainStart([w,w,1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${c===1?"headIdx":"headIdx / uniforms.n_reps"};
   let kv_num_heads = ${c===1?"uniforms.num_heads":"uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${xa(D,K,!0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${y&&d?"let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;":""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d?"let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;":""}
   var value = ${x.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${y&&d?`
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      `:`
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d?`
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }`:""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`};return{name:"AttentionScore",shaderCache:{hint:`${s!==void 0};${e}`,inputDependencies:$},getRunData:()=>({outputs:v,dispatchGroup:I,programUniforms:M}),getShaderSource:T}},bo=(e,r,t,s,n,i,o,a,l,c,p=void 0,d=void 0)=>{let u=Math.min(e.outputCount,1+(o?1:0)+(a?1:0)),_=u>1?c.pastSequenceLength:0,f=_+c.kvSequenceLength,w=l&&ye.size(l.dims)>0?l:void 0,I=[r,t];u>1&&o&&ye.size(o.dims)>0&&I.push(o),w&&I.push(w),p&&I.push(p),d&&I.push(d);let M=e.compute(Ng(u,r,t,o,w,c,_,p,d),{inputs:I,outputs:u>1?[-1,1]:[-1]})[0];e.compute(Rg(M,c.batchSize,c.numHeads,_,c.sequenceLength,f,p,d),{inputs:p&&d?[M,p,d]:[M],outputs:[]});let y=[M,s];u>1&&a&&ye.size(a.dims)>0&&y.push(a),p&&y.push(p),d&&y.push(d),e.compute(jg(u,M,s,a,c,_,p,d),{inputs:y,outputs:u>1?[0,2]:[0]})},Vg=(e,r)=>{let t=[r.batchSize,r.numHeads,r.sequenceLength,r.headSize],s=r.sequenceLength,n=r.inputHiddenSize,i=r.headSize,o=12,a={x:Math.ceil(r.headSize/o),y:Math.ceil(r.sequenceLength/o),z:r.batchSize*r.numHeads},l=[e.inputs[0],e.inputs[1],e.inputs[2]],c=[{type:12,data:s},{type:12,data:n},{type:12,data:i},{type:12,data:r.numHeads},{type:12,data:r.headSize},{type:12,data:r.hiddenSize},{type:12,data:r.hiddenSize+r.hiddenSize+r.vHiddenSize}],p=d=>{let u=ot("output_q",l[0].dataType,t),_=ot("output_k",l[0].dataType,t),f=ot("output_v",l[0].dataType,t),w=Pe("input",l[0].dataType,l[0].dims),I=Pe("weight",l[1].dataType,l[1].dims),M=Pe("bias",l[2].dataType,l[2].dims),y=w.type.storage,$=[{name:"M",type:"u32"},{name:"K",type:"u32"},{name:"N",type:"u32"},{name:"num_heads",type:"u32"},{name:"head_size",type:"u32"},{name:"hidden_size",type:"u32"},{name:"ldb",type:"u32"}];return`
  const TILE_SIZE = ${o}u;
  var<workgroup> tileInput: array<${y}, ${o*o}>;
  var<workgroup> tileWeightQ: array<${y}, ${o*o}>;
  var<workgroup> tileWeightK: array<${y}, ${o*o}>;
  var<workgroup> tileWeightV: array<${y}, ${o*o}>;
  ${d.registerUniforms($).declareVariables(w,I,M,u,_,f)}
  ${d.mainStart([o,o,1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${y}(0);
    var valueK = ${y}(0);
    var valueV = ${y}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`};return e.compute({name:"AttentionPrepare",shaderCache:{inputDependencies:["type","type","type"]},getRunData:()=>({outputs:[{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0},{dims:t,dataType:e.inputs[0].dataType,gpuDataType:0}],dispatchGroup:a,programUniforms:c}),getShaderSource:p},{inputs:l,outputs:[-1,-1,-1]})},tM=(e,r)=>{let t=Bg(e.inputs,r),[s,n,i]=Vg(e,t);return bo(e,s,n,i,e.inputs[4],void 0,void 0,void 0,e.inputs[5],t)}}),Ug,Wg,Gg,rM,U2=Be(()=>{$s(),gt(),vt(),cr(),Tt(),Ug=(e,r)=>{if(!e||e.length!==5)throw new Error("BatchNormalization requires 5 inputs");let t=(s,n,i)=>{let o=n.length;if(o!==s.length)throw new Error(`${i}: num dimensions != ${o}`);n.forEach((a,l)=>{if(a!==s[l])throw new Error(`${i}: dim[${l}] do not match`)})};if(e[0].dims.length>1){let s=r.format==="NHWC"?r.spatial?e[0].dims.slice(-1):e[0].dims.slice(-1).concat(e[0].dims.slice(1,e[0].dims.length-1)):e[0].dims.slice(1,r.spatial?2:void 0);t(e[1].dims,s,"Invalid input scale"),t(e[2].dims,s,"Invalid input B"),t(e[3].dims,s,"Invalid input mean"),t(e[4].dims,s,"Invalid input var")}else t(e[1].dims,[1],"Invalid input scale"),t(e[2].dims,[1],"Invalid input B"),t(e[3].dims,[1],"Invalid input mean"),t(e[4].dims,[1],"Invalid input var")},Wg=(e,r)=>{let{epsilon:t,spatial:s,format:n}=r,i=e[0].dims,o=s?ar(i[i.length-1]):1,a=n==="NHWC"&&i.length>1?o:1,l=ye.size(i)/o,c=s,p=c?i.length:i,d=Pe("x",e[0].dataType,e[0].dims,o),u=Pe("scale",e[1].dataType,e[1].dims,a),_=Pe("bias",e[2].dataType,e[2].dims,a),f=Pe("inputMean",e[3].dataType,e[3].dims,a),w=Pe("inputVar",e[4].dataType,e[4].dims,a),I=ot("y",e[0].dataType,p,o),M=()=>{let $="";if(s)$=`let cOffset = ${i.length===1?"0u":n==="NHWC"?`outputIndices[${i.length-1}] / ${o}`:"outputIndices[1]"};`;else if(n==="NCHW")$=`
            ${I.indicesSet("outputIndices","0","0")}
            let cOffset = ${I.indicesToOffset("outputIndices")};`;else{$=`var cIndices = ${u.type.indices}(0);
                       cIndices[0] = outputIndices[${i.length-1}];`;for(let v=1;v<u.rank;v++)$+=`cIndices[${v}] = outputIndices[${v}];`;$+=`let cOffset = ${u.indicesToOffset("cIndices")};`}return $},y=$=>`
  const epsilon = ${t};
  ${$.registerUniform("outputSize","u32").declareVariables(d,u,_,f,w,I)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${I.offsetToIndices(`global_idx * ${o}`)};
    ${M()}
    let scale = ${u.getByOffset("cOffset")};
    let bias = ${_.getByOffset("cOffset")};
    let inputMean = ${f.getByOffset("cOffset")};
    let inputVar = ${w.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${I.setByOffset("global_idx","value")}
  }`;return{name:"BatchNormalization",shaderCache:{hint:`${r.epsilon}_${r.format}_${s}_${o}`,inputDependencies:c?["rank","type","type","type","type"]:void 0},getShaderSource:y,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c?[{type:12,data:l},...ct(i)]:[{type:12,data:l}]})}},Gg=e=>Bt(e),rM=(e,r)=>{let{inputs:t,outputCount:s}=e,n=Gg({...r,outputCount:s});if(Zt.webgpu.validateInputContent&&Ug(t,n),r.trainingMode)throw new Error("BatchNormalization trainingMode is not supported yet.");e.compute(Wg(t,n))}}),Kg,qg,sM,W2=Be(()=>{vt(),Tt(),Kg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![320,640,1280].includes(e[0].dims[2]))throw new Error("number of channels should be 320, 640 or 1280");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},qg=e=>{let r=e[0].dims,t=e[0].dims[2],s=ye.size(r)/4,n=e[0].dataType,i=Pe("input",n,r,4),o=Pe("bias",n,[t],4),a=Pe("residual",n,r,4),l=ot("output",n,r,4);return{name:"BiasAdd",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(s/64)}}),getShaderSource:c=>`
  const channels = ${t}u / 4;
  ${c.declareVariables(i,o,a,l)}

  ${c.mainStart()}
    ${c.guardAgainstOutOfBoundsWorkgroupSizes(s)}
    let value = ${i.getByOffset("global_idx")}
      + ${o.getByOffset("global_idx % channels")} + ${a.getByOffset("global_idx")};
    ${l.setByOffset("global_idx","value")}
  }`}},sM=e=>{Kg(e.inputs),e.compute(qg(e.inputs))}}),Hg,Lt,nM,iM,oM,aM,lM,cM,uM,dM,pM,Qg,hM,mM,fM,_M,uo,gM,La,wM,yM,bM,MM,vM,xM,TM,EM,PM,CM,SM,$M,kM,IM,AM,FM,Wc,DM,Bu,Ru,OM,LM,zM,Xg,Yg,BM,_d=Be(()=>{gt(),vt(),cr(),Tt(),Hg=(e,r,t,s,n,i,o)=>{let a=Math.ceil(r/4),l="";typeof n=="string"?l=`${n}(a)`:l=n("a");let c=Pe("inputData",t,[a],4),p=ot("outputData",s,[a],4),d=[{name:"vec_size",type:"u32"}];return o&&d.push(...o),`
      ${e.registerUniforms(d).declareVariables(c,p)}

  ${i??""}

  ${e.mainStart()}
    ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${c.getByOffset("global_idx")};
    ${p.setByOffset("global_idx",l)}
  }`},Lt=(e,r,t,s,n,i=e.dataType,o,a)=>{let l=[{type:12,data:Math.ceil(ye.size(e.dims)/4)}];return o&&l.push(...o),{name:r,shaderCache:{hint:n,inputDependencies:["type"]},getShaderSource:c=>Hg(c,ye.size(e.dims),e.dataType,i,t,s,a),getRunData:c=>({outputs:[{dims:e.dims,dataType:i}],dispatchGroup:{x:Math.ceil(ye.size(c[0].dims)/64/4)},programUniforms:l})}},nM=e=>{e.compute(Lt(e.inputs[0],"Abs","abs"))},iM=e=>{e.compute(Lt(e.inputs[0],"Acos","acos"))},oM=e=>{e.compute(Lt(e.inputs[0],"Acosh","acosh"))},aM=e=>{e.compute(Lt(e.inputs[0],"Asin","asin"))},lM=e=>{e.compute(Lt(e.inputs[0],"Asinh","asinh"))},cM=e=>{e.compute(Lt(e.inputs[0],"Atan","atan"))},uM=e=>{e.compute(Lt(e.inputs[0],"Atanh","atanh"))},dM=e=>Bt(e),pM=(e,r)=>{let t;switch(r.to){case 10:t="vec4<f16>";break;case 1:t="vec4<f32>";break;case 12:t="vec4<u32>";break;case 6:t="vec4<i32>";break;case 9:t="vec4<bool>";break;default:throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${r.to}`)}e.compute(Lt(e.inputs[0],"Cast",t,void 0,r.cacheKey,r.to))},Qg=e=>{let r,t,s=e.length>=2&&e[1].data!==0,n=e.length>=3&&e[2].data!==0;switch(e[0].dataType){case 1:r=s?e[1].getFloat32Array()[0]:-34028234663852886e22,t=n?e[2].getFloat32Array()[0]:34028234663852886e22;break;case 10:r=s?e[1].getUint16Array()[0]:64511,t=n?e[2].getUint16Array()[0]:31743;break;default:throw new Error("Unsupport data type")}return Bt({min:r,max:t})},hM=(e,r)=>{let t=r||Qg(e.inputs),s=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Clip",n=>`clamp(${n}, vec4<${s}>(uniforms.min), vec4<${s}>(uniforms.max))`,void 0,t.cacheKey,void 0,[{type:e.inputs[0].dataType,data:t.min},{type:e.inputs[0].dataType,data:t.max}],[{name:"min",type:s},{name:"max",type:s}]),{inputs:[0]})},mM=e=>{e.compute(Lt(e.inputs[0],"Ceil","ceil"))},fM=e=>{e.compute(Lt(e.inputs[0],"Cos","cos"))},_M=e=>{e.compute(Lt(e.inputs[0],"Cosh","cosh"))},uo=e=>Bt(e),gM=(e,r)=>{let t=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Elu",s=>`elu_vf32(${s})`,`
  const elu_alpha_ = ${t}(${r.alpha});

  fn elu_f32(a: ${t}) -> ${t} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${t}>) -> vec4<${t}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`,r.cacheKey))},La=(e="f32")=>`
const r0: ${e} = 0.3275911;
const r1: ${e} = 0.254829592;
const r2: ${e} = -0.284496736;
const r3: ${e} = 1.421413741;
const r4: ${e} = -1.453152027;
const r5: ${e} = 1.061405429;

fn erf_vf32(v: vec4<${e}>) -> vec4<${e}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`,wM=e=>{let r=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Erf",t=>`erf_vf32(${t})`,La(r)))},yM=e=>{e.compute(Lt(e.inputs[0],"Exp","exp"))},bM=e=>{e.compute(Lt(e.inputs[0],"Floor","floor"))},MM=e=>{let r=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Gelu",t=>`0.5 * ${t} * (1.0 + erf_vf32(${t} * 0.7071067811865475))`,La(r)))},vM=(e,r)=>{let t=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"LeakyRelu",s=>`select(leaky_relu_alpha_ * ${s}, ${s}, ${s} >= vec4<${t}>(0.0))`,`const leaky_relu_alpha_ = ${t}(${r.alpha});`,r.cacheKey))},xM=e=>{e.compute(Lt(e.inputs[0],"Not",r=>`!${r}`))},TM=e=>{e.compute(Lt(e.inputs[0],"Neg",r=>`-${r}`))},EM=e=>{e.compute(Lt(e.inputs[0],"Reciprocal",r=>`1.0/${r}`))},PM=e=>{let r=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"Relu",t=>`select(vec4<${r}>(0.0), ${t}, ${t} > vec4<${r}>(0.0))`))},CM=e=>{e.compute(Lt(e.inputs[0],"Sigmoid",r=>`(1.0 / (1.0 + exp(-${r})))`))},SM=e=>Bt(e),$M=(e,r)=>{let t=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"HardSigmoid",s=>`max(vec4<${t}>(0.0), min(vec4<${t}>(1.0), ${r.alpha} * ${s} + vec4<${t}>(${r.beta})))`,void 0,r.cacheKey))},kM=e=>{e.compute(Lt(e.inputs[0],"Sin","sin"))},IM=e=>{e.compute(Lt(e.inputs[0],"Sinh","sinh"))},AM=e=>{e.compute(Lt(e.inputs[0],"Sqrt","sqrt"))},FM=e=>{e.compute(Lt(e.inputs[0],"Tan","tan"))},Wc=e=>`sign(${e}) * (1 - exp(-2 * abs(${e}))) / (1 + exp(-2 * abs(${e})))`,DM=e=>{e.compute(Lt(e.inputs[0],"Tanh",Wc))},Bu=(e="f32")=>`
const fast_gelu_a: ${e} = 0.5;
const fast_gelu_b: ${e} = 0.7978845608028654;
const fast_gelu_c: ${e} = 0.035677408136300125;

fn tanh_v(v: vec4<${e}>) -> vec4<${e}> {
  return ${Wc("v")};
}
`,Ru=e=>`(fast_gelu_a + fast_gelu_a * tanh_v(${e} * (fast_gelu_c * ${e} * ${e} + fast_gelu_b))) * ${e}`,OM=e=>{let r=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"FastGelu",Ru,Bu(r),void 0,e.inputs[0].dataType))},LM=(e,r)=>{let t=jr(e.inputs[0].dataType);return e.compute(Lt(e.inputs[0],"ThresholdedRelu",s=>`select(vec4<${t}>(0.0), ${s}, ${s} > thresholded_relu_alpha_)`,`const thresholded_relu_alpha_ = vec4<${t}>(${r.alpha});`,r.cacheKey)),0},zM=e=>{e.compute(Lt(e.inputs[0],"Log","log"))},Xg=(e,r)=>`
const alpha = vec4<${e}>(${r});
const one = ${e}(1.0);
const zero = ${e}(0.0);

fn quick_gelu_impl(x: vec4<${e}>) -> vec4<${e}> {
  let v = x *alpha;
  var x1 : vec4<${e}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`,Yg=e=>`quick_gelu_impl(${e})`,BM=(e,r)=>{let t=jr(e.inputs[0].dataType);e.compute(Lt(e.inputs[0],"QuickGelu",Yg,Xg(t,r.alpha),r.cacheKey,e.inputs[0].dataType))}}),Jg,Zg,RM,G2=Be(()=>{vt(),Tt(),_d(),Jg=e=>{if(e[0].dims.length!==3)throw new Error("input should have 3 dimensions");if(![2560,5120,10240].includes(e[0].dims[2]))throw new Error("hidden state should be 2560, 5120 or 10240");if(e[1].dims.length!==1)throw new Error("bias is expected to have 1 dimensions");if(e[0].dims[2]!==e[1].dims[0])throw new Error("last dimension of input and bias are not the same")},Zg=e=>{let r=e[0].dims.slice();r[2]=r[2]/2;let t=Pe("input",e[0].dataType,e[0].dims,4),s=Pe("bias",e[0].dataType,[e[0].dims[2]],4),n=ot("output",e[0].dataType,r,4),i=ye.size(r)/4,o=kr(e[0].dataType);return{name:"BiasSplitGelu",getRunData:()=>({outputs:[{dims:r,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)}}),getShaderSource:a=>`
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${e[0].dims[2]/4/2}u;

  ${a.declareVariables(t,s,n)}

  ${La(o)}

  ${a.mainStart()}
    ${a.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${n.setByOffset("global_idx","valueLeft * geluRight")}
  }`}},RM=e=>{Jg(e.inputs),e.compute(Zg(e.inputs))}}),ew,tw,vs,NM,jM,VM,UM,WM,GM,KM,qM,HM,QM,K2=Be(()=>{gt(),vt(),Tt(),ew=(e,r,t,s,n,i,o,a,l,c,p,d)=>{let u,_;typeof a=="string"?u=_=(y,$)=>`${a}((${y}),(${$}))`:typeof a=="function"?u=_=a:(u=a.scalar,_=a.vector);let f=ot("outputData",p,s.length,4),w=Pe("aData",l,r.length,4),I=Pe("bData",c,t.length,4),M;if(n)if(i){let y=ye.size(r)===1,$=ye.size(t)===1,v=r.length>0&&r[r.length-1]%4===0,T=t.length>0&&t[t.length-1]%4===0;y||$?M=f.setByOffset("global_idx",_(y?`${w.type.value}(${w.getByOffset("0")}.x)`:w.getByOffset("global_idx"),$?`${I.type.value}(${I.getByOffset("0")}.x)`:I.getByOffset("global_idx"))):M=`
            let outputIndices = ${f.offsetToIndices("global_idx * 4u")};
            let offsetA = ${w.broadcastedIndicesToOffset("outputIndices",f)};
            let offsetB = ${I.broadcastedIndicesToOffset("outputIndices",f)};
            ${f.setByOffset("global_idx",_(o||v?w.getByOffset("offsetA / 4u"):`${w.type.value}(${w.getByOffset("offsetA / 4u")}[offsetA % 4u])`,o||T?I.getByOffset("offsetB / 4u"):`${I.type.value}(${I.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `}else M=f.setByOffset("global_idx",_(w.getByOffset("global_idx"),I.getByOffset("global_idx")));else{if(!i)throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");let y=($,v,T="")=>{let E=`aData[indexA${v}][componentA${v}]`,x=`bData[indexB${v}][componentB${v}]`;return`
            let outputIndices${v} = ${f.offsetToIndices(`global_idx * 4u + ${v}u`)};
            let offsetA${v} = ${w.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
            let offsetB${v} = ${I.broadcastedIndicesToOffset(`outputIndices${v}`,f)};
            let indexA${v} = offsetA${v} / 4u;
            let indexB${v} = offsetB${v} / 4u;
            let componentA${v} = offsetA${v} % 4u;
            let componentB${v} = offsetB${v} % 4u;
            ${$}[${v}] = ${T}(${u(E,x)});
          `};p===9?M=`
            var data = vec4<u32>(0);
            ${y("data",0,"u32")}
            ${y("data",1,"u32")}
            ${y("data",2,"u32")}
            ${y("data",3,"u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:M=`
            ${y("outputData[global_idx]",0)}
            ${y("outputData[global_idx]",1)}
            ${y("outputData[global_idx]",2)}
            ${y("outputData[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(w,I,f)}

        ${d??""}

        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${M}
      }`},tw=(e,r,t,s,n,i,o=t.dataType)=>{let a=t.dims.map(w=>Number(w)??1),l=s.dims.map(w=>Number(w)??1),c=!ye.areEqual(a,l),p=a,d=ye.size(a),u=!1,_=!1,f=[c];if(c){let w=yi.calcShape(a,l,!1);if(!w)throw new Error("Can't perform binary op on the given tensors");p=w.slice(),d=ye.size(p);let I=ye.size(a)===1,M=ye.size(l)===1,y=a.length>0&&a[a.length-1]%4===0,$=l.length>0&&l[l.length-1]%4===0;f.push(I),f.push(M),f.push(y),f.push($);let v=1;for(let T=1;T<p.length;T++){let E=a[a.length-T],x=l[l.length-T];if(E===x)v*=E;else break}v%4===0?(_=!0,u=!0):(I||M||y||$)&&(u=!0)}else u=!0;return f.push(u),{name:e,shaderCache:{hint:r+f.map(w=>w.toString()).join("_"),inputDependencies:["rank","rank"]},getShaderSource:w=>ew(w,a,l,p,u,c,_,n,t.dataType,s.dataType,o,i),getRunData:()=>({outputs:[{dims:p,dataType:o}],dispatchGroup:{x:Math.ceil(d/64/4)},programUniforms:[{type:12,data:Math.ceil(ye.size(p)/4)},...ct(a,l,p)]})}},vs=(e,r,t,s,n,i)=>{e.compute(tw(r,n??"",e.inputs[0],e.inputs[1],t,s,i))},NM=e=>{vs(e,"Add",(r,t)=>`${r}+${t}`)},jM=e=>{vs(e,"Div",(r,t)=>`${r}/${t}`)},VM=e=>{vs(e,"Equal",{scalar:(r,t)=>`u32(${r}==${t})`,vector:(r,t)=>`vec4<u32>(${r}==${t})`},void 0,void 0,9)},UM=e=>{vs(e,"Mul",(r,t)=>`${r}*${t}`)},WM=e=>{let r=Pe("input",e.inputs[0].dataType,e.inputs[0].dims).type.value;vs(e,"Pow",{scalar:(t,s)=>`pow_custom(${t},${s})`,vector:(t,s)=>`pow_vector_custom(${t},${s})`},`
    fn pow_custom(a : ${r}, b : ${r}) -> ${r} {
      if (b == ${r}(0.0)) {
        return ${r}(1.0);
      } else if (a < ${r}(0.0) && f32(b) != floor(f32(b))) {
        return ${r}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${r}(1.0), round(f32(abs(b) % ${r}(2.0))) != 1.0) * ${r}(${r==="i32"?"round":""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${r}>, b : vec4<${r}>) -> vec4<${r}> {
      // TODO: implement vectorized pow
      return vec4<${r}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `)},GM=e=>{vs(e,"Sub",(r,t)=>`${r}-${t}`)},KM=e=>{vs(e,"Greater",{scalar:(r,t)=>`u32(${r}>${t})`,vector:(r,t)=>`vec4<u32>(${r}>${t})`},void 0,void 0,9)},qM=e=>{vs(e,"Less",{scalar:(r,t)=>`u32(${r}<${t})`,vector:(r,t)=>`vec4<u32>(${r}<${t})`},void 0,void 0,9)},HM=e=>{vs(e,"GreaterOrEqual",{scalar:(r,t)=>`u32(${r}>=${t})`,vector:(r,t)=>`vec4<u32>(${r}>=${t})`},void 0,void 0,9)},QM=e=>{vs(e,"LessOrEqual",{scalar:(r,t)=>`u32(${r}<=${t})`,vector:(r,t)=>`vec4<u32>(${r}<=${t})`},void 0,void 0,9)}}),rw,sw,nw,iw,XM,YM,q2=Be(()=>{gt(),vt(),cr(),Tt(),rw=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");let t=0,s=e[t],n=s.dataType,i=s.dims.length;e.forEach((o,a)=>{if(a!==t){if(o.dataType!==n)throw new Error("input tensors should be one type");if(o.dims.length!==i)throw new Error("input tensors should have the same shape");o.dims.forEach((l,c)=>{if(c!==r&&l!==s.dims[c])throw new Error("non concat dimensions must match")})}})},sw=(e,r)=>`
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${e}u>(${r});
    for (var i: u32 = 0u; i < ${e}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${e}u;
  }`,nw=(e,r)=>{let t=e.length,s=[];for(let n=0;n<t;++n){let i=r.setByOffset("global_idx",e[n].getByIndices("indices"));t===1?s.push(i):n===0?s.push(`if (inputIndex == ${n}u) { ${i} }`):n===t-1?s.push(`else { ${i} }`):s.push(`else if (inputIndex == ${n}) { ${i} }`)}return s.join(`
`)},iw=(e,r,t,s)=>{let n=ye.size(t),i=new Array(e.length),o=new Array(e.length),a=0,l=[],c=[],p=[{type:12,data:n}];for(let w=0;w<e.length;++w)a+=e[w].dims[r],i[w]=a,c.push(e[w].dims.length),o[w]=Pe(`input${w}`,s,c[w]),l.push("rank"),p.push({type:12,data:i[w]});for(let w=0;w<e.length;++w)p.push(...ct(e[w].dims));p.push(...ct(t));let d=ot("output",s,t.length),u=d.indicesGet("indices",r),_=Array.from(Array(i.length).keys()).map(w=>`uniforms.sizeInConcatAxis${w}`).join(","),f=w=>`

  ${(()=>{w.registerUniform("outputSize","u32");for(let I=0;I<e.length;I++)w.registerUniform(`sizeInConcatAxis${I}`,"u32");return w.declareVariables(...o,d)})()}

  ${sw(i.length,_)}

  ${w.mainStart()}
    ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${u});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${i.length}u>(${_});
      ${u} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${nw(o,d)}
  }`;return{name:"Concat",shaderCache:{hint:`${r}`,inputDependencies:l},getRunData:()=>({outputs:[{dims:t,dataType:s}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:p}),getShaderSource:f}},XM=(e,r)=>{let t=e.inputs,s=t[0].dims,n=ye.normalizeAxis(r.axis,s.length);rw(t,n);let i=s.slice();i[n]=t.reduce((a,l)=>a+(l.dims.length>n?l.dims[n]:0),0);let o=t.filter(a=>ye.size(a.dims)>0);e.compute(iw(o,n,i,t[0].dataType),{inputs:o})},YM=e=>Bt({axis:e.axis})}),Nn,jn,Vn,gd,Wn=Be(()=>{gt(),vt(),Nn=(e,r,t="f32")=>{switch(e.activation){case"Relu":return`value = max(value, ${r}(0.0));`;case"Sigmoid":return`value = (${r}(1.0) / (${r}(1.0) + exp(-value)));`;case"Clip":return`value = clamp(value, ${r}(${t}(uniforms.clip_min)), ${r}(${t}(uniforms.clip_max)));`;case"HardSigmoid":return`value = max(${r}(0.0), min(${r}(1.0), ${t}(uniforms.alpha) * value + ${t}(uniforms.beta)));`;case"LeakyRelu":return`value = select(${t}(uniforms.alpha) * value, value, value >= ${r}(0.0));`;case"Tanh":return`let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;case"":return"";default:throw new Error(`Unsupported activation ${e.activation}`)}},jn=(e,r)=>{e.activation==="Clip"?r.push({type:1,data:e.clipMax},{type:1,data:e.clipMin}):e.activation==="HardSigmoid"?r.push({type:1,data:e.alpha},{type:1,data:e.beta}):e.activation==="LeakyRelu"&&r.push({type:1,data:e.alpha})},Vn=(e,r)=>{e.activation==="Clip"?r.push({name:"clip_max",type:"f32"},{name:"clip_min",type:"f32"}):e.activation==="HardSigmoid"?r.push({name:"alpha",type:"f32"},{name:"beta",type:"f32"}):e.activation==="LeakyRelu"&&r.push({name:"alpha",type:"f32"})},gd=e=>{let r=e?.activation||"";if(r==="HardSigmoid"){let[t,s]=e?.activation_params||[.2,.5];return{activation:r,alpha:t,beta:s}}else if(r==="Clip"){let[t,s]=e?.activation_params||[xb,Tb];return{activation:r,clipMax:s,clipMin:t}}else if(r==="LeakyRelu"){let[t]=e?.activation_params||[.01];return{activation:r,alpha:t}}return{activation:r}}}),Fr,JM,wd=Be(()=>{Fr=(e,r)=>{switch(e){case 1:return r;case 2:return`vec2<${r}>`;case 3:return`vec3<${r}>`;case 4:return`vec4<${r}>`;default:throw new Error(`${e}-component is not supported.`)}},JM=e=>`
      ${e?"value = value + getBiasByOutputCoords(coords);":""}
      `}),ZM,H2=Be(()=>{ZM=e=>`
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${e}.x), i32(${e}.y), i32(${e}.z), 1));
}
`}),ho,yd,bd=Be(()=>{gt(),vt(),Tt(),Wn(),ho=(e,r,t,s,n)=>{let i=s-t;return`
      ${Array.from({length:t}).map((o,a)=>`
      if (${at(r.shape,a,r.rank)} != 1) {
        ${r.indicesSet(e,a,at(n,a+i,s))}
      } else {
        ${r.indicesSet(e,a,0)}
      }`).join("")}
`},yd=(e,r,t,s,n=!1,i)=>{let o=e[0].dims,a=e[1].dims,l=o[o.length-2],c=a[a.length-1],p=o[o.length-1],d=ar(c),u=ar(p),_=ar(l),f=ye.size(t)/d/_,w=e.length>2,I=s?s.slice(0,-2):t.slice(0,-2),M=[ye.size(I),l,c],y=[{type:12,data:f},{type:12,data:l},{type:12,data:c},{type:12,data:p}];jn(r,y),y.push(...ct(I,o,a)),w&&y.push(...ct(e[2].dims)),y.push(...ct(M));let $=v=>{let T=hd("batch_dims",e[0].dataType,I.length),E=Pe("a",e[0].dataType,o.length,u),x=Pe("b",e[1].dataType,a.length,d),S=ot("output",e[0].dataType,M.length,d),z=kr(S.type.tensor),D=Nn(r,S.type.value,z),K=[E,x],q="";if(w){let Q=n?d:1;K.push(Pe("bias",e[2].dataType,e[2].dims.length,Q)),q=`${n?`value += bias[col / ${Q}];`:`value += ${S.type.value}(bias[row + i]);`}`}let O=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"}];Vn(r,O);let Z=()=>{let Q=`var a_data: ${E.type.value};`;for(let J=0;J<u;J++)Q+=`
              let b_data${J} = b[(b_offset + (k + ${J}) * uniforms.N + col) / ${d}];`;for(let J=0;J<_;J++){Q+=`a_data = a[(a_offset + (row + ${J}) * uniforms.K + k) / ${u}];`;for(let re=0;re<u;re++)Q+=`
            values[${J}] = fma(${x.type.value}(a_data${u===1?"":`[${re}]`}), b_data${re}, values[${J}]);
`}return Q};return`
  ${v.registerUniforms(O).registerInternalVariables(T).declareVariables(...K,S)}
  ${v.mainStart()}
    ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${_};
    let row = (index1 % stride1) * ${_};
    let batch = index1 / stride1;

    ${t.length===2?"":`let batch_indices = ${T.offsetToIndices("batch")};`}

    var a_indices: ${E.type.indices};
    ${ho("a_indices",E,E.rank-2,T.rank,"batch_indices")}
    ${E.indicesSet("a_indices",E.rank-2,0)}
    ${E.indicesSet("a_indices",E.rank-1,0)}
    let a_offset = ${E.indicesToOffset("a_indices")};

    var b_indices: ${x.type.indices};
    ${ho("b_indices",x,x.rank-2,T.rank,"batch_indices")}
    ${x.indicesSet("b_indices",x.rank-2,0)}
    ${x.indicesSet("b_indices",x.rank-1,0)}
    let b_offset = ${x.indicesToOffset("b_indices")};
    var values: array<${S.type.value}, ${_}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${u}) {
      ${Z()}
    }
    for (var i = 0u; i < ${_}u; i++) {
      var value = values[i];
      ${q}
      ${D}
      let cur_indices = ${S.type.indices}(batch, row + i, col);
      let offset = ${S.indicesToOffset("cur_indices")};
      ${S.setByOffset(`offset / ${d}`,"value")};
    }
  }
  `};return{name:"MatMulNaive",shaderCache:{hint:`${r.activation};${d};${u};${_};${n}`,inputDependencies:w?["rank","rank","rank"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:i?i(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(f/64)},programUniforms:y}),getShaderSource:$}}}),ow,aw,Nu,Gc,lw,ju,cw,qa,Md=Be(()=>{gt(),vt(),Tt(),Wn(),bd(),wd(),ow=(e,r)=>e?`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${r?", batchIndices":""});
        `:`
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${r?", batchIndices":""});
        `,aw=(e,r)=>e?`
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${r===3?"":"let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }`:`
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${r===3?"":"acc[i] = BCached3 * ACached.w + acc[i];"}
        }`,Nu=(e,r,t="f32",s,n=!1,i=32,o=!1,a=32)=>{let l=r[1]*e[1],c=r[0]*e[0],p=n?l:i,d=n?i:l,u=p/r[0],_=i/r[1];if(!((n&&u===4&&e[1]===4||!n&&(u===3||u===4))&&p%r[0]===0&&i%r[1]===0&&e[0]===4))throw new Error(`If transposeA ${n} is true, innerElementSize ${u} and workPerThread[1] ${e[1]} must be 4.
      Otherwise, innerElementSize ${u} must be 3 or 4.
  tileAWidth ${p} must be divisible by workgroupSize[0]${r[0]}. tileInner ${i} must be divisible by workgroupSize[1] ${r[1]}. colPerThread ${e[0]} must be 4.`);return`
var<workgroup> mm_Asub: array<array<vec${u}<${t}>, ${p/u}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${t}>, ${c/e[0]}>, ${i}>;

const rowPerThread = ${e[1]};
const colPerThread = ${e[0]};
const innerElementSize = ${u};
const tileInner = ${i};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${o?"0":"i32(globalId.z)"};
  ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${o?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

  var acc: array<vec4<${t}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${_};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${ow(n,s)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${s?", batchIndices":""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${u===3?"":"let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${aw(n,u)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`},Gc=(e,r)=>e?`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${r?", batchIndices":""});
            `:`
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${r?", batchIndices":""});
            `,lw=e=>e?"let ACached = mm_Asub[k][tileRow + innerRow];":"let ACached = mm_Asub[tileRow + innerRow][k];",ju=(e,r,t="f32",s,n=!1,i=32,o=!1,a=32,l=!1)=>{let c=e[1]*r[1],p=e[0]*r[0],d=n?c:i,u=n?i:c;if(!(u%r[1]===0&&d%r[0]===0&&i%r[1]===0))throw new Error(`tileAHight ${u} must be divisible by workgroupSize[1]${r[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${r[0]}, tileInner ${i} must be divisible by workgroupSize[1]${r[1]}`);let _=u/r[1],f=d/r[0],w=i/r[1],I=l?`
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${c};
    let globalColStart = i32(workgroupId.x) * ${p};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${u}; inputRow = inputRow + ${r[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${r[0]}) {
          ${Gc(n,s)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${i}; inputRow = inputRow + ${r[1]}) {
            for (var inputCol = localCol; inputCol < ${p}; inputCol = inputCol + ${r[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${s?", batchIndices":""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${t}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${r[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${n?`mm_Asub[k][localRow + innerRow * ${r[1]}];`:`mm_Asub[localRow + innerRow * ${r[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${r[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${r[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    `:`
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${c};

let tileRowA = i32(localId.y) * ${_};
let tileColA = i32(localId.x) * ${f};
let tileRowB = i32(localId.y) * ${w};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${_}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${f}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${Gc(n,s)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${w}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${s?", batchIndices":""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${t}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${lw(n)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;return`
  var<workgroup> mm_Asub : array<array<${t}, ${d}>, ${u}>;
  var<workgroup> mm_Bsub : array<array<${t}, ${p}>, ${i}>;
  const rowPerThread = ${e[1]};
  const colPerThread = ${e[0]};
  const tileInner = ${i};

@compute @workgroup_size(${r[0]}, ${r[1]}, ${r[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${o?"0":"i32(globalId.z)"};
    ${s?`let batchIndices = ${s.offsetToIndices("u32(batch)")};`:""}
    let num_tiles = ${o?`${Math.ceil(a/i)}`:"(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${o?`i32(globalId.z) * ${a}`:"0"};

    var acc : array<array<${t}, colPerThread>, rowPerThread>;
    ${I}
  }
`},cw=(e,r,t,s,n=!1)=>{let[i,o,a,l]=s,c=kr(s[0].type.tensor);return`
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${Fr(e,c)} {
      var value = ${Fr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${o.type.indices};
        ${ho("aIndices",o,o.rank-2,i.rank,"batchIndices")}
        ${o.indicesSet("aIndices",o.rank-2,"u32(row)")}
        ${o.indicesSet("aIndices",o.rank-1,"u32(colIn)")}
        value = ${o.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${i.type.indices}) -> ${Fr(e,c)} {
      var value = ${Fr(e,c)}(0.0);
      let col = colIn * ${e};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${a.type.indices};
        ${ho("bIndices",a,a.rank-2,i.rank,"batchIndices")}
        ${a.indicesSet("bIndices",a.rank-2,"u32(row)")}
        ${a.indicesSet("bIndices",a.rank-1,"u32(colIn)")}
        value = ${a.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${Fr(e,c)}) {
      let col = colIn * ${e};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${r?`value = value + ${n?"bias[colIn]":`${Fr(e,c)}(bias[row])`};`:""}
        ${t}
        ${l.setByIndices("vec3<u32>(coords)","value")}
      }
    }
    `},qa=(e,r,t,s,n=!1,i)=>{let o=e[0].dims,a=e[1].dims,l=o.slice(0,-2),c=a.slice(0,-2),p=s?s.slice(0,-2):t.slice(0,-2),d=ye.size(p),u=o[o.length-2],_=o[o.length-1],f=a[a.length-1],w=_%4===0&&f%4===0,I=u<=8?[4,1,1]:[4,4,1],M=[8,8,1],y=[Math.ceil(f/M[0]/I[0]),Math.ceil(u/M[1]/I[1]),Math.ceil(d/M[2]/I[2])],$=w?4:1,v=[...l,u,_/$],T=v.length,E=[...c,_,f/$],x=E.length,S=[d,u,f/$],z=[{type:6,data:u},{type:6,data:f},{type:6,data:_}];jn(r,z),z.push(...ct(p,v,E));let D=["rank","rank"],K=e.length>2;K&&(z.push(...ct(e[2].dims)),D.push("rank")),z.push(...ct(S));let q=O=>{let Z=p.length,Q=hd("batchDims",e[0].dataType,Z,1),J=kr(e[0].dataType),re=Pe("a",e[0].dataType,T,$),te=Pe("b",e[1].dataType,x,$),ce=ot("result",e[0].dataType,S.length,$),ue=[re,te];if(K){let ae=n?$:1;ue.push(Pe("bias",e[2].dataType,e[2].dims.length,ae))}let B=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"}];Vn(r,B);let F=kr(ce.type.tensor),G=Nn(r,ce.type.value,F),N=cw($,K,G,[Q,re,te,ce],n);return`
  ${O.registerUniforms(B).registerInternalVariables(Q).declareVariables(...ue,ce)}
  ${N}
  ${w?Nu(I,M,J,Q):ju(I,M,J,Q)}
                   `};return{name:"MatMul",shaderCache:{hint:`${I};${r.activation};${w};${n}`,inputDependencies:D},getRunData:()=>({outputs:[{dims:i?i(t):t,dataType:e[0].dataType}],dispatchGroup:{x:y[0],y:y[1],z:y[2]},programUniforms:z}),getShaderSource:q}}}),uw,ev,Q2=Be(()=>{gt(),Ys(),Tt(),Wn(),wd(),H2(),Md(),uw=(e,r,t,s,n=!1,i,o=4,a=4,l=4,c="f32")=>{let p=z=>{switch(z){case 1:return"resData = x[xIndex];";case 3:return`resData = vec3<${c}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;case 4:return"resData = x[xIndex / 4];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},d=z=>{switch(z){case 1:return"return w[row * i32(uniforms.w_shape[3]) + colIn];";case 4:return"return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";default:throw new Error(`innerElementSize ${z} is not supported.`)}},u=e?`
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    `:`
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `,_=e?`
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    `:`
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `,f=e?"i32(uniforms.x_shape[1])":"i32(uniforms.x_shape[2])",w=e?"i32(uniforms.x_shape[2])":"i32(uniforms.x_shape[3])",I=e?"row":"col",M=e?"col":"row",y=`
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
    let outRow = ${I} / outWidth;
    let outCol = ${I} % outWidth;

    let WRow = ${M} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${M} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${M} % inChannels;
    var resData = ${Fr(o,c)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${f} && xCol >= 0 && xCol < ${w}) {
      ${u}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${p(o)}
    }
    return resData;`,$=e?r&&s?`
    let col = colIn * ${o};
    ${y}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${y}
    }
    return ${Fr(o,c)}(0.0);`:s&&t?`
    let col = colIn * ${o};
    ${y}`:`
    let col = colIn * ${o};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${y}
    }
    return ${Fr(o,c)}(0.0);`,v=e?s&&t?d(a):`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(a)}
    }
    return ${Fr(a,c)}(0.0);`:`
    let col = colIn * ${a};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(a)}
    }
    return ${Fr(a,c)}(0.0);`,T=Fr(l,c),E=Fr(e?o:a,c),x=Fr(e?a:o,c),S=Nn(i,T,c);return`
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${E} {
      ${e?$:v}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${x} {
      ${e?v:$}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${T}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${e?"i32(uniforms.result_shape[2])":"i32(uniforms.result_shape[3])"};
      ${_}
      ${JM(n)}
      ${S}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`},ev=(e,r,t,s,n,i,o,a,l)=>{let c=r.format==="NHWC",p=c?e[0].dims[3]:e[0].dims[1],d=t[0],u=c?t[2]:t[3],_=c?t[1]:t[2],f=c?t[3]:t[1],w=c&&(p%4===0||p%3===0)&&f%4===0,I=c?f:u*_,M=c?u*_:f,y=[8,8,1],$=s<=8?[4,1,1]:[4,4,1],v=[Math.ceil(I/y[0]/$[0]),Math.ceil(M/y[1]/$[1]),Math.ceil(d/y[2]/$[2])];Dt("verbose",()=>`[conv2d_mm_webgpu] dispatch = ${v}`);let T=w?c&&p%4!==0?3:4:1,E=y[1]*$[1],x=y[0]*$[0],S=Math.max(y[0]*T,y[1]),z=s%E===0,D=n%x===0,K=i%S===0,q=w?[T,4,4]:[1,1,1],O=[{type:6,data:s},{type:6,data:n},{type:6,data:i},{type:6,data:[r.pads[0],r.pads[1]]},{type:6,data:r.strides},{type:6,data:r.dilations}];jn(r,O),O.push(...ct(e[0].dims,e[1].dims));let Z=["rank","rank"];o&&(O.push(...ct(e[2].dims)),Z.push("rank")),O.push(...ct(t));let Q=J=>{let re=[{name:"dim_a_outer",type:"i32"},{name:"dim_b_outer",type:"i32"},{name:"dim_inner",type:"i32"},{name:"pad",type:"i32",length:2},{name:"stride",type:"i32",length:2},{name:"dilation",type:"i32",length:2}];Vn(r,re);let te=w?4:1,ce=kr(e[0].dataType),ue=`
      fn setOutputAtIndex(flatIndex : i32, value : ${w?`vec4<${ce}>`:ce}) {
        result[flatIndex] = ${w?`vec4<${ce}>`:ce}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${w?`vec4<${ce}>`:ce}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${w?"/ 4":""}, value);
      }`,B=Pe("x",e[0].dataType,e[0].dims.length,T===3?1:T),F=Pe("w",e[1].dataType,e[1].dims.length,te),G=[B,F],N=ot("result",e[0].dataType,t.length,te);if(o){let ae=Pe("bias",e[2].dataType,e[2].dims.length,te);G.push(ae),ue+=`
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${w?`vec4<${ce}>`:ce} {
          return bias[coords.${c?"w":"y"}${w?"/ 4":""}];
        }`}return`
        ${ZM("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${J.registerUniforms(re).declareVariables(...G,N)}
        ${ue}
        ${uw(c,z,D,K,o,r,q[0],q[1],q[2],ce)}
        ${w?Nu($,y,ce,void 0,!c,S):ju($,y,ce,void 0,!c,S,!1,void 0,a)}`};return{name:"Conv2DMatMul",shaderCache:{hint:`${r.cacheKey};${T};${w};${z};${D};${K};${E};${x};${S}`,inputDependencies:Z},getRunData:()=>({outputs:[{dims:l?l(t):t,dataType:e[0].dataType}],dispatchGroup:{x:v[0],y:v[1],z:v[2]},programUniforms:O}),getShaderSource:Q}}}),dw,Kc,Zi,pw,qc,hw,tv,rv,X2=Be(()=>{gt(),Ys(),vt(),Tt(),Wn(),wd(),dw=e=>{let r=1;for(let t=0;t<e.length;t++)r*=e[t];return r},Kc=e=>typeof e=="number"?[e,e,e]:e,Zi=(e,r)=>r<=1?e:e+(e-1)*(r-1),pw=(e,r,t,s=1)=>{let n=Zi(r,s);return Math.floor((e[0]*(t-1)-t+n)/2)},qc=(e,r,t,s,n)=>{n==null&&(n=pw(e,r[0],s[0]));let i=[0,0,0,t];for(let o=0;o<3;o++)e[o]+2*n>=r[o]&&(i[o]=Math.trunc((e[o]-r[o]+2*n)/s[o]+1));return i},hw=(e,r,t,s,n,i,o,a,l,c)=>{let p,d,u,_;if(e==="VALID"&&(e=0),typeof e=="number"){p={top:e,bottom:e,left:e,right:e,front:e,back:e};let f=qc([r,t,s,1],[a,l,c],1,[n,i,o],e);d=f[0],u=f[1],_=f[2]}else if(Array.isArray(e)){if(!e.every((w,I,M)=>w===M[0]))throw Error(`Unsupported padding parameter: ${e}`);p={top:e[0],bottom:e[1],left:e[2],right:e[3],front:e[4],back:e[5]};let f=qc([r,t,s,1],[a,l,c],1,[n,i,o],e[0]);d=f[0],u=f[1],_=f[2]}else if(e==="SAME_UPPER"){d=Math.ceil(r/n),u=Math.ceil(t/i),_=Math.ceil(s/o);let f=(d-1)*n+a-r,w=(u-1)*i+l-t,I=(_-1)*o+c-s,M=Math.floor(f/2),y=f-M,$=Math.floor(w/2),v=w-$,T=Math.floor(I/2),E=I-T;p={top:$,bottom:v,left:T,right:E,front:M,back:y}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outDepth:d,outHeight:u,outWidth:_}},tv=(e,r,t,s,n,i=!1,o="channelsLast")=>{let a,l,c,p,d;if(o==="channelsLast")[a,l,c,p,d]=e;else if(o==="channelsFirst")[a,d,l,c,p]=e;else throw new Error(`Unknown dataFormat ${o}`);let[u,,_,f,w]=r,[I,M,y]=Kc(t),[$,v,T]=Kc(s),E=Zi(_,$),x=Zi(f,v),S=Zi(w,T),{padInfo:z,outDepth:D,outHeight:K,outWidth:q}=hw(n,l,c,p,I,M,y,E,x,S),O=i?u*d:u,Z=[0,0,0,0,0];return o==="channelsFirst"?Z=[a,O,D,K,q]:o==="channelsLast"&&(Z=[a,D,K,q,O]),{batchSize:a,dataFormat:o,inDepth:l,inHeight:c,inWidth:p,inChannels:d,outDepth:D,outHeight:K,outWidth:q,outChannels:O,padInfo:z,strideDepth:I,strideHeight:M,strideWidth:y,filterDepth:_,filterHeight:f,filterWidth:w,effectiveFilterDepth:E,effectiveFilterHeight:x,effectiveFilterWidth:S,dilationDepth:$,dilationHeight:v,dilationWidth:T,inShape:e,outShape:Z,filterShape:r}},rv=(e,r,t,s,n,i)=>{let o=i==="channelsLast";o?e[0].dims[3]:e[0].dims[1];let a=[64,1,1],l={x:t.map((I,M)=>M)},c=[Math.ceil(dw(l.x.map(I=>t[I]))/a[0]),1,1];Dt("verbose",()=>`[conv3d_naive_webgpu] dispatch = ${c}`);let p=1,d=ye.size(t),u=[{type:12,data:d},{type:12,data:s},{type:12,data:n},{type:12,data:r.strides},{type:12,data:r.dilations}];jn(r,u),u.push(...ct(e[0].dims,e[1].dims));let _=["rank","rank"],f=e.length===3;f&&(u.push(...ct(e[2].dims)),_.push("rank")),u.push(...ct(t));let w=I=>{let M=[{name:"output_size",type:"u32"},{name:"filter_dims",type:"u32",length:s.length},{name:"pads",type:"u32",length:n.length},{name:"strides",type:"u32",length:r.strides.length},{name:"dilations",type:"u32",length:r.dilations.length}];Vn(r,M);let y=1,$=kr(e[0].dataType),v=Pe("x",e[0].dataType,e[0].dims.length,p),T=Pe("W",e[1].dataType,e[1].dims.length,y),E=[v,T],x=ot("result",e[0].dataType,t.length,y),S="";if(f){let K=Pe("bias",e[2].dataType,e[2].dims.length,y);E.push(K),S+=`
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${$} {
          return bias[${o?at("coords",4,5):at("coords",1,5)}];
        }`}let z=Fr(p,$),D=Nn(r,z,$);return`
            ${S}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${v.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${T.getByIndices("aIndices")};
            }
          ${I.registerUniforms(M).declareVariables(...E,x)}
          ${I.mainStart()}
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${x.offsetToIndices("global_idx")};
              let batch = ${at("coords",0,v.rank)};
              let d2 = ${o?at("coords",v.rank-1,v.rank):at("coords",1,v.rank)};
              let xFRCCorner = vec3<u32>(${o?at("coords",1,v.rank):at("coords",2,v.rank)},
              ${o?at("coords",2,v.rank):at("coords",3,v.rank)},
              ${o?at("coords",3,v.rank):at("coords",4,v.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${o?at("uniforms.x_shape",1,v.rank):at("uniforms.x_shape",2,v.rank)};
              let xShapeZ = ${o?at("uniforms.x_shape",2,v.rank):at("uniforms.x_shape",3,v.rank)};
              let xShapeW = ${o?at("uniforms.x_shape",3,v.rank):at("uniforms.x_shape",4,v.rank)};
              let xShapeU = ${o?at("uniforms.x_shape",4,v.rank):at("uniforms.x_shape",1,v.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${o?`let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            `:`let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${o?`value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`:`value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${o?`let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      `:`let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${o?`let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      `:`let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${f?"value = value + getBiasByOutputCoords(coords)":""};
              ${D}
              result[global_idx] = f32(value);
          }`};return{name:"Conv3DNaive",shaderCache:{hint:`${r.cacheKey};${o};${p};${f}`,inputDependencies:_},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:c[0],y:c[1],z:c[2]},programUniforms:u}),getShaderSource:w}}}),sv,nv,Y2=Be(()=>{gt(),vt(),Tt(),Wn(),sv=(e,r,t,s)=>{let n=e.length>2,i=n?"value += b[output_channel];":"",o=e[0].dims,a=e[1].dims,l=r.format==="NHWC",c=l?t[3]:t[1],p=c/r.group,d=l&&p>=4?ar(c):1,u=ye.size(t)/d,_=[{type:12,data:u},{type:12,data:r.dilations},{type:12,data:[r.strides[0],r.strides[1]]},{type:12,data:[r.pads[0],r.pads[1]]},{type:12,data:p}];jn(r,_),_.push(...ct(o,[a[0],a[1],a[2],a[3]/d]));let f=n?["rank","rank","rank"]:["rank","rank"];_.push(...ct([t[0],t[1],t[2],t[3]/d]));let w=I=>{let M=ot("output",e[0].dataType,t.length,d),y=kr(M.type.tensor),$=Nn(r,M.type.value,y),v=Pe("x",e[0].dataType,o.length),T=Pe("w",e[1].dataType,a.length,d),E=[v,T];n&&E.push(Pe("b",e[2].dataType,e[2].dims,d));let x=[{name:"output_size",type:"u32"},{name:"dilations",type:"u32",length:r.dilations.length},{name:"strides",type:"u32",length:2},{name:"pads",type:"u32",length:2},{name:"output_channels_per_group",type:"u32"}];Vn(r,x);let S=l?`
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${v.get("batch","xHeight","xWidth","input_channel")};
            let wVal = ${T.get("wHeight","wWidth","wInChannel","output_channel")};
            value += xVal * wVal;
          }
        }
      }
      `:`
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${v.get("batch","input_channel","xHeight","xWidth")};
            let wVal = ${T.get("output_channel","wInChannel","wHeight","wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;return`
  ${I.registerUniforms(x).declareVariables(...E,M)}

  ${I.mainStart()}
    ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${M.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l?3:1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l?1:2}], outputIndices[${l?2:3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l?2:1}];

    var value: ${M.type.value} = ${M.type.value}(0);
    ${S}
    ${i}
    ${$}
    ${M.setByOffset("global_idx","value")}
  }`};return{name:"GroupedConv",shaderCache:{hint:`${r.cacheKey}_${d}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:w}},nv=(e,r,t,s)=>{let n=e.length>2,i=ar(t[3]),o=ar(t[2]),a=ye.size(t)/i/o,l=[e[0].dims[0],e[0].dims[1],e[0].dims[2],e[0].dims[3]/i],c=[e[1].dims[0],e[1].dims[1],e[1].dims[2],e[1].dims[3]/i],p=[t[0],t[1],t[2],t[3]/i],d=[{type:12,data:a},{type:6,data:[r.strides[0],r.strides[1]]},{type:6,data:[r.pads[0],r.pads[1]]}];jn(r,d),d.push(...ct(l,c,p));let u=(o-1)*r.strides[1]+c[1],_=f=>{let w=ot("output",e[0].dataType,p.length,i),I=kr(w.type.tensor),M=Nn(r,w.type.value,I),y=Pe("x",e[0].dataType,l.length,i),$=Pe("w",e[1].dataType,c.length,i),v=[y,$];n&&v.push(Pe("b",e[2].dataType,e[2].dims,i));let T=n?"value += b[output_channel];":"",E=[{name:"output_size",type:"u32"},{name:"strides",type:"i32",length:2},{name:"pads",type:"i32",length:2}];return Vn(r,E),`
  ${f.registerUniforms(E).declareVariables(...v,w)}
  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${o}u;
    let col = (index1 % width1) * ${o}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${y.type.value}, ${u}>;
    var values: array<${w.type.value}, ${o}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${c[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${u}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${y.get("batch","u32(x_height)","u32(x_width)","input_channel")};
          } else {
            x_vals[i] = ${y.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${c[1]}; w_width++) {
          let w_val = ${$.get("w_height","w_width","0","output_channel")};
          for (var i = 0u; i < ${o}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${o}u; i++) {
      var value = values[i];
      ${T}
      ${M}
      ${w.set("batch","row","col + i","output_channel","value")};
    }
  }`};return{name:"GroupedConv-Vectorize",shaderCache:{hint:`${r.cacheKey};${i};${o};${u};${c[0]};${c[1]}`,inputDependencies:n?["rank","rank","type"]:["rank","rank"]},getRunData:()=>({outputs:[{dims:s?s(t):t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:d}),getShaderSource:_}}}),mw,Ta,fw,Ea,Vu,Hc,_w,gw,Uu,J2=Be(()=>{vt(),Q2(),X2(),Md(),Y2(),Wn(),bd(),hn(),mw=(e,r,t,s,n,i)=>{let o=e[0],a=e.slice(i?1:2,i?3:4),l=a.length,c=r[0],p=r.slice(2).map((u,_)=>u+(u-1)*(t[_]-1)),d=a.map((u,_)=>u+s[_]+s[_+l]).map((u,_)=>Math.floor((u-p[_]+n[_])/n[_]));return d.splice(0,0,o),d.splice(i?3:1,0,c),d},Ta=[2,3,1,0],fw=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length>5)throw new Error("greater than 5D is not supported");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[1]*r.group;if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");if(e.length===3&&(e[2].dims.length!==1||e[1].dims[0]!==e[2].dims[0]))throw new Error("invalid bias");let n=e[0].dims.length-2;if(r.dilations.length!==n)throw new Error(`dilations should be ${n}D`);if(r.strides.length!==n)throw new Error(`strides should be ${n}D`);if(r.pads.length!==n*2)throw new Error(`pads should be ${n*2}D`);if(r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape")},Ea=(e,r)=>{let t=e.kernelShape.slice();t.length<r[1].dims.length-2&&t.push(...Array(r[1].dims.length-2-t.length).fill(0));for(let i=2;i<r[1].dims.length;++i)t[i-2]===0&&(t[i-2]=r[1].dims[i]);let s=e.pads.slice();Ga.adjustPadsBasedOnAutoPad(r[0].dims,e.strides,e.dilations,t,s,e.format==="NHWC",e.autoPad);let n=Object.assign({},e);return Object.assign(n,{kernelShape:t,pads:s}),n},Vu=e=>{let r=gd(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],n=e.dilations,i=e.group,o=e.kernel_shape,a=e.pads,l=e.strides,c=e.w_is_const();return{autoPad:s,format:t,dilations:n,group:i,kernelShape:o,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},Hc=(e,r,t,s)=>{let n=t.format==="NHWC",i=mw(r[0].dims,r[1].dims,t.dilations,t.pads,t.strides,n);if(t.group!==1){let E=[r[0]];if(n){let x=e.kernelCustomData.wT??e.compute(es(r[1],Ta),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=x),E.push(x)}else E.push(r[1]);r.length===3&&E.push(r[2]),!e.adapterInfo.isArchitecture("ampere")&&n&&r[1].dims[0]===t.group&&r[1].dims[1]===1&&t.dilations[0]===1&&t.dilations[1]===1?e.compute(nv(E,t,i,s),{inputs:E}):e.compute(sv(E,t,i,s),{inputs:E});return}let o=r.length===3,a=r[0].dims[n?1:2],l=r[0].dims[n?2:3],c=r[0].dims[n?3:1],p=r[1].dims[2],d=r[1].dims[3],u=i[n?1:2],_=i[n?2:3],f=i[n?3:1],w=n&&p===a&&d===l&&t.pads[0]===0&&t.pads[1]===0;if(w||p===1&&d===1&&t.dilations[0]===1&&t.dilations[1]===1&&t.strides[0]===1&&t.strides[1]===1&&t.pads[0]===0&&t.pads[1]===0){let E=i[0],x,S,z,D=[];if(n){let O=e.kernelCustomData.wT??e.compute(es(r[1],Ta),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];if(t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=O),w){let Z=a*l*c;x=r[0].reshape([1,E,Z]),S=O.reshape([1,Z,f]),z=[1,E,f]}else x=r[0].reshape([E,a*l,c]),S=O.reshape([1,c,f]),z=[E,u*_,f];D.push(x),D.push(S)}else x=r[0].reshape([E,c,a*l]),S=r[1].reshape([1,f,c]),z=[E,f,u*_],D.push(S),D.push(x);o&&D.push(r[2]);let K=z[2],q=D[0].dims[D[0].dims.length-1];K<8&&q<8?e.compute(yd(D,t,i,z,n,s),{inputs:D}):e.compute(qa(D,t,i,z,n,s),{inputs:D});return}let I=!0,M=e.kernelCustomData.wT??e.compute(es(r[1],Ta),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=M);let y=[r[0],M];o&&y.push(r[2]);let $=n?u*_:f,v=n?f:u*_,T=p*d*c;e.compute(ev(y,t,i,$,v,T,o,I,s),{inputs:y})},_w=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=[0,r.pads[0],0,r.pads[1]],i=[1].concat(r.strides),o=[1].concat(r.dilations),a=[1].concat(r.kernelShape),l=Ea({...r,pads:n,strides:i,dilations:o,kernelShape:a},s);Hc(e,s,l,c=>t?[c[0],c[2],c[3]]:[c[0],c[1],c[3]])},gw=(e,r,t)=>{let s=t.format==="NHWC"?"channelsLast":"channelsFirst",n=Ea(t,r),i=t.autoPad==="NOTSET"?t.pads:t.autoPad,o=tv(r[0].dims,r[1].dims,t.strides,t.dilations,i,!1,s);e.compute(rv(r,n,o.outShape,[o.filterDepth,o.filterHeight,o.filterWidth],[o.padInfo.front,o.padInfo.top,o.padInfo.left],s))},Uu=(e,r)=>{if(fw(e.inputs,r),e.inputs[0].dims.length===3)_w(e,r);else if(e.inputs[0].dims.length===5)gw(e,e.inputs,r);else{let t=Ea(r,e.inputs);Hc(e,e.inputs,t)}}}),iv,Z2=Be(()=>{gt(),Ys(),vt(),Tt(),iv=(e,r,t)=>{let s=e.length>2,n=r.outputShape,i=r.format==="NHWC",o=r.group,a=e[1].dims,l=a[2]/o,c=a[3],p=i?ar(l):1,d=i&&c===1&&l>=4,u=d?Math.floor(l/4)*4:Math.floor(l/p)*p,_=l-u,f=i?ar(c):1,w=i?c===1?p:f:1,I=ye.size(n)/f,M=[Math.ceil(I/64),1,1];Dt("verbose",()=>`[conv2d_backprop_webgpu] dispatch = ${M}`);let y=["rank","rank"],$=[r.strides[0],r.strides[1]],v=[r.kernelShape[i?1:2],r.kernelShape[i?2:3]],T=[r.dilations[0],r.dilations[1]],E=[v[0]+(r.dilations[0]<=1?0:(r.kernelShape[i?1:2]-1)*(r.dilations[0]-1)),v[1]+(r.dilations[1]<=1?0:(r.kernelShape[i?2:3]-1)*(r.dilations[1]-1))],x=[E[0]-1-Math.floor((r.pads[0]+r.pads[2])/2),E[1]-1-Math.floor((r.pads[1]+r.pads[3])/2)],S=[{type:12,data:I},{type:12,data:$},{type:12,data:v},{type:12,data:T},{type:12,data:E},{type:6,data:x},{type:12,data:u},{type:12,data:l},{type:12,data:c},...ct(e[0].dims,e[1].dims)];s&&(S.push(...ct(e[2].dims)),y.push("rank")),S.push(...ct(n));let z=D=>{let K=[{name:"output_size",type:"u32"},{name:"strides",type:"u32",length:$.length},{name:"filter_dims",type:"u32",length:v.length},{name:"dilations",type:"u32",length:v.length},{name:"effective_filter_dims",type:"u32",length:E.length},{name:"pads",type:"i32",length:x.length},{name:"input_channels_per_group_int",type:"u32"},{name:"input_channels_per_group",type:"u32"},{name:"output_channels_per_group",type:"u32"}],q=kr(e[0].dataType),O=i?1:2,Z=i?2:3,Q=i?3:1,J=Pe("W",e[1].dataType,e[1].dims.length,w),re=Pe("Dy",e[0].dataType,e[0].dims.length,p),te=[re,J];s&&te.push(Pe("bias",e[2].dataType,[n[Q]].length,f));let ce=ot("result",e[0].dataType,n.length,f),ue=()=>{let G="";if(d)p===4?G+=`
        let xValue = ${re.getByOffset("x_offset")};
        let wValue = ${J.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;`:p===2?G+=`
          dotProd = dotProd + dot(vec4<${q}>(${re.getByOffset("x_offset")}, ${re.getByOffset("x_offset + 1u")}), vec4<${q}>(${J.getByOffset("w_offset")}, ${J.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;`:p===1&&(G+=`
          dotProd = dotProd + dot(vec4<${q}>(${re.getByOffset("x_offset")}, ${re.getByOffset("x_offset + 1u")}, ${re.getByOffset("x_offset + 2u")}, ${re.getByOffset("x_offset + 3u")}), vec4<${q}>(${J.getByOffset("w_offset")}, ${J.getByOffset("w_offset + 1u")}, ${J.getByOffset("w_offset + 2u")}, ${J.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);else if(G+=`
                  let xValue = ${i?re.getByOffset(`${re.indicesToOffset(`${re.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p}`):re.get("batch","inputChannel","idyR","idyC")};
        `,p===1)G+=`
          let w_offset = ${J.indicesToOffset(`${J.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${J.getByOffset(`w_offset / ${w}`)};
          dotProd = dotProd + xValue * wValue;`;else for(let N=0;N<p;N++)G+=`
            let wValue${N} = ${J.getByOffset(`${J.indicesToOffset(`${J.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${N}, wOutChannel)`)} / ${w}`)};
            dotProd = dotProd + xValue[${N}] * wValue${N};`;return G},B=()=>{if(_===0)return"";if(!d)throw new Error(`packInputAs4 ${d} is not true.`);let G="";if(p===1){G+="dotProd = dotProd";for(let N=0;N<_;N++)G+=`
            + ${re.getByOffset(`x_offset + ${N}`)} * ${J.getByOffset(`w_offset + ${N}`)}`;G+=";"}else if(p===2){if(_!==2)throw new Error(`Invalid inputChannelsRemainder ${_}.`);G+=`
          let xValue = ${re.getByOffset("x_offset")};
          let wValue = ${J.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`}return G},F=`
            let outputIndices = ${ce.offsetToIndices(`global_idx * ${f}`)};
            let batch = ${ce.indicesGet("outputIndices",0)};
            let d1 = ${ce.indicesGet("outputIndices",Q)};
            let r = ${ce.indicesGet("outputIndices",O)};
            let c = ${ce.indicesGet("outputIndices",Z)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${ce.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${q}(dyRCorner) + ${q}(wR)) / ${q}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${q}(uniforms.Dy_shape[${O}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${q}(dyCCorner) + ${q}(wC)) / ${q}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${q}(uniforms.Dy_shape[${Z}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d?`
                var x_offset = ${re.indicesToOffset(`${re.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${p};
                var w_offset = ${J.indicesToOffset(`${J.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${w};
                  `:""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d?4:p}) {
                  ${ue()}
                  inputChannel = inputChannel + ${d?4:p};
                }
                ${B()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${s?` + bias[d1 / ${f}]`:""};
            ${ce.setByOffset("global_idx","value")};
          `;return`
    ${D.registerUniforms(K).declareVariables(...te,ce)}
      ${D.mainStart()}
      ${D.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${F}}`};return{name:"ConvTranspose2D",shaderCache:{hint:`${r.cacheKey};${p}${w}${f}${d}${_}`,inputDependencies:y},getRunData:()=>({dispatchGroup:{x:M[0],y:M[1],z:M[2]},outputs:[{dims:t?t(n):n,dataType:e[0].dataType}],programUniforms:S}),getShaderSource:z}}}),ww,yw,bw,Qc,ov,Mw,Xc,vw,av,eC=Be(()=>{Z2(),Wn(),hn(),ww=(e,r,t,s,n,i)=>(e-1)*r+t+(s-1)*n+1-i,yw=(e,r,t,s,n)=>{let i=Math.floor(e/2);r==="SAME_UPPER"?(t[s]=i,t[n]=e-i):r==="SAME_LOWER"&&(t[s]=e-i,t[n]=i)},bw=(e,r,t,s,n,i,o,a,l,c)=>{let p=e.length-2,d=c.length===0;l.length<p&&l.push(...Array(p-l.length).fill(0));let u=e[0],_=r[a?3:1]*n;for(let f=0,w=e.length-p-(a?1:0);f<p;++f,++w){let I=e[w],M=d?I*o[f]:c[f],y=ww(I,o[f],i[f],r[w],t[f],M);yw(y,s,i,f,f+p),d&&c.push(o[f]*(I-1)+l[f]+(r[w]-1)*t[f]+1-i[f]-i[f+p])}c.splice(0,0,u),c.splice(a?3:1,0,_)},Qc=(e,r)=>{let t=e.kernelShape.slice();if(e.kernelShape.length===0||e.kernelShape.reduce((d,u)=>d*u,1)===0){t.length=0;for(let d=2;d<r[1].dims.length;++d)t.push(r[1].dims[d])}let s=e.format==="NHWC";t.splice(0,0,r[1].dims[0]),t.splice(s?3:1,0,r[1].dims[1]);let n=e.pads.slice(),i=e.outputShape.slice(),o=e.outputPadding.slice(),a=r[0].dims,l=e.dilations.slice();if(l.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;l=new Array(d).fill(1)}let c=e.strides.slice();if(c.reduce((d,u)=>d+u,0)===0){let d=r[0].dims.length-2;c=new Array(d).fill(1)}bw(a,t,l,e.autoPad,e.group,n,c,s,o,i);let p=Object.assign({},e);return Object.assign(p,{kernelShape:t,pads:n,outputPadding:o,outputShape:i,dilations:l,strides:c}),p},ov=e=>{let r=gd(e),t=e.format,s=["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][typeof e.autoPad>"u"?0:e.autoPad],n=e.dilations,i=e.group,o=e.kernelShape,a=e.pads,l=e.strides,c=e.wIsConst(),p=e.outputPadding,d=e.outputShape;return{autoPad:s,format:t,dilations:n,group:i,kernelShape:o,outputPadding:p,outputShape:d,pads:a,strides:l,wIsConst:c,...r,cacheKey:`${e.format};${r.activation};`}},Mw=(e,r)=>{if(!e||e.length!==2&&e.length!==3)throw new Error("Conv requires 2 or 3 inputs");if(e[0].dims.length!==4&&e[0].dims.length!==3)throw new Error("currently only support 2-dimensional conv");if(e[0].dims.length!==e[1].dims.length)throw new Error("filter does not have same dimension as input");let t=e[0].dims[r.format==="NHWC"?e[0].dims.length-1:1],s=e[1].dims[0];if(t!==s)throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");let n=e[1].dims[1]*r.group;if(e.length===3&&(e[2].dims.length!==1||e[2].dims[0]!==n))throw new Error("invalid bias");let i=e[0].dims.length-2;if(r.dilations.reduce((o,a)=>o+a,0)>0&&r.dilations.length!==i)throw new Error(`dilations should be ${i}D`);if(r.strides.reduce((o,a)=>o+a,0)>0&&r.strides.length!==i)throw new Error(`strides should be ${i}D`);if(r.pads.reduce((o,a)=>o+a,0)>0&&r.pads.length!==i*2)throw new Error(`pads should be ${i*2}D`);if(r.outputPadding.length!==i&&r.outputPadding.length!==0)throw new Error(`output_padding should be ${i}D`);if(r.kernelShape.reduce((o,a)=>o+a,0)>0&&r.kernelShape.length!==0&&r.kernelShape.length!==e[1].dims.length-2)throw new Error("invalid kernel shape");if(r.outputShape.length!==0&&r.outputShape.length!==e[0].dims.length-2)throw new Error("invalid output shape")},Xc=(e,r,t,s)=>{let n=e.kernelCustomData.wT??e.compute(es(r[1],[2,3,0,1]),{inputs:[1],outputs:[t.wIsConst?-2:-1]})[0];t.wIsConst&&!e.kernelCustomData.wT&&(e.kernelCustomData.wT=n);let i=[r[0],n];r.length===3&&i.push(r[2]),e.compute(iv(i,t,s),{inputs:i})},vw=(e,r)=>{let t=r.format==="NHWC",s=[e.inputs[0].reshape(t?[e.inputs[0].dims[0],1,e.inputs[0].dims[1],e.inputs[0].dims[2]]:[e.inputs[0].dims[0],e.inputs[0].dims[1],1,e.inputs[0].dims[2]]),e.inputs[1].reshape([e.inputs[1].dims[0],e.inputs[1].dims[1],1,e.inputs[1].dims[2]])];e.inputs.length===3&&s.push(e.inputs[2]);let n=r.kernelShape;(n.length===0||n[0]===0)&&(n=[e.inputs[1].dims[2]]);let i=r.dilations;(i.length===0||i[0]===0)&&(i=[1]);let o=r.strides;(o.length===0||o[0]===0)&&(o=[1]);let a=r.pads;a.length===0&&(a=[0,0]),a=[0,a[0],0,a[1]],o=[1].concat(o),i=[1].concat(i),n=[1].concat(n);let l=r.outputPadding;l=[0].concat(l);let c=Qc({...r,pads:a,strides:o,dilations:i,kernelShape:n,outputPadding:l},s);Xc(e,s,c,p=>t?[p[0],p[2],p[3]]:[p[0],p[1],p[3]])},av=(e,r)=>{if(Mw(e.inputs,r),e.inputs[0].dims.length===3)vw(e,r);else{let t=Qc(r,e.inputs);Xc(e,e.inputs,t)}}}),xw,lv,cv,tC=Be(()=>{gt(),vt(),cr(),Tt(),xw=(e,r,t,s)=>{let n=ye.size(r),i=r.length,o=Pe("input",e,i),a=ot("output",e,i),l=t.dataType===6?t.getInt32Array()[0]:Number(t.getBigInt64Array()[0]),c=ye.normalizeAxis(l,i),p=d=>{let u=` i32(${o.indicesGet("inputIndices","uniforms.axis")}) `,_=at("uniforms.input_shape","uniforms.axis",i),f=s.reverse?u+(s.exclusive?" + 1":""):"0",w=s.reverse?_:u+(s.exclusive?"":" + 1");return`
                ${d.registerUniform("outputSize","u32").registerUniform("axis","u32").declareVariables(o,a)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${a.offsetToIndices("global_idx")};
                  var sum = ${a.type.value}(0);
                  let first : i32 = ${f};
                  let last : i32 = ${w};
                  for (var i : i32 = first; i < last; i++) {
                    ${o.indicesSet("inputIndices","uniforms.axis","u32(i)")};
                    sum = sum + ${o.getByIndices("inputIndices")};
                  }
                  ${a.setByOffset("global_idx","sum")};
                }`};return{name:"CumSum",shaderCache:{hint:s.cacheKey,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:r,dataType:e}],dispatchGroup:{x:Math.ceil(n/64)},programUniforms:[{type:12,data:n},{type:12,data:c},...ct(r,r)]}),getShaderSource:p}},lv=(e,r)=>{let t=e.inputs[0].dims,s=e.inputs[0].dataType,n=e.inputs[1];e.compute(xw(s,t,n,r),{inputs:[0]})},cv=e=>{let r=e.exclusive===1,t=e.reverse===1;return Bt({exclusive:r,reverse:t})}}),Tw,Ew,Pw,uv,dv,rC=Be(()=>{gt(),vt(),cr(),Tt(),Tw=e=>{if(!e||e.length!==1)throw new Error("DepthToSpace requires 1 input.");if(e[0].dims.length!==4)throw new Error("DepthToSpace requires 4D input.")},Ew=(e,r,t,s)=>{let n=[];n.push(`fn perm(i: ${s.type.indices}) -> ${t.type.indices} {
    var a: ${t.type.indices};`);for(let i=0;i<r;++i)n.push(t.indicesSet("a",e[i],`i[${i}]`));return n.push("return a;}"),n.join(`
`)},Pw=(e,r)=>{let t,s,n,i,o,a,l=r.format==="NHWC",c=r.blocksize,p=r.mode==="DCR";l?([t,s,n,i]=e.dims,o=p?[t,s,n,c,c,i/c**2]:[t,s,n,i/c**2,c,c],a=p?[0,1,3,2,4,5]:[0,1,4,2,5,3]):([t,s,n,i]=[e.dims[0],e.dims[2],e.dims[3],e.dims[1]],o=p?[t,c,c,i/c**2,s,n]:[t,i/c**2,c,c,s,n],a=p?[0,3,4,1,5,2]:[0,1,4,2,5,3]);let d=e.reshape(o),u=d.dims.length,_=e.dataType,f=Pe("a",_,u),w=ot("output",_,u),I=M=>`
  ${M.registerUniform("output_size","u32").declareVariables(f,w)}

  ${Ew(a,u,f,w)}

  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${w.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${w.setByOffset("global_idx",f.getByIndices("aIndices"))}
  }`;return{name:"DepthToSpace",shaderCache:{hint:`${e.dims};${r.blocksize};${r.mode}`,inputDependencies:["rank"]},getRunData:M=>{let y=l?[t,s*c,n*c,i/c**2]:[t,i/c**2,s*c,n*c],$=ye.size(y),v=d.dims,T=ye.sortBasedOnPerm(v,a);return{outputs:[{dims:y,dataType:M[0].dataType}],dispatchGroup:{x:Math.ceil($/64)},programUniforms:[{type:12,data:$},...ct(v,T)]}},getShaderSource:I}},uv=(e,r)=>{Tw(e.inputs),e.compute(Pw(e.inputs[0],r))},dv=e=>Bt({blocksize:e.blocksize,mode:e.mode,format:e.format})}),Pa,eo,Yc,Cw,Sw,$w,kw,Jc,Iw,pv,hv,sC=Be(()=>{gt(),vt(),cr(),Tt(),Pa="[a-zA-Z]|\\.\\.\\.",eo="("+Pa+")+",Yc="^"+eo+"$",Cw="("+eo+",)*"+eo,Sw="^"+Cw+"$",$w=class{constructor(e=-1){this.symbolToIndices=new Map,this.inputIndex=e}addSymbol(e,r){let t=this.symbolToIndices.get(e);t===void 0?t=[r]:t.push(r),this.symbolToIndices.set(e,t)}},kw=class{constructor(e,r){this.equation=r,this.hasEllipsis=!1,this.symbolToInfo=new Map,this.lhs=new Array,this.outputDims=[];let[t,s]=r.includes("->")?r.split("->",2):[r,""];if(!t.match(RegExp(Sw)))throw new Error("Invalid LHS term");if(t.split(",").forEach((n,i)=>{let o=e[i].dims.slice();if(!n.match(RegExp(Yc)))throw new Error("Invalid LHS term");let a=this.processTerm(n,!0,o,i);this.lhs.push(a)}),s==="")s+=[...this.symbolToInfo.entries()].filter(([n,i])=>i.count===1||n==="...").map(([n])=>n).join("");else if(!s.match(RegExp(eo)))throw new Error("Invalid RHS");s.match(RegExp(Pa,"g"))?.forEach(n=>{if(n==="...")this.outputDims=this.outputDims.concat(this.ellipsisDims);else{let i=this.symbolToInfo.get(n);if(i===void 0)throw new Error("Invalid RHS symbol");this.outputDims.push(i.dimValue)}}),this.rhs=this.processTerm(s,!1,this.outputDims)}addSymbol(e,r,t){let s=this.symbolToInfo.get(e);if(s!==void 0){if(s.dimValue!==r&&s.count!==1)throw new Error("Dimension mismatch");s.count++,s.inputIndices.push(t)}else s={count:1,dimValue:r,inputIndices:[t]};this.symbolToInfo.set(e,s)}processTerm(e,r,t,s=-1){let n=t.length,i=!1,o=[],a=0;if(!e.match(RegExp(Yc))&&!r&&e!=="")throw new Error("Invalid LHS term");let l=e.match(RegExp(Pa,"g")),c=new $w(s);return l?.forEach((p,d)=>{if(p==="..."){if(i)throw new Error("Only one ellipsis is allowed per input term");i=!0;let u=n-l.length+1;if(u<0)throw new Error("Ellipsis out of bounds");if(o=t.slice(a,a+u),this.hasEllipsis){if(this.ellipsisDims.length!==o.length||this.ellipsisDims.toString()!==o.toString())throw new Error("Ellipsis dimensions mismatch")}else if(r)this.hasEllipsis=!0,this.ellipsisDims=o;else throw new Error("Ellipsis must be specified in the LHS");for(let _=0;_<o.length;_++){let f=String.fromCharCode(48+_);c.addSymbol(f,d+_),this.addSymbol(f,t[a++],s)}}else c.addSymbol(p,d+(this.hasEllipsis?this.ellipsisDims.length-1:0)),this.addSymbol(p,t[a++],s)}),c}},Jc=e=>e+"_max",Iw=(e,r,t,s)=>{let n=e.map(c=>c.length).map((c,p)=>Pe(`input${p}`,r,c)),i=ye.size(s),o=ot("output",r,s.length),a=[...t.symbolToInfo.keys()].filter(c=>!t.rhs.symbolToIndices.has(c)),l=c=>{let p=[],d="var prod = 1.0;",u="var sum = 0.0;",_="sum += prod;",f=[],w=[],I=[],M=[],y=t.symbolToInfo.size===t.rhs.symbolToIndices.size;t.symbolToInfo.forEach((v,T)=>{if(t.rhs.symbolToIndices.has(T)){let E=t.rhs.symbolToIndices.get(T)?.[0];E!==void 0&&t.lhs.forEach((x,S)=>{if(v.inputIndices.includes(S)){let z=x.symbolToIndices.get(T);if(z===void 0)throw new Error("Invalid symbol error");z.forEach(D=>{p.push(`${n[S].indicesSet(`input${S}Indices`,D,o.indicesGet("outputIndices",E))}`)})}})}else t.lhs.forEach((E,x)=>{if(v.inputIndices.includes(x)){let S=E.symbolToIndices.get(T);if(S===void 0)throw new Error("Invalid symbol error");S.forEach(z=>{f.push(`${n[x].indicesSet(`input${x}Indices`,z,`${T}`)}`)}),M.push(`prod *= ${n[x].getByIndices(`input${x}Indices`)};`)}}),w.push(`for(var ${T}: u32 = 0; ${T} < uniforms.${Jc(T)}; ${T}++) {`),I.push("}")});let $=y?[...p,`let sum = ${n.map((v,T)=>v.getByIndices(`input${T}Indices`)).join(" * ")};`]:[...p,u,...w,...f,d,...M,_,...I];return`
            ${c.registerUniforms(a.map(v=>({name:`${Jc(v)}`,type:"u32"}))).registerUniform("outputSize","u32").declareVariables(...n,o)}

            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${o.offsetToIndices("global_idx")};
            ${n.map((v,T)=>`var input${T}Indices: ${n[T].type.indices};`).join(`
`)}
            ${$.join(`
`)};
            ${o.setByOffset("global_idx","sum")};
          }`};return{name:"Einsum",shaderCache:{hint:t.equation,inputDependencies:e.map(()=>"rank")},getRunData:()=>{let c=a.filter(d=>t.symbolToInfo.has(d)).map(d=>({type:12,data:t.symbolToInfo.get(d)?.dimValue||0}));c.push({type:12,data:i});let p=e.map((d,u)=>[...ct(d)]).reduce((d,u)=>d.concat(u),c);return p.push(...ct(s)),{outputs:[{dims:s,dataType:r}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:p}},getShaderSource:l}},pv=(e,r)=>{let t=new kw(e.inputs,r.equation),s=t.outputDims,n=e.inputs.map((i,o)=>i.dims);e.compute(Iw(n,e.inputs[0].dataType,t,s))},hv=e=>{let r=e.equation.replace(/\s+/g,"");return Bt({equation:r})}}),Aw,Zc,Fw,Dw,mv,nC=Be(()=>{gt(),vt(),Tt(),Aw=e=>{if(!e||e.length!==2)throw new Error("Expand requires 2 input.");let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=t.length<r.length?0:t.length-r.length,n=r.length<t.length?0:r.length-t.length;for(;s<t.length&&n<r.length;++s,++n)if(t[s]!==r[n]&&t[s]!==1&&r[n]!==1)throw new Error("Expand requires shape to be broadcastable to input")},Zc=(e,r)=>{let t=e.length-r.length,s=[];for(let n=0;n<t;++n)s.push(e[n]);for(let n=0;n<r.length;++n)s.push(r[n]===1?e[n+t]:r[n]);return s},Fw=(e,r)=>e.length>r.length?Zc(e,r):Zc(r,e),Dw=e=>{let r=e[0].dims,t=Array.from(e[1].getBigInt64Array(),Number),s=Fw(r,t),n=e[0].dataType,i=n===9||ye.size(r)===1,o=n===9||r.length>0&&r[r.length-1]%4===0?4:1,a=i||s.length>0&&s[s.length-1]%4===0?4:1,l=Math.ceil(ye.size(s)/a),c=d=>{let u=Pe("input",n,r.length,o),_=ot("output",n,s.length,a),f;if(n===9){let w=(I,M,y="")=>`
          let outputIndices${M} = ${_.offsetToIndices(`outputOffset + ${M}u`)};
          let offset${M} = ${u.broadcastedIndicesToOffset(`outputIndices${M}`,_)};
          let index${M} = offset${M} / 4u;
          let component${M} = offset${M} % 4u;
          ${I}[${M}] = ${y}(${u.getByOffset(`index${M}`)}[component${M}]);
        `;f=`
        let outputOffset = global_idx * ${a};
        var data = vec4<u32>(0);
        ${w("data",0,"u32")}
        ${w("data",1,"u32")}
        ${w("data",2,"u32")}
        ${w("data",3,"u32")}
        ${_.setByOffset("global_idx","data")}
      }`}else f=`
        let outputIndices = ${_.offsetToIndices(`global_idx * ${a}`)};
        let inputOffset = ${u.broadcastedIndicesToOffset("outputIndices",_)};
        let data = ${_.type.value}(${u.getByOffset(`inputOffset / ${o}`)});
        ${_.setByOffset("global_idx","data")}
      }`;return`
    ${d.registerUniform("vec_size","u32").declareVariables(u,_)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${f}`},p=[{type:12,data:l},...ct(r,s)];return{name:"Expand",shaderCache:{hint:`${s.length};${o}${a}`,inputDependencies:["rank"]},getShaderSource:c,getRunData:()=>({outputs:[{dims:s,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:p})}},mv=e=>{Aw(e.inputs),e.compute(Dw(e.inputs),{inputs:[0]})}}),Ow,fv,iC=Be(()=>{gt(),vt(),Tt(),_d(),Ow=e=>{let r=e[0].dataType,t=ye.size(e[0].dims),s=ye.size(e[1].dims),n=s%4===0,i=o=>{let a=Pe("x",r,[1],4),l=Pe("bias",r,[1],4),c=ot("y",r,[1],4),p=[{name:"output_vec_size",type:"u32"},{name:"bias_size",type:"u32"}],d=_=>`
      let bias${_}_offset: u32 = (global_idx * 4 + ${_}) % uniforms.bias_size;
      let bias${_} = ${l.getByOffset(`bias${_}_offset / 4`)}[bias${_}_offset % 4];`,u=n?`
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};`:`${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${a.type.value}(bias0, bias1, bias2, bias3);`;return`${o.registerUniforms(p).declareVariables(a,l,c)}

    ${Bu(jr(r))}

    ${o.mainStart(bi)}
      ${o.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${a.getByOffset("global_idx")};
      ${u}
      let x_in = x + bias;
      ${c.setByOffset("global_idx",Ru("x_in"))}
    }`};return{name:"FastGeluWithBias",shaderCache:{hint:`${n}`,inputDependencies:["type","type"]},getShaderSource:i,getRunData:o=>({outputs:[{dims:o[0].dims,dataType:o[0].dataType}],programUniforms:[{type:12,data:Math.ceil(t/4)},{type:12,data:s}],dispatchGroup:{x:Math.ceil(t/bi/4)}})}},fv=e=>{e.inputs.length<2||ye.size(e.inputs[1].dims)===0?OM(e):e.compute(Ow(e.inputs))}}),Lw,zw,_v,gv,oC=Be(()=>{gt(),vt(),cr(),Tt(),Lw=e=>{if(!e||e.length!==2)throw new Error("Gather requires 2 inputs.")},zw=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,i=ye.normalizeAxis(r.axis,n),o=t.slice(0);o.splice(i,1,...s);let a=t[i],l=e[0].dataType===9?4:1,c=Math.ceil(ye.size(o)/l),p=[{type:12,data:c},{type:6,data:a},{type:12,data:i},...ct(e[0].dims,e[1].dims,o)],d=u=>{let _=Pe("data",e[0].dataType,e[0].dims.length,l),f=Pe("inputIndices",e[1].dataType,e[1].dims.length),w=ot("output",e[0].dataType,o.length,l),I=y=>{let $=s.length,v=`var indicesIndices${y}  = ${f.type.indices}(0);`;for(let T=0;T<$;T++)v+=`${$>1?`indicesIndices${y}[${T}]`:`indicesIndices${y}`} = ${o.length>1?`outputIndices${y}[uniforms.axis + ${T}]`:`outputIndices${y}`};`;v+=`
          var idx${y} = ${f.getByIndices(`indicesIndices${y}`)};
          if (idx${y} < 0) {
            idx${y} = idx${y} + uniforms.axisDimLimit;
          }
          var dataIndices${y} : ${_.type.indices};
        `;for(let T=0,E=0;T<n;T++)T===i?(v+=`${n>1?`dataIndices${y}[${T}]`:`dataIndices${y}`} = u32(idx${y});`,E+=$):(v+=`${n>1?`dataIndices${y}[${T}]`:`dataIndices${y}`} = ${o.length>1?`outputIndices${y}[${E}]`:`outputIndices${y}`};`,E++);return v},M;if(e[0].dataType===9){let y=($,v,T="")=>`
          let outputIndices${v} = ${w.offsetToIndices(`outputOffset + ${v}u`)};
          ${I(v)};
          let offset${v} = ${_.indicesToOffset(`dataIndices${v}`)};
          let index${v} = offset${v} / 4u;
          let component${v} = offset${v} % 4u;
          ${$}[${v}] = ${T}(${_.getByOffset(`index${v}`)}[component${v}]);
        `;M=`
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${y("value",0,"u32")}
        ${y("value",1,"u32")}
        ${y("value",2,"u32")}
        ${y("value",3,"u32")}
        ${w.setByOffset("global_idx","value")}
      `}else M=`
      let outputIndices = ${w.offsetToIndices("global_idx")};
      ${I("")};
      let value = ${_.getByIndices("dataIndices")};
      ${w.setByOffset("global_idx","value")};
      `;return`
      ${u.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(_,f,w)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${M}
      }`};return{name:"Gather",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:o,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:d}},_v=e=>Bt({axis:e.axis}),gv=(e,r)=>{let t=e.inputs;Lw(t),e.compute(zw(e.inputs,r))}}),Bw,wv,yv,aC=Be(()=>{gt(),vt(),Tt(),Bw=(e,r,t,s,n,i,o,a,l)=>{let c=[{type:12,data:i},{type:12,data:s},{type:12,data:n},{type:12,data:t},{type:12,data:o},{type:12,data:a},{type:12,data:l}],p=[i];c.push(...ct(r.dims,p));let d=u=>{let _=Pe("indices_data",r.dataType,r.dims.length),f=ot("input_slice_offsets_data",12,1,1),w=[_,f],I=[{name:"output_size",type:"u32"},{name:"batch_dims",type:"u32"},{name:"input_dims",type:"u32",length:n.length},{name:"sizes_from_slice_dims_data",type:"u32",length:t.length},{name:"num_slices_per_batch",type:"u32"},{name:"input_batch_stride",type:"u32"},{name:"num_slice_dims",type:"u32"}];return`
  ${u.registerUniforms(I).declareVariables(...w)}
  ${u.mainStart()}
    ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${n.length===1?"index += i32(uniforms.input_dims);":"index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${t.length===1?"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);":"relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`};return e.compute({name:"computeSliceOffsets",shaderCache:{hint:`${n.length}_${t.length}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:p,dataType:e.inputs[1].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:c}),getShaderSource:d},{inputs:[r],outputs:[-1]})[0]},wv=(e,r)=>{let t=e.inputs,s=t[0].dims,n=t[0].dataType,i=t[1].dims,o=i[i.length-1],a=ye.sizeToDimension(i,i.length-1),l=ye.sizeFromDimension(s,r.batchDims+o),c=ye.sizeToDimension(s,r.batchDims),p=ye.sizeFromDimension(s,r.batchDims),d=a/c,u=new Array(o),_=l;for(let v=0;v<o;++v)u[o-1-v]=_,_*=s[r.batchDims+o-1-v];let f=Bw(e,t[1],u,r.batchDims,s,a,d,p,o),w=r.batchDims+o;if(w>s.length)throw new Error("last dimension of indices must not be larger than rank of input tensor");let I=i.slice(0,-1).concat(s.slice(w)),M=ye.size(I),y=[{type:12,data:M},{type:12,data:l},...ct(t[0].dims,f.dims,I)],$=v=>{let T=Pe("data",t[0].dataType,t[0].dims.length),E=Pe("slice_offsets",12,f.dims.length),x=ot("output",t[0].dataType,I.length);return`
          ${v.registerUniform("output_size","u32").registerUniform("slice_size","u32").declareVariables(T,E,x)}
            ${v.mainStart()}
            ${v.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`};e.compute({name:"GatherND",shaderCache:{hint:r.cacheKey,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:I,dataType:n}],dispatchGroup:{x:Math.ceil(M/64)},programUniforms:y}),getShaderSource:$},{inputs:[t[0],f]})},yv=e=>({batchDims:e.batch_dims,cacheKey:""})}),Rw,Nw,bv,Mv,lC=Be(()=>{gt(),vt(),cr(),Tt(),Rw=(e,r)=>{if(e.length<3||e.length>4)throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");let t=ye.normalizeAxis(r.quantizeAxis,e[0].dims.length),s=r.blockSize,n=e[0],i=e[2],o=e.length===4?e[3]:void 0;if(i.dims.length!==n.dims.length||!n.dims.map((a,l)=>l===t?Math.ceil(a/s)===i.dims[l]:a===i.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");if(o){if(o.dataType!==n.dataType)throw new Error("Zero point must have the same data type as the input tensor.");if(o.dims.length!==i.dims.length||!o.dims.map((a,l)=>a===i.dims[l]).reduce((a,l)=>a&&l,!0))throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.")}},Nw=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t.length,i=ye.normalizeAxis(r.gatherAxis,n),o=ye.normalizeAxis(r.quantizeAxis,n),a=t.slice(0);a.splice(i,1,...s);let l=ye.size(a),c=e[2].dataType,p=e[0].dataType===22,d=[{type:12,data:l},{type:12,data:o},{type:12,data:i},{type:12,data:r.blockSize},...ct(...e.map((_,f)=>_.dims),a)],u=_=>{let f=Pe("data",e[0].dataType,e[0].dims.length),w=Pe("inputIndices",e[1].dataType,e[1].dims.length),I=Pe("scales",e[2].dataType,e[2].dims.length),M=e.length>3?Pe("zeroPoint",e[3].dataType,e[3].dims.length):void 0,y=ot("output",c,a.length),$=[f,w,I];M&&$.push(M);let v=[{name:"output_size",type:"u32"},{name:"quantize_axis",type:"u32"},{name:"gather_axis",type:"u32"},{name:"block_size",type:"u32"}];return`
        ${_.registerUniforms(v).declareVariables(...$,y)}
        ${_.mainStart()}
        let output_indices = ${y.offsetToIndices("global_idx")};
        var indices_indices = ${w.type.indices}(0);
        ${s.length>1?`
          for (var i: u32 = 0; i < ${s.length}; i++) {
            let index = ${y.indicesGet("output_indices","uniforms.gather_axis + i")};
            ${w.indicesSet("indices_indices","i","index")};
          }`:`indices_indices = ${y.indicesGet("output_indices","uniforms.gather_axis")};`};
        var data_indices = ${f.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${y.indicesGet("output_indices","i")};
          ${f.indicesSet("data_indices","i","index")};
        }
        var index_from_indices = ${w.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${t[i]};
        }
        ${f.indicesSet("data_indices","uniforms.gather_axis","u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${a.length}; i++) {
          let index = ${y.indicesGet("output_indices",`i + ${s.length} - 1`)};
          ${f.indicesSet("data_indices","i","index")};
        }
        let data_offset = ${f.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${f.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${I.indicesGet("data_indices","uniforms.quantize_axis")} / uniforms.block_size;
        ${I.indicesSet("scale_indices","uniforms.quantize_axis","quantize_axis_index")};
        var scale = ${I.getByIndices("scale_indices")};
        ${M?`
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${M.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${M.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${p?"unpack4xI8":"unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];`:"var zero_point = 0"};
        let dequantized_data = ${jr(c)}(quantized_data - zero_point) * scale;
        ${y.setByOffset("global_idx","dequantized_data")};
    }`};return{name:"GatherBlockQuantized",shaderCache:{hint:`${r.cacheKey};${e.filter((_,f)=>f!==1).map(_=>_.dims.join("_")).join(";")}`,inputDependencies:Array.from({length:e.length},(_,f)=>"rank")},getRunData:()=>({outputs:[{dims:a,dataType:c}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:d}),getShaderSource:u}},bv=(e,r)=>{let t=e.inputs;Rw(t,r),e.compute(Nw(e.inputs,r))},Mv=e=>Bt({blockSize:e.blockSize,gatherAxis:e.gatherAxis,quantizeAxis:e.quantizeAxis})}),jw,Vw,vv,xv,cC=Be(()=>{gt(),vt(),cr(),Tt(),jw=e=>{if(!e||e.length!==2)throw new Error("GatherElements requires 2 inputs.");if(e[0].dims.length<1)throw new Error("GatherElements requires that the data input be rank >= 1.");if(e[0].dims.length!==e[1].dims.length)throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`)},Vw=(e,r)=>{let t=e[0].dims,s=e[0].dataType,n=t.length,i=e[1].dims,o=e[1].dataType,a=ye.normalizeAxis(r.axis,n),l=t[a],c=i.slice(0),p=ye.size(c),d=Pe("input",s,n),u=Pe("indicesInput",o,i.length),_=ot("output",s,c.length),f=[{type:12,data:p},{type:6,data:l},{type:12,data:a}];return f.push(...ct(t,i,c)),{name:"GatherElements",shaderCache:{inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:c,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:f}),getShaderSource:w=>`
      ${w.registerUniform("outputSize","u32").registerUniform("axisDimLimit","i32").registerUniform("axis","u32").declareVariables(d,u,_)}
      ${w.mainStart()}
      ${w.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${_.offsetToIndices("global_idx")};

      var idx = ${u.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices","uniforms.axis","u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${_.setByOffset("global_idx","value")};
  }`}},vv=e=>Bt({axis:e.axis}),xv=(e,r)=>{let t=e.inputs;jw(t),e.compute(Vw(e.inputs,r))}}),Uw,Ww,Tv,Ev,uC=Be(()=>{gt(),vt(),Tt(),Uw=e=>{if(!e)throw new Error("Input is missing");if(e.length<2||e.length>3)throw new Error("Invaid input number.");if(e.length===3&&e[2].dims.length>2)throw new Error("Invalid input shape of C");if(e[0].dataType!==e[1].dataType||e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("Input types are mismatched")},Ww=(e,r)=>{let t=e[0].dims.slice(),s=e[1].dims.slice(),[n,i,o]=vb.getShapeOfGemmResult(t,r.transA,s,r.transB,e.length===3?e[2].dims:void 0),a=[n,i];if(!a)throw new Error("Can't use gemm on the given tensors");let l=16,c=Math.ceil(i/l),p=Math.ceil(n/l),d=!0,u=ye.size(a),_=[{type:12,data:d?c:u},{type:12,data:n},{type:12,data:i},{type:12,data:o},{type:1,data:r.alpha},{type:1,data:r.beta}],f=["type","type"];e.length===3&&(_.push(...ct(e[2].dims)),f.push("rank")),_.push(...ct(a));let w=M=>{let y="";r.transA&&r.transB?y="value += a[k * uniforms.M + m] * b[n * uniforms.K + k];":r.transA&&!r.transB?y="value += a[k * uniforms.M + m] * b[k * uniforms.N + n];":!r.transA&&r.transB?y="value += a[m * uniforms.K + k] * b[n * uniforms.K + k];":!r.transA&&!r.transB&&(y="value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");let $=r.alpha===1?"":"value *= uniforms.alpha;",v=Pe("a",e[0].dataType,e[0].dims),T=Pe("b",e[1].dataType,e[1].dims),E=v.type.value,x=null,S=[v,T];e.length===3&&(x=Pe("c",e[2].dataType,e[2].dims.length),S.push(x));let z=ot("output",e[0].dataType,a.length);S.push(z);let D=[{name:"output_size",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}];return`
  ${M.registerUniforms(D).declareVariables(...S)}

  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${E}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${y}
    }

    ${$}
    ${x!=null?`let cOffset = ${x.broadcastedIndicesToOffset("vec2(m, n)",z)}; value += ${E}(uniforms.beta) * ${x.getByOffset("cOffset")};`:""}
    output[global_idx] = value;
  }`},I=M=>{let y=Pe("a",e[0].dataType,e[0].dims),$=Pe("b",e[1].dataType,e[1].dims),v=null,T=[y,$];e.length===3&&(v=Pe("c",e[2].dataType,e[2].dims.length),T.push(v));let E=ot("output",e[0].dataType,a.length);T.push(E);let x=[{name:"num_tile_n",type:"u32"},{name:"M",type:"u32"},{name:"N",type:"u32"},{name:"K",type:"u32"},{name:"alpha",type:"f32"},{name:"beta",type:"f32"}],S="",z="";r.transA&&r.transB?(z=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,S="value += tile_a[k][local_id.y] * tile_b[local_id.x][k];"):r.transA&&!r.transB?(z=`
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,S="value += tile_a[k][local_id.y] * tile_b[k][local_id.x];"):!r.transA&&r.transB?(z=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,S="value += tile_a[local_id.y][k] * tile_b[local_id.x][k];"):!r.transA&&!r.transB&&(z=`
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${y.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${$.type.value}(0);
      }
      `,S="value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");let D=r.alpha===1?"":"value *= uniforms.alpha;";return`
  ${M.registerUniforms(x).declareVariables(...T)}
  var<workgroup> tile_a: array<array<${y.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${$.type.storage}, ${l}>, ${l}>;
  ${M.mainStart([l,l,1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${E.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${z}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${S}
      }
      workgroupBarrier();
    }

    ${D}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${v!=null?`let cOffset = ${v.broadcastedIndicesToOffset("vec2(m, n)",E)}; value += ${E.type.value}(uniforms.beta) * ${v.getByOffset("cOffset")};`:""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`};return d?{name:"GemmShared",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:c*p},programUniforms:_}),getShaderSource:I}:{name:"Gemm",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:a,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:_}),getShaderSource:w}},Tv=e=>{let r=e.transA,t=e.transB,s=e.alpha,n=e.beta;return{transA:r,transB:t,alpha:s,beta:n,cacheKey:`${e.transA};${e.transB};${e.alpha===1}`}},Ev=(e,r)=>{Uw(e.inputs),e.compute(Ww(e.inputs,r))}}),zs,Hs,$n,kn,Gw,Kw,qw,Hw,Qw,Xw,Yw,Jw,Pv,Cv,dC=Be(()=>{gt(),vt(),cr(),Tt(),[zs,Hs,$n,kn]=[0,1,2,3],Gw=e=>{if(e[0].dims.length!==4)throw new Error("only 4-D tensor is supported.");if(e[0].dims.length!==e[1].dims.length)throw new Error("input dimensions must be equal to grid dimensions");if(e[0].dims.length-2!==e[1].dims[e[1].dims.length-1])throw new Error(`last dimension of grid must be equal to ${e[0].dims.length-2}`);if(e[0].dims[0]!==e[1].dims[0])throw new Error("grid batch size must match input batch size")},Kw=`
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`,qw=e=>`
  fn gs_bicubic_interpolate(p: mat4x4<${e}>, x: f32, y: f32) -> ${e} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${e}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`,Hw=e=>`
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${e.alignCorners===0?`
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    `:`
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`,Qw=e=>`
  ${e.paddingMode==="reflection"?`
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }`:""}
`,Xw=(e,r,t)=>`
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${r} {
     var pixel = ${r}(0);
     var indices = vec4<u32>(0);
     indices[${zs}] = batch;
     indices[${Hs}] = channel;`+(()=>{switch(t.paddingMode){case"zeros":return`
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${$n}] = u32(r);
            indices[${kn}] = u32(c);
          } else {
            return ${r}(0);
          }
        `;case"border":return`
          indices[${$n}] = u32(clamp(r, 0, H - 1));
          indices[${kn}] = u32(clamp(c, 0, W - 1));
        `;case"reflection":return`
          indices[${$n}] = gs_reflect(r, border[1], border[3]);
          indices[${kn}] = gs_reflect(c, border[0], border[2]);
        `;default:throw new Error(`padding mode ${t.paddingMode} is not supported`)}})()+`
    return ${e.getByIndices("indices")};
  }
`,Yw=(e,r,t)=>(()=>{switch(t.mode){case"nearest":return`
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${zs}], indices[${Hs}], border);
        `;case"bilinear":return`
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${zs}], indices[${Hs}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${zs}], indices[${Hs}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${zs}], indices[${Hs}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${zs}], indices[${Hs}], border);

          let dx2 = ${r}(f32(x2) - x);
          let dx1 = ${r}(x - f32(x1));
          let dy2 = ${r}(f32(y2) - y);
          let dy1 = ${r}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;case"bicubic":return`
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${r}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${zs}], indices[${Hs}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;default:throw new Error(`mode ${t.mode} is not supported`)}})()+`${e.setByOffset("global_idx","result")}`,Jw=(e,r)=>{let t=Pe("x",e[0].dataType,e[0].dims.length),s=[e[1].dims[0],e[1].dims[1],e[1].dims[2]],n=Pe("grid",e[1].dataType,s.length,2),i=[e[0].dims[0],e[0].dims[1],e[1].dims[1],e[1].dims[2]];r.format==="NHWC"&&(i=[e[0].dims[0],e[1].dims[1],e[1].dims[2],e[0].dims[3]],[zs,Hs,$n,kn]=[0,3,1,2]);let o=ot("output",e[0].dataType,i.length),a=t.type.value,l=ye.size(i),c=[{type:12,data:l},...ct(e[0].dims,s,i)],p=d=>`
  ${d.registerUniform("output_size","u32").declareVariables(t,n,o)}
  ${Kw}
  ${qw(a)}
  ${Hw(r)}
  ${Qw(r)}
  ${Xw(t,a,r)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${$n}]);
      let W_in = i32(uniforms.x_shape[${kn}]);

      ${r.alignCorners===0?`
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      `:`
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${o.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${zs}], indices[${$n}], indices[${kn}]);
      let nxy = ${n.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${Yw(o,a,r)}
  }`;return{name:"GridSample",shaderCache:{hint:`${r.cacheKey}`,inputDependencies:["type","type"]},getRunData:d=>{let u=ye.size(i);return{outputs:[{dims:i,dataType:d[0].dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:c}},getShaderSource:p}},Pv=(e,r)=>{Gw(e.inputs),e.compute(Jw(e.inputs,r))},Cv=e=>Bt({alignCorners:e.align_corners,mode:e.mode,paddingMode:e.padding_mode,format:e.format})}),Wr,Zw,Sv,eu,ey,po,$v,kv=Be(()=>{gt(),vt(),cr(),pd(),fd(),Tt(),hn(),Wr=(e,r)=>e.length>r&&e[r].dims.length>0?e[r]:void 0,Zw=(e,r)=>{let t=e[0],s=Wr(e,1),n=Wr(e,2),i=Wr(e,3),o=Wr(e,4),a=Wr(e,5),l=Wr(e,6),c=Wr(e,7);if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let p=t.dims[0],d=t.dims[1],u=t.dims.length===3?t.dims[2]:r.numHeads*t.dims[4],_=d,f=0,w=0,I=Math.floor(u/r.numHeads);if(l&&c&&ye.size(l.dims)&&ye.size(c.dims)){if(l.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(l.dims[0]!==p||l.dims[1]!==r.numHeads||l.dims[3]!==I)throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');if(c.dims[0]!==p||c.dims[1]!==r.numHeads||c.dims[3]!==I)throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');if(l.dims[2]!==c.dims[2])throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');if(c.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');f=l.dims[2],w=l.dims[2]}else if(l&&ye.size(l.dims)||c&&ye.size(c.dims))throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let M;if(s&&ye.size(s.dims)>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(s.dims[2]!==t.dims[2])throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');M=2,_=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==I)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');M=5,_=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==I)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');M=0,_=s.dims[2]}}else{if(t.dims.length!==5)throw new Error('Input "query" is expected to have 5 dimensions when key is empty');if(t.dims[2]!==r.numHeads||t.dims[3]!==3)throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');M=3}if(i&&ye.size(i.dims)>0){if(i.dims.length!==1)throw new Error('Input "bias" is expected to have 1 dimension');if(s&&s.dims.length===5&&s.dims[3]===2)throw new Error("bias is not allowed for packed kv.")}let y=f+_,$=0;if(o&&ye.size(o.dims)>0){$=8;let x=o.dims;throw x.length===1?x[0]===p?$=1:x[0]===3*p+2&&($=3):x.length===2&&x[0]===p&&x[1]===y&&($=5),$===8?new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)'):new Error("Mask not supported")}let v=!1,T=u;if(n&&ye.size(n.dims)>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(_!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');T=n.dims[2]}else{if(_!==n.dims[2])throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');T=n.dims[1]*n.dims[3],v=!0}}let E=!1;if(o&&ye.size(o.dims)>0)throw new Error("Key padding mask is not supported");if(a&&ye.size(a.dims)>0){if(a.dims.length!==4)throw new Error('Input "attention_bias" is expected to have 4 dimensions');if(a.dims[0]!==p||a.dims[1]!==r.numHeads||a.dims[2]!==d||a.dims[3]!==y)throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)')}return{batchSize:p,sequenceLength:d,pastSequenceLength:f,kvSequenceLength:_,totalSequenceLength:y,maxSequenceLength:w,inputHiddenSize:0,hiddenSize:u,vHiddenSize:T,headSize:I,vHeadSize:Math.floor(T/r.numHeads),numHeads:r.numHeads,isUnidirectional:!1,pastPresentShareBuffer:!1,maskFilterValue:r.maskFilterValue,maskType:$,scale:r.scale,broadcastResPosBias:E,passPastInKv:v,qkvFormat:M}},Sv=e=>Bt({...e}),eu=Bt({perm:[0,2,1,3]}),ey=(e,r,t,s,n,i,o)=>{let a=[s,n,i],l=ye.size(a),c=[{type:12,data:l},{type:12,data:o},{type:12,data:i}],p=d=>{let u=ot("qkv_with_bias",r.dataType,a),_=Pe("qkv",r.dataType,a),f=Pe("bias",t.dataType,a),w=[{name:"output_size",type:"u32"},{name:"bias_offset",type:"u32"},{name:"hidden_size",type:"u32"}];return`
  ${d.registerUniforms(w).declareVariables(_,f,u)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`};return e.compute({name:"MultiHeadAttentionAddBias",shaderCache:{inputDependencies:["type","type"]},getRunData:()=>({outputs:[{dims:a,dataType:r.dataType,gpuDataType:0}],dispatchGroup:{x:Math.ceil(l/64)},programUniforms:c}),getShaderSource:p},{inputs:[r,t],outputs:[-1]})[0]},po=(e,r,t,s,n,i,o,a)=>{let l=i;if(o&&ye.size(o.dims)>0){if(s===1)throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");return l=ey(e,i,o,r,s,t*n,a),l=l.reshape([r,s,t,n]),t===1||s===1?l:e.compute(es(l,eu.perm),{inputs:[l],outputs:[-1]})[0]}else return i.dims.length===3&&(l=i.reshape([r,s,t,n])),t===1||s===1?l:e.compute(es(l,eu.perm),{inputs:[l],outputs:[-1]})[0]},$v=(e,r)=>{let t=Zw(e.inputs,r),s=e.inputs[0],n=Wr(e.inputs,1),i=Wr(e.inputs,2),o=Wr(e.inputs,3),a=Wr(e.inputs,4),l=Wr(e.inputs,5),c=Wr(e.inputs,6),p=Wr(e.inputs,7);if(s.dims.length===5)throw new Error("Packed QKV is not implemented");if(n?.dims.length===5)throw new Error("Packed KV is not implemented");let d=n&&i&&n.dims.length===4&&i.dims.length===4,u=po(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,s,o,0);if(d)return bo(e,u,n,i,a,void 0,c,p,l,t);if(!n||!i)throw new Error("key and value must be provided");let _=po(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.headSize,n,o,t.hiddenSize),f=po(e,t.batchSize,t.numHeads,t.kvSequenceLength,t.vHeadSize,i,o,2*t.hiddenSize);bo(e,u,_,f,a,void 0,c,p,l,t)}}),ty,ry,sy,ny,Wu,Iv,Av,Fv=Be(()=>{gt(),vt(),cr(),Tt(),ty=e=>{if(!e||e.length<1)throw new Error("too few inputs")},ry=(e,r)=>{let t=[],s=r.numOutputs;return e[1].dims[0]>0&&(e[1].getBigInt64Array().forEach(n=>t.push(Number(n))),s=t.length),Bt({numOutputs:s,axis:r.axis,splitSizes:t})},sy=e=>`
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${e}u; i += 1u ) {
    if (index < ${at("uniforms.size_in_split_axis","i",e)}) {
        return i;
    }
    }
    return ${e}u;
}`,ny=e=>{let r=e.length,t=[];for(let s=0;s<r;++s){let n=e[s].setByIndices("indices","input[global_idx]");r===1?t.push(n):s===0?t.push(`if (output_number == ${s}u) { ${n} }`):s===r-1?t.push(`else { ${n} }`):t.push(`else if (output_number == ${s}) { ${n} }`)}return`
      fn writeBufferData(output_number: u32, indices: ${e[0].type.indices}, global_idx: u32) {
        ${t.join(`
`)}
      }`},Wu=(e,r)=>{let t=e[0].dims,s=ye.size(t),n=e[0].dataType,i=ye.normalizeAxis(r.axis,t.length),o=new Array(r.numOutputs),a=Pe("input",n,t.length),l=new Array(r.numOutputs),c=[],p=[],d=0,u=[{type:12,data:s}];for(let f=0;f<r.numOutputs;f++){d+=r.splitSizes[f],l[f]=d;let w=t.slice();w[i]=r.splitSizes[f],p.push(w),o[f]=ot(`output${f}`,n,w.length),c.push({dims:p[f],dataType:e[0].dataType})}u.push({type:12,data:l},...ct(t,...p));let _=f=>`
  ${f.registerUniform("input_size","u32").registerUniform("size_in_split_axis","u32",l.length).declareVariables(a,...o)}
  ${sy(l.length)}
  ${ny(o)}

  ${f.mainStart()}
    ${f.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${a.offsetToIndices("global_idx")};
    var index = ${a.indicesGet("indices",i)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${at("uniforms.size_in_split_axis","output_number - 1u",l.length)};
      ${a.indicesSet("indices",i,"index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;return{name:"Split",shaderCache:{hint:r.cacheKey,inputDependencies:["rank"]},getShaderSource:_,getRunData:()=>({outputs:c,dispatchGroup:{x:Math.ceil(s/64)},programUniforms:u})}},Iv=(e,r)=>{ty(e.inputs);let t=e.inputs.length===1?r:ry(e.inputs,r);e.compute(Wu(e.inputs,t),{inputs:[0]})},Av=e=>{let r=e.axis,t=e.splitSizes,s=e.numOutputs<0?t.length:e.numOutputs;if(s!==t.length)throw new Error("numOutputs and splitSizes lengh must be equal");return Bt({axis:r,numOutputs:s,splitSizes:t})}}),iy,Ha,Dv,Ov=Be(()=>{gt(),vt(),cr(),Tt(),iy=(e,r)=>{let[t,s,n,i]=e,{numHeads:o,rotaryEmbeddingDim:a}=r;if(t.dims.length!==3&&t.dims.length!==4)throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${t.dims.length}`);if(!ye.areEqual(s.dims,[])&&!ye.areEqual(s.dims,[1])&&s.dims.length!==2)throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${s.dims.length}`);if(n.dims.length!==2)throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${n.dims.length}`);if(i.dims.length!==2)throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${i.dims.length}`);if(!ye.areEqual(n.dims,i.dims))throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");if(a>0&&o===0)throw new Error("num_heads must be provided if rotary_embedding_dim is specified");let l=t.dims[0],c=t.dims[t.dims.length-2],p=n.dims[0],d=ye.sizeFromDimension(t.dims,1)/c,u=a===0?n.dims[1]*2:d/o;if(a>u)throw new Error("rotary_embedding_dim must be less than or equal to head_size");if(s.dims.length===2){if(l!==s.dims[0])throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${s.dims[0]}`);if(c!==s.dims[1])throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${s.dims[1]}`)}if(u/2!==n.dims[1]&&a/2!==n.dims[1])throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${n.dims[1]}`);if(c>p)throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported")},Ha=(e,r)=>{let{interleaved:t,numHeads:s,rotaryEmbeddingDim:n,scale:i}=r,o=e[0].dims[0],a=ye.sizeFromDimension(e[0].dims,1),l=e[0].dims[e[0].dims.length-2],c=a/l,p=e[2].dims[1],d=n===0?p*2:c/s,u=new Array(o,l,c/d,d-p),_=ye.computeStrides(u),f=[{type:1,data:i},{type:12,data:u},{type:12,data:_},...e[0].dims.length===3?new Array({type:12,data:[a,c,d,1]}):[],...e[0].dims.length===4?new Array({type:12,data:[a,d,l*d,1]}):[],...ct(e[0].dims,e[1].dims,e[2].dims,e[3].dims,e[0].dims)],w=I=>{let M=Pe("input",e[0].dataType,e[0].dims.length),y=Pe("position_ids",e[1].dataType,e[1].dims.length),$=Pe("cos_cache",e[2].dataType,e[2].dims.length),v=Pe("sin_cache",e[3].dataType,e[3].dims.length),T=ot("output",e[0].dataType,e[0].dims.length);return I.registerUniforms([{name:"scale",type:"f32"},{name:"global_shape",type:"u32",length:u.length},{name:"global_strides",type:"u32",length:_.length},{name:"input_output_strides",type:"u32",length:_.length}]),`
        ${I.declareVariables(M,y,$,v,T)}

        ${I.mainStart(bi)}
          let half_rotary_emb_dim = uniforms.${$.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${I.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${y.broadcastedIndicesToOffset("bsnh.xy",ot("",y.type.tensor,2))};
            let position_id =
                u32(${y.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${t});
            let j = i + select(half_rotary_emb_dim, 1, ${t});
            let re = ${M.getByOffset("i")} * ${$.get("position_id","bsnh[3]")} -
                ${M.getByOffset("j")} * ${v.get("position_id","bsnh[3]")};
            ${T.setByOffset("i","re")}
            let im = ${M.getByOffset("i")} * ${v.get("position_id","bsnh[3]")} +
                ${M.getByOffset("j")} * ${$.get("position_id","bsnh[3]")};
            ${T.setByOffset("j","im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${T.setByOffset("k",M.getByOffset("k"))}
          }
        }`};return{name:"RotaryEmbedding",shaderCache:{hint:Bt({interleaved:t}).cacheKey,inputDependencies:["rank","rank","rank","rank"]},getShaderSource:w,getRunData:()=>({outputs:[{dims:e[0].dims,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(u)/bi)},programUniforms:f})}},Dv=(e,r)=>{iy(e.inputs,r),e.compute(Ha(e.inputs,r))}}),oy,ay,tu,ly,Lv,pC=Be(()=>{cr(),gt(),fd(),kv(),Fv(),hn(),Ov(),Tt(),oy=(e,r)=>{if(r.doRotary&&e.length<=7)throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");let t=e[0],s=e[1],n=e[2],i=e[3],o=e[4];if(r.doRotary!==0&&e.length<=7)throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");if(r.localWindowSize!==-1)throw new Error("Local attention is not supported");if(r.softcap!==0)throw new Error("Softcap is not supported");if(r.rotaryInterleaved!==0)throw new Error("Rotary interleaved is not supported");if(r.smoothSoftmax)throw new Error("Smooth softmax is not supported");if(t.dims.length!==3&&t.dims.length!==5)throw new Error("Input query is expected to have 3 or 5 dimensions");let a=!1,l=t.dims[0],c=t.dims[1],p=t.dims.length===3?a?t.dims[2]/3:t.dims[2]:r.numHeads*t.dims[4],d=c,u=0,_=!s||s.dims.length===0,f=Math.floor(_?p/(r.numHeads+2*r.kvNumHeads):p/r.numHeads);_&&(p=f*r.numHeads);let w=i&&i.dims.length!==0,I=o&&o.dims.length!==0;if(w&&i.dims.length===4&&i.dims[0]===l&&i.dims[1]!==r.kvNumHeads&&i.dims[2]===r.kvNumHeads&&i.dims[3]===f)throw new Error("BSNH pastKey/pastValue is not supported");if(w&&I){if(i.dims.length!==4)throw new Error('Input "past_key" is expected to have 4 dimensions');if(o.dims.length!==4)throw new Error('Input "past_value" is expected to have 4 dimensions');u=i.dims[2]}else if(w||I)throw new Error('Input "past_key" and "past_value" shall be both present or both absent');let M=1;if(s&&s.dims.length>0){if(t.dims.length!==3)throw new Error('Input "query" is expected to have 3 dimensions when key is given');if(s.dims.length<3||s.dims.length>5)throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');if(t.dims[0]!==s.dims[0])throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');if(s.dims.length===3){if(t.dims[2]%s.dims[2]!==0)throw new Error('Dimension 2 of "query" should be a multiple of "key"');d=s.dims[1]}else if(s.dims.length===5){if(s.dims[2]!==r.numHeads||s.dims[3]!==2||s.dims[4]!==f)throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');if(n)throw new Error('Expect "value" be none when "key" has packed kv format.');d=s.dims[1]}else{if(s.dims[1]!==r.numHeads||s.dims[3]!==f)throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');d=s.dims[2]}}else{if(t.dims.length!==3&&t.dims.length!==5)throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');if(t.dims.length===5&&(t.dims[2]!==r.numHeads||t.dims[3]!==3))throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');M=3}let y=0,$=!1,v=r.kvNumHeads?f*r.kvNumHeads:p;if(n&&n.dims.length>0){if(n.dims.length!==3&&n.dims.length!==4)throw new Error('Input "value" is expected to have 3 or 4 dimensions');if(t.dims[0]!==n.dims[0])throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');if(n.dims.length===3){if(d!==n.dims[1])throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');v=n.dims[2]}else{if(d!==n.dims[2])throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');v=n.dims[1]*n.dims[3],$=!0}}let T=e.length>4?e[5]:void 0;if(T&&T.dims.length!==1&&T.dims[0]!==l)throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');return{batchSize:l,sequenceLength:c,pastSequenceLength:u,kvSequenceLength:d,totalSequenceLength:-1,maxSequenceLength:-1,inputHiddenSize:0,hiddenSize:p,vHiddenSize:v,headSize:f,vHeadSize:Math.floor(v/r.kvNumHeads),numHeads:r.numHeads,kvNumHeads:r.kvNumHeads,nReps:r.numHeads/r.kvNumHeads,pastPresentShareBuffer:!1,maskType:y,scale:r.scale,broadcastResPosBias:!1,passPastInKv:$,qkvFormat:M}},ay=Bt({perm:[0,2,1,3]}),tu=(e,r,t)=>{let s=r,n=t.kvNumHeads;return r.dims.length===3&&t.kvSequenceLength!==0&&(s=r.reshape([t.batchSize,t.kvSequenceLength,n,t.headSize]),s=e.compute(es(s,ay.perm),{inputs:[s],outputs:[-1]})[0]),s},ly=(e,r,t,s)=>{let n=7,i=["type","type"],o=[e*r],a=e*r,l=[{type:12,data:a},{type:12,data:r},{type:12,data:e}],c=p=>{let d=Pe("seq_lens",t.dataType,t.dims),u=Pe("total_seq_lens",s.dataType,s.dims),_=ot("pos_ids",n,o),f=[{name:"output_size",type:"u32"},{name:"sequence_length",type:"u32"},{name:"batch_size",type:"u32"}];return`
  ${p.registerUniforms(f).declareVariables(d,u,_)}
  ${p.mainStart()}
    ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${u.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${_.setByOffset("global_idx","pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${_.setByOffset("global_idx","seqlen")}
    };
  }
  `};return{name:"GeneratePositionIds",shaderCache:{hint:`${e};${r}`,inputDependencies:i},getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64)},programUniforms:l}),getShaderSource:c}},Lv=(e,r)=>{let t=oy(e.inputs,r);if(e.inputs[0].dims.length===5)throw new Error("Packed QKV is not implemented");if(e.inputs[1]?.dims.length===5)throw new Error("Packed KV is not implemented");let s=e.inputs[0],n=e.inputs[1]&&e.inputs[1].dims.length>0?e.inputs[1]:void 0,i=e.inputs[2]&&e.inputs[2].dims.length>0?e.inputs[2]:void 0,o=e.inputs[3]&&e.inputs[3].dims.length!==0?e.inputs[3]:void 0,a=e.inputs[4]&&e.inputs[4].dims.length!==0?e.inputs[4]:void 0,l=e.inputs.length>4?e.inputs[5]:void 0,c=e.inputs.length>5?e.inputs[6]:void 0,p=t.kvNumHeads?t.kvNumHeads:t.numHeads,d=Bt({axis:2,numOutputs:3,splitSizes:[t.numHeads*t.headSize,p*t.headSize,p*t.headSize]}),[u,_,f]=!n&&!i?e.compute(Wu([s],d),{inputs:[s],outputs:[-1,-1,-1]}):[s,n,i],w,I;if(r.doRotary){let v=e.compute(ly(t.batchSize,t.sequenceLength,l,c),{inputs:[l,c],outputs:[-1]})[0],T=e.inputs[7],E=e.inputs[8],x=Bt({interleaved:r.rotaryInterleaved!==0,numHeads:t.numHeads,rotaryEmbeddingDim:0,scale:r.scale}),S=[u,v,T,E],z=[-1];w=e.compute(Ha(S,x),{inputs:S,outputs:z})[0],S.splice(0,1,_);let D=Bt({interleaved:r.rotaryInterleaved!==0,numHeads:t.kvNumHeads,rotaryEmbeddingDim:0,scale:r.scale});I=e.compute(Ha(S,D),{inputs:S,outputs:z})[0]}let M=po(e,t.batchSize,t.numHeads,t.sequenceLength,t.headSize,r.doRotary?w:u,void 0,0),y=tu(e,r.doRotary?I:_,t),$=tu(e,f,t);bo(e,M,y,$,void 0,void 0,o,a,void 0,t,l,c)}}),ru,cy,uy,zv,hC=Be(()=>{gt(),vt(),hn(),Tt(),ru=(e,r,t,s,n,i,o,a)=>{let l=ar(i),c=l===1?"f32":`vec${l}f`,p=l===1?"vec2f":`mat2x${l}f`,d=n*o,u=64;d===1&&(u=256);let _=[n,o,i/l],f=[n,o,2],w=["rank","type","type"],I=[];I.push(...ct(_,f));let M=y=>{let $=Pe("x",r.dataType,3,l),v=Pe("scale",t.dataType,t.dims),T=Pe("bias",s.dataType,s.dims),E=ot("output",1,3,2),x=[$,v,T,E];return`
  var<workgroup> workgroup_shared : array<${p}, ${u}>;
  const workgroup_size = ${u}u;
  ${y.declareVariables(...x)}
  ${y.mainStart(u)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${c}(0);
    var squared_sum = ${c}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${c}(${$.get("batch","channel","h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${p}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${pn("workgroup_shared[0][0]",l)} / f32(hight * ${l});
      let squared_sum_final = ${pn("workgroup_shared[0][1]",l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${a}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`};return e.compute({name:"InstanceNormComputeChannelScaleShift",shaderCache:{hint:`${l};${a};${u}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:f,dataType:1}],dispatchGroup:{x:d},programUniforms:I}),getShaderSource:M},{inputs:[r,t,s],outputs:[-1]})[0]},cy=(e,r,t)=>{let s=r[0].dims,n=s,i=2,o=s[0],a=s[1],l=ye.sizeFromDimension(s,i),c=ar(l),p=ye.size(n)/c,d=ru(e,r[0],r[1],r[2],o,l,a,t.epsilon),u=[o,a,l/c],_=[o,a],f=["type","none"],w=I=>{let M=Pe("x",r[0].dataType,u.length,c),y=Pe("scale_shift",1,_.length,2),$=ot("output",r[0].dataType,u.length,c),v=[M,y,$];return`
  ${I.registerUniform("output_size","u32").declareVariables(...v)}
  ${I.mainStart()}
  ${I.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${$.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${y.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${M.getByOffset("global_idx")} * ${$.type.value}(scale_shift.x) + ${$.type.value}(scale_shift.y);
      ${$.setByOffset("global_idx","value")};
  }`};e.compute({name:"InstanceNormalization",shaderCache:{hint:`${c}`,inputDependencies:f},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(p/64)},programUniforms:[{type:12,data:p},...ct(u,_,u)]}),getShaderSource:w},{inputs:[r[0],d]})},uy=(e,r,t)=>{let s=r[0].dims,n=s,i=s[0],o=s[s.length-1],a=ye.sizeFromDimension(s,1)/o,l=ar(o),c=ye.size(n)/l,p=[{type:12,data:a},{type:12,data:Math.floor(o/l)}],d=["type","type"],u=!1,_=[0,s.length-1];for(let M=0;M<s.length-2;M++)u=u||s[M+1]!==1,_.push(M+1);u=u&&s[s.length-1]!==1;let f=u?e.compute(es(e.inputs[0],_),{inputs:[e.inputs[0]],outputs:[-1]})[0]:e.inputs[0].reshape(Array.from({length:s.length},(M,y)=>s[_[y]])),w=ru(e,f,r[1],r[2],i,a,o,t.epsilon),I=M=>{let y=kr(r[0].dataType),$=l===1?"vec2f":`mat${l}x2f`,v=x=>{let S=x===0?"x":"y",z=l===1?"f32":`vec${l}f`;switch(l){case 1:return`${y}(${z}(scale.${S}))`;case 2:return`vec2<${y}>(${z}(scale[0].${S}, scale[1].${S}))`;case 4:return`vec4<${y}>(${z}(scale[0].${S}, scale[1].${S}, scale[2].${S}, scale[3].${S}))`;default:throw new Error(`Not supported compoents ${l}`)}},T=Pe("input",r[0].dataType,r[0].dims,l),E=ot("output",r[0].dataType,n,l);return`
  @group(0) @binding(0) var<storage, read> input : array<${T.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${$}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${E.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${M.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${v(0)}, ${v(1)});
  }`};e.compute({name:"InstanceNormalizationNHWC",shaderCache:{hint:`${l}`,inputDependencies:d},getRunData:()=>({outputs:[{dims:n,dataType:r[0].dataType}],dispatchGroup:{x:Math.ceil(c/64)},programUniforms:p}),getShaderSource:I},{inputs:[r[0],w]})},zv=(e,r)=>{r.format==="NHWC"?uy(e,e.inputs,r):cy(e,e.inputs,r)}}),dy,py,Bv,mC=Be(()=>{gt(),vt(),Tt(),dy=e=>{if(!e||e.length<2)throw new Error("layerNorm requires at least 2 inputs.")},py=(e,r,t)=>{let s=r.simplified,n=e[0].dims,i=e[1],o=!s&&e[2],a=n,l=ye.normalizeAxis(r.axis,n.length),c=ye.sizeToDimension(n,l),p=ye.sizeFromDimension(n,l),d=ye.size(i.dims),u=o?ye.size(o.dims):0;if(d!==p||o&&u!==p)throw new Error(`Size of X.shape()[axis:] == ${p}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${u}`);let _=[];for(let T=0;T<n.length;++T)T<l?_.push(n[T]):_.push(1);let f=ar(p),w=["type","type"],I=[{type:12,data:c},{type:1,data:p},{type:12,data:Math.floor(p/f)},{type:1,data:r.epsilon}];o&&w.push("type");let M=t>1,y=t>2,$=T=>{let E=kr(e[0].dataType),x=[Pe("x",e[0].dataType,e[0].dims,f),Pe("scale",i.dataType,i.dims,f)];o&&x.push(Pe("bias",o.dataType,o.dims,f)),x.push(ot("output",e[0].dataType,a,f)),M&&x.push(ot("mean_data_output",1,_)),y&&x.push(ot("inv_std_output",1,_));let S=[{name:"norm_count",type:"u32"},{name:"norm_size",type:"f32"},{name:"norm_size_vectorized",type:"u32"},{name:"epsilon",type:"f32"}];return`
  ${T.registerUniforms(S).declareVariables(...x)}
  ${T.mainStart()}
    ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${Ou("f32",f)};
    var mean_square_vector = ${Ou("f32",f)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${fi(E,f,"x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${pn("mean_vector",f)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${pn("mean_square_vector",f)} / uniforms.norm_size ${s?"":"- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${fi(E,f,"x[j + offset]")};
      let f32scale = ${fi(E,f,"scale[j]")};
      output[j + offset] = ${x[0].type.value}((f32input ${s?"":"- mean"}) * inv_std_dev * f32scale
        ${o?`+ ${fi(E,f,"bias[j]")}`:""}
      );
    }

    ${M?"mean_data_output[global_idx] = mean":""};
    ${y?"inv_std_output[global_idx] = inv_std_dev":""};
  }`},v=[{dims:a,dataType:e[0].dataType}];return M&&v.push({dims:_,dataType:1}),y&&v.push({dims:_,dataType:1}),{name:"LayerNormalization",shaderCache:{hint:`${f};${t};${s}`,inputDependencies:w},getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(c/64)},programUniforms:I}),getShaderSource:$}},Bv=(e,r)=>{dy(e.inputs),e.compute(py(e.inputs,r,e.outputCount))}}),hy,Rv,fC=Be(()=>{vt(),bd(),Md(),hy=e=>{if(!e||e.length!==2)throw new Error("MatMul requires 2 inputs.");if(e[0].dims[e[0].dims.length-1]!==e[1].dims[e[1].dims.length-2])throw new Error("shared dimension does not match.")},Rv=e=>{hy(e.inputs);let r=yi.calcShape(e.inputs[0].dims,e.inputs[1].dims,!0);if(!r)throw new Error("Can't use matmul on the given tensors");let t=r[r.length-1],s=e.inputs[0].dims[e.inputs[0].dims.length-1];if(t<8&&s<8)e.compute(yd(e.inputs,{activation:""},r));else{let n=r[r.length-2],i=ye.size(e.inputs[0].dims.slice(0,-2)),o=ye.size(e.inputs[1].dims.slice(0,-2));if(i!==1&&n===1&&o===1){let a=e.inputs[0].reshape([1,i,s]),l=e.inputs[1].reshape([1,s,t]),c=[1,i,t],p=[a,l];e.compute(qa(p,{activation:""},r,c),{inputs:p})}else e.compute(qa(e.inputs,{activation:""},r))}}}),my,fy,_y,Nv,jv,_C=Be(()=>{gt(),vt(),cr(),Tt(),my=(e,r)=>{if(e.length<3||e.length>4)throw new Error("MatMulNBits requires 3 or 4 inputs");let t=e[0],s=t.dims.length;if(t.dims[s-1]!==r.k)throw new Error("The last dim of input shape does not match the k value");let n=Math.floor((r.k+r.blockSize-1)/r.blockSize),i=r.blockSize/8*r.bits,o=e[1];if(!ye.areEqual(o.dims,[r.n,n,i]))throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");let a=e[2].dims;if(ye.size(a)!==r.n*n)throw new Error("scales input size error.");if(e.length===4){let l=e[3].dims,c=r.bits>4?r.n*n:r.n*Math.floor((n+1)/2);if(ye.size(l)!==c)throw new Error("zeroPoints input size error.")}},fy=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],i=r.k,o=r.n,a=t.slice(0,s-2),l=ye.size(a),c=e[1].dims[2]/4,p=e[0].dataType,d=ar(r.k),u=ar(c),_=ar(o),f=a.concat([n,o]),w=n>1&&o/_%2===0?2:1,I=ye.size(f)/_/w,M=64,y=[],$=[l,n,i/d],v=ye.convertShape(e[1].dims).slice();v.splice(-1,1,c/u),y.push(...ct($)),y.push(...ct(v)),y.push(...ct(e[2].dims)),e.length===4&&y.push(...ct(ye.convertShape(e[3].dims)));let T=[l,n,o/_];y.push(...ct(T));let E=x=>{let S=$.length,z=Pe("a",e[0].dataType,S,d),D=Pe("b",12,v.length,u),K=Pe("scales",e[2].dataType,e[2].dims.length),q=[z,D,K],O=e.length===4?Pe("zero_points",12,e[3].dims.length):void 0;O&&q.push(O);let Z=T.length,Q=ot("output",e[0].dataType,Z,_),J=kr(e[0].dataType),re=(()=>{switch(d){case 1:return`array<${J}, 8>`;case 2:return`mat4x2<${J}>`;case 4:return`mat2x4<${J}>`;default:throw new Error(`${d}-component is not supported.`)}})(),te=()=>{let B=`
          // reuse a data
            var input_offset = ${z.indicesToOffset(`${z.type.indices}(batch, row, word_offset)`)};
            var a_data: ${re};
            for (var j: u32 = 0; j < ${8/d}; j++) {
              a_data[j] = ${z.getByOffset("input_offset")};
              input_offset++;
            }
          `;for(let F=0;F<_*w;F++)B+=`
            b_value = ${u===1?`b${F}_data`:`b${F}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${re}(${Array.from({length:4},(G,N)=>`${J}(b_value_lower[${N}]), ${J}(b_value_upper[${N}])`).join(", ")});
            b_dequantized_values = ${d===1?`${re}(${Array.from({length:8},(G,N)=>`(b_quantized_values[${N}] - ${O?`zero_point${F}`:"zero_point"}) * scale${F}`).join(", ")});`:`(b_quantized_values - ${re}(${Array(8).fill(`${O?`zero_point${F}`:"zero_point"}`).join(",")})) * scale${F};`};
            workgroup_shared[local_id.x * ${w} + ${Math.floor(F/_)}]${_>1?`[${F%_}]`:""} += ${Array.from({length:8/d},(G,N)=>`${d===1?`a_data[${N}] * b_dequantized_values[${N}]`:`dot(a_data[${N}], b_dequantized_values[${N}])`}`).join(" + ")};
          `;return B},ce=()=>{let B=`
            var col_index = col * ${_};
            ${O?`
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${J}(8);`}
            `;for(let F=0;F<_*w;F++)B+=`
            let scale${F} = ${K.getByOffset("col_index * nBlocksPerCol + block")};
            ${O?`
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${O.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${F} = ${J}((zero_point_word) & 0xFu);`:""}
            col_index += 1;`;return B},ue=()=>{let B=`col_index = col * ${_};`;for(let F=0;F<_*w;F++)B+=`
            let b${F}_data = ${D.getByIndices(`${D.type.indices}(col_index, block, word)`)};
            col_index += 1;`;return B+=`
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${re};
            var b_dequantized_values: ${re};`,B};return`
        var<workgroup> workgroup_shared: array<${Q.type.value}, ${w*M}>;
        ${x.declareVariables(...q,Q)}
        ${x.mainStart([M,1,1])}
          let output_indices = ${Q.offsetToIndices(`(global_idx / ${M}) * ${w}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${M}) {
            //process one block
            var word_offset: u32 = block * ${r.blockSize/d};
            ${ce()}
            for (var word: u32 = 0; word < ${c}; word += ${u}) {
              ${ue()}
              for (var i: u32 = 0; i < ${u}; i++) {
                ${te()}
                word_offset += ${8/d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${w}) {
            var output_value: ${Q.type.value} = ${Q.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${M}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${w};
            }
            ${Q.setByIndices(`${Q.type.indices}(batch, row, col + local_id.x)`,"output_value")};
          }
        }`};return{name:"MatMulNBits",shaderCache:{hint:`${r.blockSize};${r.bits};${d};${u};${_};${w};${M}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:f,dataType:p}],dispatchGroup:{x:I},programUniforms:y}),getShaderSource:E}},_y=(e,r)=>{let t=e[0].dims,s=t.length,n=t[s-2],i=r.k,o=r.n,a=t.slice(0,s-2),l=ye.size(a),c=e[1].dims[2]/4,p=e[0].dataType,d=ar(r.k),u=ar(c),_=a.concat([n,o]),f=128,w=o%8===0?8:o%4===0?4:1,I=f/w,M=I*u*8,y=M/d,$=M/r.blockSize,v=ye.size(_)/w,T=[],E=[l,n,i/d],x=ye.convertShape(e[1].dims).slice();x.splice(-1,1,c/u),T.push(...ct(E)),T.push(...ct(x)),T.push(...ct(e[2].dims)),e.length===4&&T.push(...ct(ye.convertShape(e[3].dims)));let S=[l,n,o];T.push(...ct(S));let z=D=>{let K=E.length,q=Pe("a",e[0].dataType,K,d),O=Pe("b",12,x.length,u),Z=Pe("scales",e[2].dataType,e[2].dims.length),Q=[q,O,Z],J=e.length===4?Pe("zero_points",12,e[3].dims.length):void 0;J&&Q.push(J);let re=S.length,te=ot("output",e[0].dataType,re),ce=kr(e[0].dataType),ue=()=>{switch(d){case 1:return`
          let a_data0 = vec4<${ce}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${ce}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;case 2:return`
          let a_data0 = vec4<${ce}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${ce}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;case 4:return`
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;default:throw new Error(`${d}-component is not supported.`)}};return`
        var<workgroup> sub_a: array<${q.type.value}, ${y}>;
        var<workgroup> inter_results: array<array<${te.type.value}, ${I}>, ${w}>;
        ${D.declareVariables(...Q,te)}
        ${D.mainStart([I,w,1])}
          let output_indices = ${te.offsetToIndices(`workgroup_index * ${w}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${$} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${y};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${y}; a_offset += ${f})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${q.getByIndices(`${q.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${q.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${$} + local_id.x;
            ${J?`
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${J.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${ce}((zero_point_word) & 0xFu);`:`
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${ce}(8);`}
            let scale = ${Z.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${O.getByIndices(`${O.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${r.blockSize/d};
            for (var i: u32 = 0; i < ${u}; i++) {
              ${ue()}
              let b_value = ${u===1?"b_data":"b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${ce}>(${Array.from({length:4},(B,F)=>`${ce}(b_value_lower[${F}]), ${ce}(b_value_upper[${F}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${ce}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({length:2},(B,F)=>`${`dot(a_data${F}, b_dequantized_values[${F}])`}`).join(" + ")};
              word_offset += ${8/d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${w}) {
            var output_value: ${te.type.value} = ${te.type.value}(0);
            for (var b = 0u; b < ${I}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${te.setByIndices(`${te.type.indices}(batch, row, col + local_idx)`,"output_value")}
            }
          }
        }`};return{name:"BlockwiseMatMulNBits32",shaderCache:{hint:`${r.blockSize};${d};${u};${I};${w}`,inputDependencies:Array(e.length).fill("rank")},getRunData:()=>({outputs:[{dims:_,dataType:p}],dispatchGroup:{x:v},programUniforms:T}),getShaderSource:z}},Nv=(e,r)=>{my(e.inputs,r),r.blockSize===32&&e.adapterInfo.isVendor("intel")&&e.adapterInfo.isArchitecture("gen-12lp")?e.compute(_y(e.inputs,r)):e.compute(fy(e.inputs,r))},jv=e=>Bt(e)}),gy,wy,yy,by,My,vy,xy,Ty,Vv,gC=Be(()=>{gt(),vt(),Tt(),gy=e=>{if(!e||e.length<1)throw new Error("Too few inputs");if(e[0].dataType!==1&&e[0].dataType!==10)throw new Error("Input type must be float or float16.");if(e.length>=2){let r=e[0].dims.length*2===e[1].dims[0];if(e.length===4&&(r=e[3].dims[0]*2===e[1].dims[0]),!r)throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].")}},wy=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
            k = i32(${e.indicesGet("indices",n)}) - ${at("uniforms.pads",n,t)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${at("uniforms.x_shape",n,r)})) {
              break;
            }
            offset += k * i32(${at("uniforms.x_strides",n,r)});
        `;return`
          value = ${e.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${s}
            value = x[offset];
          }
      `},yy=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${at("uniforms.pads",n,t)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${at("uniforms.x_shape",n,r)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${at("uniforms.x_shape",n,r)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${at("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},by=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${at("uniforms.pads",n,t)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${at("uniforms.x_shape",n,r)})) {
                  k = i32(${at("uniforms.x_shape",n,r)}) - 1;
                }
                offset += k * i32(${at("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},My=(e,r,t)=>{let s="";for(let n=r-1;n>=0;--n)s+=`
                k = i32(${e.indicesGet("indices",n)}) - ${at("uniforms.pads",n,t)};
                if (k < 0)  {
                  k += i32(${at("uniforms.x_shape",n,r)}]);
                }
                if (k >= i32(${at("uniforms.x_shape",n,r)})) {
                  k -= i32(${at("uniforms.x_shape",n,r)});
                }
                offset += k * i32(${at("uniforms.x_strides",n,r)});
            `;return`
              var offset = 0;
              var k = 0;
              ${s}
              value = x[offset];
          `},vy=(e,r,t)=>{switch(t.mode){case 0:return wy(e,r,t.pads.length);case 1:return yy(e,r,t.pads.length);case 2:return by(e,r,t.pads.length);case 3:return My(e,r,t.pads.length);default:throw new Error("Invalid mode")}},xy=(e,r)=>{let t=ye.padShape(e[0].dims.slice(),r.pads),s=e[0].dims,n=ye.size(t),i=[{type:12,data:n},{type:6,data:r.pads}],o=e.length>=3&&e[2].data;r.mode===0&&i.push({type:o?e[2].dataType:1,data:r.value}),i.push(...ct(e[0].dims,t));let a=["rank"],l=c=>{let p=ot("output",e[0].dataType,t.length),d=Pe("x",e[0].dataType,s.length),u=d.type.value,_=vy(p,s.length,r),f=[{name:"output_size",type:"u32"},{name:"pads",type:"i32",length:r.pads.length}];return r.mode===0&&f.push({name:"constant_value",type:o?u:"f32"}),`
            ${c.registerUniforms(f).declareVariables(d,p)}
            ${c.mainStart()}
            ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${p.offsetToIndices("global_idx")};

            var value = ${u}(0);
            ${_}
            output[global_idx] = value;
        }`};return{name:"Pad",shaderCache:{hint:`${r.mode}${o}`,inputDependencies:a},getRunData:()=>({outputs:[{dims:t,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(ye.size(t)/64)},programUniforms:i}),getShaderSource:l}},Ty=(e,r)=>{if(e.length>1){let t=e[1].getBigInt64Array(),s=e.length>=3&&e[2].data?e[2].dataType===10?e[2].getUint16Array()[0]:e[2].getFloat32Array()[0]:0,n=e[0].dims.length,i=new Int32Array(2*n).fill(0);if(e.length>=4){let a=e[3].getBigInt64Array();for(let l=0;l<a.length;l++)i[Number(a[l])]=Number(t[l]),i[Number(a[l])+n]=Number(t[l+a.length])}else t.forEach((a,l)=>i[Number(l)]=Number(a));let o=[];return i.forEach(a=>o.push(a)),{mode:r.mode,value:s,pads:o}}else return r},Vv=(e,r)=>{gy(e.inputs);let t=Ty(e.inputs,r);e.compute(xy(e.inputs,t),{inputs:[0]})}}),to,su,nu,iu,ou,Ey,Py,au,lu,Uv,Wv,cu,Gv,Kv,uu,qv,Hv,Qv,Xv,wC=Be(()=>{$s(),gt(),vt(),Tt(),to=e=>{if(Zt.webgpu.validateInputContent&&(!e||e.length!==1))throw new Error("Pool ops requires 1 input.")},su=(e,r,t)=>{let s=r.format==="NHWC",n=e.dims.slice();s&&n.splice(1,0,n.pop());let i=Object.hasOwnProperty.call(r,"dilations"),o=r.kernelShape.slice(),a=r.strides.slice(),l=i?r.dilations.slice():[],c=r.pads.slice();Ga.adjustPoolAttributes(t,n,o,a,l,c);let p=Ga.computePoolOutputShape(t,n,a,l,o,c,r.autoPad),d=Object.assign({},r);i?Object.assign(d,{kernelShape:o,strides:a,pads:c,dilations:l,cacheKey:r.cacheKey}):Object.assign(d,{kernelShape:o,strides:a,pads:c,cacheKey:r.cacheKey});let u=p.slice();return u.push(u.splice(1,1)[0]),[d,s?u:p]},nu=(e,r)=>{let t=r.format==="NHWC",s=ye.size(e),n=ye.size(r.kernelShape),i=[{type:12,data:s},{type:12,data:n}],o=[{name:"outputSize",type:"u32"},{name:"kernelSize",type:"u32"}];if(r.kernelShape.length<=2){let a=r.kernelShape[r.kernelShape.length-1],l=r.strides[r.strides.length-1],c=r.pads[r.pads.length/2-1],p=r.pads[r.pads.length-1],d=!!(c+p);i.push({type:12,data:a},{type:12,data:l},{type:12,data:c},{type:12,data:p}),o.push({name:"kw",type:"u32"},{name:"sw",type:"u32"},{name:"pwStart",type:"u32"},{name:"pwEnd",type:"u32"});let u=!1;if(r.kernelShape.length===2){let _=r.kernelShape[r.kernelShape.length-2],f=r.strides[r.strides.length-2],w=r.pads[r.pads.length/2-2],I=r.pads[r.pads.length-2];u=!!(w+I),i.push({type:12,data:_},{type:12,data:f},{type:12,data:w},{type:12,data:I}),o.push({name:"kh",type:"u32"},{name:"sh",type:"u32"},{name:"phStart",type:"u32"},{name:"phEnd",type:"u32"})}return[i,o,!0,d,u]}else{if(t)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let a=ye.computeStrides(r.kernelShape);i.push({type:12,data:a},{type:12,data:r.pads},{type:12,data:r.strides}),o.push({name:"kernelStrides",type:"u32",length:a.length},{name:"pads",type:"u32",length:r.pads.length},{name:"strides",type:"u32",length:r.strides.length});let l=r.pads.reduce((c,p)=>c+p);return[i,o,!!l,!1,!1]}},iu=(e,r,t,s,n,i,o,a,l,c,p,d)=>{let u=n.format==="NHWC",_=r.type.value,f=ot("output",r.type.tensor,s);if(n.kernelShape.length<=2){let w="",I="",M="",y=t-(u?2:1);if(p?w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${y}] < 0 || xIndices[${y}]
                      >= uniforms.x_shape[${y}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${i}
                }`:w=`
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${y}] = indices[${y}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${r.indicesToOffset("xIndices")}];
                  ${i}
                }`,n.kernelShape.length===2){let $=t-(u?3:2);d?I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${$}] < 0 || xIndices[${$}] >= uniforms.x_shape[${$}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              `:I=`
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${$}] = indices[${$}] * uniforms.sh - uniforms.phStart + j;
                `,M=`
              }
            `}return`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var value = ${_}(${a});
              var pad = 0;
              ${I}
              ${w}
              ${M}
              ${o}

              output[global_idx] = value;
            }`}else{if(u)throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");let w=n.kernelShape.length,I=n.pads.length,M="";return c?M=`
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${r.indicesToOffset("xIndices")}];
                ${i}
              }`:M=`
              }
              let x_val = x[${r.indicesToOffset("xIndices")}];
              ${i}
            `,`
            ${e.registerUniforms(l).declareVariables(r,f)}

            ${e.mainStart()}
              ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${f.offsetToIndices("global_idx")};
              var xIndices = ${f.offsetToIndices("global_idx")};

              var offsets: array<u32, ${w}>;

              var value = ${_}(${a});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${w-1}u; j++) {
                  offsets[j] = offset / ${at("uniforms.kernelStrides","j",w)};
                  offset -= offsets[j] * ${at("uniforms.kernelStrides","j",w)};
                }
                offsets[${w-1}] = offset;

                isPad = false;
                for (var j = ${t-w}u; j < ${t}u; j++) {
                  xIndices[j] = indices[j] * ${at("uniforms.strides",`j - ${t-w}u`,w)}
                    + offsets[j - ${t-w}u] - ${at("uniforms.pads","j - 2u",I)};
                  ${M}
              }
              ${o}

              output[global_idx] = value;
            }`}},ou=e=>`${e.format};${e.ceilMode};${e.autoPad};${e.kernelShape.length}`,Ey=e=>`${ou(e)};${e.countIncludePad}`,Py=e=>`${ou(e)};${e.storageOrder};${e.dilations}`,au=e=>({format:e.format,autoPad:["NOTSET","VALID","SAME_UPPER","SAME_LOWER"][e.auto_pad],ceilMode:e.ceil_mode,kernelShape:e.kernel_shape,strides:e.strides,pads:e.pads}),lu=(e,r,t,s)=>{let[n,i]=su(r,s,t),o=Pe("x",r.dataType,r.dims.length),a=o.type.value,l="value += x_val;",c="";n.countIncludePad?c+=`value /= ${a}(uniforms.kernelSize);`:c+=`value /= ${a}(i32(uniforms.kernelSize) - pad);`;let[p,d,u,_,f]=nu(i,n);p.push(...ct(r.dims,i));let w=["rank"];return{name:e,shaderCache:{hint:`${s.cacheKey};${u};${_};${f}`,inputDependencies:w},getRunData:()=>({outputs:[{dims:i,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ye.size(i)/64)},programUniforms:p}),getShaderSource:I=>iu(I,o,r.dims.length,i.length,n,l,c,0,d,u,_,f)}},Uv=e=>{let r=e.count_include_pad!==0,t=au(e);if(t.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for AveragePool");let s={countIncludePad:r,...t,cacheKey:""};return{...s,cacheKey:Ey(s)}},Wv=(e,r)=>{to(e.inputs),e.compute(lu("AveragePool",e.inputs[0],!1,r))},cu={autoPad:"",ceilMode:0,countIncludePad:!1,kernelShape:[],strides:[],pads:[],storageOrder:0,dilations:[]},Gv=e=>{let r=e.format;return{format:r,...cu,cacheKey:r}},Kv=(e,r)=>{to(e.inputs),e.compute(lu("GlobalAveragePool",e.inputs[0],!0,r))},uu=(e,r,t,s)=>{let[n,i]=su(r,s,t),o=`
      value = max(x_val, value);
    `,a="",l=Pe("x",r.dataType,r.dims.length),c=["rank"],[p,d,u,_,f]=nu(i,n);return p.push(...ct(r.dims,i)),{name:e,shaderCache:{hint:`${s.cacheKey};${u};${_};${f}`,inputDependencies:c},getRunData:()=>({outputs:[{dims:i,dataType:r.dataType}],dispatchGroup:{x:Math.ceil(ye.size(i)/64)},programUniforms:p}),getShaderSource:w=>iu(w,l,r.dims.length,i.length,n,o,a,r.dataType===10?-65504:-1e5,d,u,_,f)}},qv=(e,r)=>{to(e.inputs),e.compute(uu("MaxPool",e.inputs[0],!1,r))},Hv=e=>{let r=e.storage_order,t=e.dilations,s=au(e);if(r!==0)throw new Error("column major storage order is not yet supported for MaxPool");if(s.ceilMode!==0)throw new Error("using ceil() in shape computation is not yet supported for MaxPool");let n={storageOrder:r,dilations:t,...s,cacheKey:""};return{...n,cacheKey:Py(n)}},Qv=e=>{let r=e.format;return{format:r,...cu,cacheKey:r}},Xv=(e,r)=>{to(e.inputs),e.compute(uu("GlobalMaxPool",e.inputs[0],!0,r))}}),Cy,Sy,Yv,Jv,yC=Be(()=>{gt(),vt(),cr(),Tt(),Cy=(e,r)=>{if(e.length<2||e.length>3)throw new Error("DequantizeLinear requires 2 or 3 inputs.");if(e.length===3&&e[1].dims===e[2].dims)throw new Error("x-scale and x-zero-point must have the same shape.");if(e.length===3&&e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[0].dataType===6&&e.length>2)throw new Error("In the case of dequantizing int32 there is no zero point.");if(e[1].dims.length!==0&&e[1].dims.length!==1&&e[1].dims.length!==e[0].dims.length)throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");if(e.length>2){if(e[0].dataType!==e[2].dataType)throw new Error("x and x-zero-point must have the same data type.");if(e[1].dims.length!==e[2].dims.length)throw new Error("scale and zero-point inputs must have the same rank.");if(!e[1].dims.map((t,s)=>t===e[2].dims[s]).reduce((t,s)=>t&&s,!0))throw new Error("scale and zero-point inputs must have the same shape.")}if(r.blockSize>0){if(e[1].dims.length===0||e[1].dims.length===1&&e[1].dims[0]===1)throw new Error("blockSize must be set only for block quantization.");if(!e[1].dims.map((n,i)=>i===r.axis||n===e[0].dims[i]).reduce((n,i)=>n&&i,!0))throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");if(e[1].dims.length!==e[0].dims.length)throw new Error("For block qunatization the scale input rank must be the same as the x rank.");let t=e[0].dims[r.axis],s=e[1].dims[r.axis];if(r.blockSize<Math.ceil(t/s)||r.blockSize>Math.ceil(t/(s-1)-1))throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].")}},Sy=(e,r)=>{let t=ye.normalizeAxis(r.axis,e[0].dims.length),s=e[0].dataType,n=s===3,i=e[0].dims,o=e[1].dataType,a=ye.size(i),l=s===3||s===2,c=l?[Math.ceil(ye.size(e[0].dims)/4)]:e[0].dims,p=e[1].dims,d=e.length>2?e[2]:void 0,u=d?l?[Math.ceil(ye.size(d.dims)/4)]:d.dims:void 0,_=p.length===0||p.length===1&&p[0]===1,f=_===!1&&p.length===1,w=ar(a),I=_&&(!l||w===4),M=I?w:1,y=I&&!l?w:1,$=Pe("input",l?12:s,c.length,y),v=Pe("scale",o,p.length),T=d?Pe("zero_point",l?12:s,u.length):void 0,E=ot("output",o,i.length,M),x=[$,v];T&&x.push(T);let S=[c,p];d&&S.push(u);let z=[{type:12,data:a/M},{type:12,data:t},{type:12,data:r.blockSize},...ct(...S,i)],D=K=>{let q=[{name:"output_size",type:"u32"},{name:"axis",type:"u32"},{name:"block_size",type:"u32"}];return`
      ${K.registerUniforms(q).declareVariables(...x,E)}
      ${K.mainStart()}
          ${K.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${E.offsetToIndices("global_idx")};

          // Set input x
          ${l?`
            let input = ${$.getByOffset("global_idx / 4")};
            let x_vec = ${n?"unpack4xI8(input)":"unpack4xU8(input)"};
            let x_value = ${M===1?"x_vec[global_idx % 4]":"x_vec"};`:`let x_value = ${$.getByOffset("global_idx")};`};

          // Set scale input
          ${_?`let scale_value= ${v.getByOffset("0")}`:f?`
            let scale_index = ${E.indicesGet("output_indices","uniforms.axis")};
            let scale_value= ${v.getByOffset("scale_index")};`:`
            var scale_indices: ${v.type.indices} = output_indices;
            let index = ${v.indicesGet("scale_indices","uniforms.axis")} / uniforms.block_size;
            ${v.indicesSet("scale_indices","uniforms.axis","index")};
            let scale_value= ${v.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${T?_?l?`
                let zero_point_input = ${T.getByOffset("0")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]`:`let zero_point_value = ${T.getByOffset("0")}`:f?l?`
                let zero_point_index = ${E.indicesGet("output_indices","uniforms.axis")};
                let zero_point_input = ${T.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]`:`
                let zero_point_index = ${E.indicesGet("output_indices","uniforms.axis")};
                let zero_point_value = ${T.getByOffset("zero_point_index")};`:l?`
                let zero_point_offset = ${v.indicesToOffset("scale_indices")};
                let zero_point_input = ${T.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${n?"unpack4xI8(zero_point_input)":"unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];`:`let zero_point_value = ${T.getByIndices("scale_indices")};`:`let zero_point_value = ${l?n?"i32":"u32":$.type.value}(0);`};
      // Compute and write output
      ${E.setByOffset("global_idx",`${E.type.value}(x_value - zero_point_value) * scale_value`)};
      }`};return{name:"DequantizeLinear",shaderCache:{hint:r.cacheKey,inputDependencies:T?["rank","rank","rank"]:["rank","rank"]},getShaderSource:D,getRunData:()=>({outputs:[{dims:i,dataType:o}],dispatchGroup:{x:Math.ceil(a/M/64),y:1,z:1},programUniforms:z})}},Yv=(e,r)=>{Cy(e.inputs,r),e.compute(Sy(e.inputs,r))},Jv=e=>Bt({axis:e.axis,blockSize:e.blockSize})}),$y,ky,Zv,bC=Be(()=>{$s(),gt(),Tt(),$y=(e,r,t)=>{let s=e===r,n=e<r&&t<0,i=e>r&&t>0;if(s||n||i)throw new Error("Range these inputs' contents are invalid.")},ky=(e,r,t,s)=>{let n=Math.abs(Math.ceil((r-e)/t)),i=[n],o=n,a=[{type:12,data:o},{type:s,data:e},{type:s,data:t},...ct(i)],l=c=>{let p=ot("output",s,i.length),d=p.type.value,u=[{name:"outputSize",type:"u32"},{name:"start",type:d},{name:"delta",type:d}];return`
        ${c.registerUniforms(u).declareVariables(p)}
        ${c.mainStart()}
        ${c.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`};return{name:"Range",shaderCache:{hint:`${s}`},getShaderSource:l,getRunData:()=>({outputs:[{dims:i,dataType:s}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:a})}},Zv=e=>{let r=0,t=0,s=0;e.inputs[0].dataType===6?(r=e.inputs[0].getInt32Array()[0],t=e.inputs[1].getInt32Array()[0],s=e.inputs[2].getInt32Array()[0]):e.inputs[0].dataType===1&&(r=e.inputs[0].getFloat32Array()[0],t=e.inputs[1].getFloat32Array()[0],s=e.inputs[2].getFloat32Array()[0]),Zt.webgpu.validateInputContent&&$y(r,t,s),e.compute(ky(r,t,s,e.inputs[0].dataType),{inputs:[]})}}),Iy,du,pu,Ay,ex,tx,MC=Be(()=>{gt(),vt(),cr(),Tt(),Iy=(e,r,t,s)=>{if(e!=="none"&&s!=="i32"&&s!=="u32"&&s!=="f32")throw new Error(`Input ${s} is not supported with reduction ${e}.`);let n=`{
                var oldValue = 0;
                loop {
                  let newValueF32 =`,i=`;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${r}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;switch(e){case"none":return`${r}=${t};`;case"add":return s==="i32"||s==="u32"?`atomicAdd(&${r}, bitcast<${s}>(${t}));`:`
              ${n}bitcast<${s}>(oldValue) + (${t})${i}`;case"max":return s==="i32"||s==="u32"?`atomicMax(&${r}, bitcast<${s}>(${t}));`:`
                ${n}max(bitcast<f32>(oldValue), (${t}))${i}`;case"min":return s==="i32"||s==="u32"?`atomicMin(&${r}, bitcast<${s}>(${t}));`:`${n}min(bitcast<${s}>(oldValue), (${t}))${i}`;case"mul":return`${n}(bitcast<${s}>(oldValue) * (${t}))${i}`;default:throw new Error(`Reduction ${e} is not supported.`)}},du=(e,r)=>`${e===1?`
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;`:`
    let element_count_dim = uniforms.output_strides[${r?"i - indices_start":"i"}];
    let dim_value = uniforms.output_shape[${r?"i - indices_start":"i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`,pu=(e,r,t)=>`for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${t?"global_idx":"idx"} + i];
        ${Iy(e.reduction,"output[data_offset + i]","value",r)}
      }`,Ay=(e,r)=>{let t=e[0].dims,s=e[1].dims,n=t,i=1,o=Math.ceil(ye.size(s)/i),a=s[s.length-1],l=ye.sizeFromDimension(t,a),c=ye.sizeFromDimension(s,0)/a,p=[{type:12,data:o},{type:12,data:a},{type:12,data:l},...ct(e[1].dims,e[2].dims,n)],d=u=>{let _=Pe("indices",e[1].dataType,e[1].dims.length),f=Pe("updates",e[2].dataType,e[2].dims.length,i),w=r.reduction!=="none"&&r.reduction!==""?$b("output",e[0].dataType,n.length):ot("output",e[0].dataType,n.length,i);return`
      ${u.registerUniform("output_size","u32").registerUniform("last_index_dimension","u32").registerUniform("num_updates_elements","u32").declareVariables(_,f,w)}
      ${u.mainStart()}
        ${u.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${r.reduction==="none"}) {
    for (var i = 0; i < ${c}; i = i + 1) {
      for (var j = i + 1; j < ${c}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${r.reduction==="none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${c}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${du(t.length,!1)}
      }
      ${pu(r,w.type.value,!1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${du(t.length,!0)}
  }
  ${pu(r,w.type.value,!0)}
  }`};return{name:"ScatterND",shaderCache:{hint:`${r.cacheKey}_${r.reduction}`,inputDependencies:["rank","rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(o/64)},programUniforms:p}),getShaderSource:d}},ex=e=>Bt({reduction:e.reduction}),tx=(e,r)=>{e.compute(Ay(e.inputs,r),{inputs:[e.inputs[1],e.inputs[2]],outputs:[]})}}),Fy,Dy,Oy,hu,Ly,zy,By,Ry,Ny,jy,Vy,Uy,mu,Wy,Gy,Ky,qy,Hy,rx,sx,vC=Be(()=>{gt(),vt(),cr(),Tt(),Fy=(e,r)=>{if(e.every(t=>t>0||(()=>{throw new Error("Resize requires scales input values to be positive")})),e.length>0){if(r.mode==="linear"){if(!(e.length===2||e.length===3||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1||e.length===5&&e[0]===1&&e[1]===1))throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`)}else if(r.mode==="cubic"&&!(e.length===2||e.length===4&&e[0]===1&&e[1]===1||e.length===4&&e[0]===1&&e[3]===1))throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode")}},Dy=(e,r,t)=>{r.every(n=>n>=0&&n<t||(()=>{throw new Error("Resize requires axes input values to be positive and less than rank")}));let s=new Array(t).fill(1);return r.forEach((n,i)=>s[n]=e[i]),s},Oy=(e,r,t,s,n,i)=>{let[o,a,l]=t>10?[1,2,3]:[-1,e.length>1?1:-1,-1],c=e[0].dims.length;if(o>0&&e.length>o&&e[o].dims.length>0)e[o].getFloat32Array().forEach(p=>i.push(p));else if(r.coordinateTransformMode==="tf_crop_and_resize")throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");if(a>0&&e.length>a&&e[a].dims.length===1&&e[a].dims[0]>0){if(e[a].getFloat32Array().forEach(p=>s.push(p)),s.length!==0&&s.length!==c&&t>=18&&s.length!==r.axes.length)throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");Fy(s,r),r.axes.length>0&&Dy(s,r.axes,c).forEach((p,d)=>s[d]=p)}if(l>0&&e.length>l&&e[l].dims.length===1&&e[l].dims[0]>0&&(e[l].getBigInt64Array().forEach(p=>n.push(Number(p))),n.length!==0&&n.length!==c&&t>=18&&n.length!==r.axes.length))throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");if(r.axes.length>0){if(s.length!==0&&s.length!==r.axes.length)throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');if(n.length!==0&&n.length!==r.axes.length)throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified')}if(typeof s<"u"&&typeof n<"u"&&s.length>0&&n.length>c)throw new Error("Resize requires only of scales or sizes to be specified")},hu=(e,r,t,s)=>`
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${e}) * (${r});
  let whole = ${s}(big / (${t}));
  let fract = ${s}(big % (${t})) / ${s}(${t});
  return whole + fract;
`,Ly=(e,r)=>`fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${r} { `+(()=>{switch(e){case"asymmetric":return`
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${r}(xResized) / ${r}(xScale);
          } else {
            ${hu("xResized","lengthOriginal","lengthResized",r)}
          }
        `;case"pytorch_half_pixel":return`if (lengthResized > 1) {
                    return (${r}(xResized) + 0.5) / ${r}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;case"tf_half_pixel_for_nn":return`return (${r}(xResized) + 0.5) / ${r}(xScale);`;case"align_corners":return`if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${hu("xResized","lengthOriginal - 1","lengthResized - 1",r)}
                  }`;case"tf_crop_and_resize":return`if (lengthResized > 1) {
                    return ${r}(roiStart) * ${r}(lengthOriginal - 1) +
                        (${r}(xResized) * ${r}(roiEnd - roiStart) * ${r}(lengthOriginal - 1)) /
                        ${r}(lengthResized - 1);
                  } else {
                    return 0.5 * ${r}(roiStart + roiEnd) * ${r}(lengthOriginal - 1);
                  }`;case"half_pixel_symmetric":return`const outputWidth = ${r}xScale * ${r}(lengthResized);
                  const adjustment = ${r}(lengthResized) / outputWidth;
                  const center = ${r}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;case"half_pixel":return`return ((${r}(xResized) + 0.5) / ${r}(xScale)) - 0.5;`;default:throw new Error(`Coordinate transform mode ${e} is not supported`)}})()+"}",zy=(e,r,t)=>`fn getNearestPixelFromOriginal(xOriginal: ${t}, isDownSample: bool) -> ${t} {`+(()=>{switch(e){case"round_prefer_ceil":return"if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";case"floor":return"return floor(xOriginal);";case"ceil":return"return ceil(xOriginal);";case"round_prefer_floor":return"if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";case"simple":default:if(r<11)return"if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";throw new Error(`Nearest mode ${e} is not supported`)}})()+"}",By=(e,r,t)=>{let s=new Array(t).fill(0).concat(new Array(t).fill(1)),n=e.length===0?s:e.slice();return r.length>0?(r.forEach((i,o)=>{s[i]=n[o],s[o+t]=n[r.length+o]}),s):n},Ry=(e,r,t,s)=>{let n=[];if(t.length>0)if(s.length>0){if(e.forEach(i=>n.push(i)),Math.max(...s)>e.length)throw new Error("axes is out of bound");s.forEach((i,o)=>n[i]=t[o])}else t.forEach(i=>n.push(i));else{if(r.length===0)throw new Error("Resize requires either scales or sizes.");n=e.map((i,o)=>Math.round(i*r[o]))}return n},Ny=(e,r,t)=>{let s=(()=>{switch(t.keepAspectRatioPolicy){case"not_larger":return t.axes.length>0?Math.min(...t.axes.map(i=>r[i]),Number.MAX_VALUE):Math.min(...r,Number.MAX_VALUE);case"not_smaller":return t.axes.length>0?Math.max(...t.axes.map(i=>r[i]),Number.MIN_VALUE):Math.max(...r,Number.MIN_VALUE);default:throw new Error(`Keep aspect ratio policy ${t.keepAspectRatioPolicy} is not supported`)}})();r.fill(1,0,r.length);let n=e.slice();return t.axes.length>0?(t.axes.forEach(i=>r[i]=s),t.axes.forEach(i=>n[i]=Math.round(e[i]*r[i]))):(r.fill(s,0,r.length),n.forEach((i,o)=>n[o]=Math.round(i*r[o]))),n},jy=(e,r,t,s,n)=>`
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${e.type.indices}) -> array<${e.type.value}, ${t.length}> {
      var original_indices: array<${e.type.value}, ${t.length}>;
      for (var i:u32 = 0; i < ${t.length}; i++) {
        var output_index = ${e.indicesGet("output_indices","i")};
        var scale = ${at("uniforms.scales","i",s)};
        var roi_low = ${at("uniforms.roi","i",n)};
        var roi_hi = ${at("uniforms.roi",`i + ${r.length}`,n)};
        if (scale == 1.0) {
          original_indices[i] = ${e.type.value}(output_index);
        } else {
          var input_shape_i = ${at("uniforms.input_shape","i",r.length)};
          var output_shape_i = ${at("uniforms.output_shape","i",t.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`,Vy=(e,r,t,s,n,i,o)=>`
    fn calculateInputIndicesFromOutputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
      var input_indices: ${e.type.indices};
      for (var i:u32 = 0; i < ${s.length}; i++) {
        var output_index = ${r.indicesGet("output_indices","i")};
        var input_index: u32;
        var scale = ${at("uniforms.scales","i",n)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${at("uniforms.roi","i",i)};
          var roi_hi = ${at("uniforms.roi",`i + ${t.length}`,i)};
          var input_shape_i = ${at("uniforms.input_shape","i",t.length)};
          var output_shape_i = ${at("uniforms.output_shape","i",s.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${o} || (original_idx >= 0 && original_idx < ${r.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${r.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${e.indicesSet("input_indices","i","input_index")}
      }
      return input_indices;
    }`,Uy=(e,r)=>`
    fn checkInputIndices(input_indices: ${e.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${r.length}; i++) {
        var input_index = ${e.indicesGet("input_indices","i")};
        if (input_index < 0 || input_index >= ${at("uniforms.input_shape","i",r.length)}) {
          return false;
        }
      }
      return true;
    }`,mu=(e,r,t,s)=>e.rank>s?`
    ${e.indicesSet("input_indices",r,"channel")};
    ${e.indicesSet("input_indices",t,"batch")};
`:"",Wy=(e,r,t,s,n)=>{let[i,o,a,l]=t.length===2?[-1,0,1,-1]:[0,2,3,1],c=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${c} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(row, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(col, ${t[a]} - 1))`)};
      ${mu(e,l,i,2)}
      return ${e.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${r.type.indices}) -> ${c} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${c} = originalIndices[${o}];
      var col:${c} = originalIndices[${a}];
      ${s?`if (row < 0 || row > (${t[o]} - 1) || col < 0 || col > (${t[a]} - 1)) {
        return ${n};
      }`:""};
      row = max(0, min(row, ${t[o]} - 1));
      col = max(0, min(col, ${t[a]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${t.length>2?`u32(originalIndices[${l}])`:"0"};
      var batch: u32 =  ${t.length>2?`u32(originalIndices[${i}])`:"0"};
      var x11: ${c} = getInputValue(batch, channel, row1, col1);
      var x12: ${c} = getInputValue(batch, channel, row1, col2);
      var x21: ${c} = getInputValue(batch, channel, row2, col1);
      var x22: ${c} = getInputValue(batch, channel, row2, col2);
      var dx1: ${c} = abs(row - ${c}(row1));
      var dx2: ${c} = abs(${c}(row2) - row);
      var dy1: ${c} = abs(col - ${c}(col1));
      var dy2: ${c} = abs(${c}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`},Gy=(e,r,t,s,n,i,o,a,l,c)=>{let p=t.length===2,[d,u]=p?[0,1]:[2,3],_=e.type.value,f=w=>{let I=w===d?"row":"col";return`
      fn ${I}CubicInterpolation(input_indices: ${e.type.indices}, output_indices: ${r.type.indices}) -> ${_} {
        var output_index = ${r.indicesGet("output_indices",w)};
        var originalIdx: ${_} = getOriginalCoordinateFromResizedCoordinate(output_index, ${n[w]},
        ${s[w]}, ${t[w]}, ${i[w]}, ${i[w]} + ${t.length});
        var fractOriginalIdx: ${_} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${a} && (originalIdx < 0 || originalIdx > (${t[w]} - 1))) {
          return ${l};
        }
        var data: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${I}: ${_} = originalIdx + ${_}(i);
          if (${I} < 0 || ${I} >= ${t[w]}) {
            ${c?`coefs[i + 1] = 0.0;
                        continue;`:a?`return ${l};`:`${I} = max(0, min(${I}, ${t[w]} - 1));`};
          }
        var input_indices_copy: ${e.type.indices} = input_indices;
          ${e.indicesSet("input_indices_copy",w,`u32(${I})`)};
          data[i + 1] = ${w===d?e.getByIndices("input_indices_copy"):"rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`};return`
    ${f(d)};
    ${f(u)};
  fn getCubicInterpolationCoefs(s: ${_}) -> array<${_}, 4> {
    var absS = abs(s);
    var coeffs: array<${_}, 4> = array<${_}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${_} = 1.0 - absS;
    var twoMinusAbsS: ${_} = 2.0 - absS;
    var onePlusAbsS: ${_} = 1.0 + absS;
    coeffs[0] = ((${o} * onePlusAbsS - 5 * ${o}) * onePlusAbsS + 8 * ${o}) * onePlusAbsS - 4 * ${o};
    coeffs[1] = ((${o} + 2) * absS - (${o} + 3)) * absS * absS + 1;
    coeffs[2] = ((${o} + 2) * oneMinusAbsS - (${o} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${o} * twoMinusAbsS - 5 * ${o}) * twoMinusAbsS + 8 * ${o}) * twoMinusAbsS - 4 * ${o};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${_}, 4>, coefs: array<${_}, 4>) -> ${_} {
    var coefsSum: ${_} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${r.type.indices}) -> ${_} {
    var input_indices: ${e.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `},Ky=(e,r,t,s,n)=>{let[i,o,a,l,c]=t.length===3?[-1,0,1,2,-1]:[0,2,3,4,1],p=e.type.value;return`
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${p} {
      var input_indices: ${e.type.indices};
      ${e.indicesSet("input_indices",o,`max(0, min(depth, ${t[o]} - 1))`)};
      ${e.indicesSet("input_indices",a,`max(0, min(height, ${t[a]} - 1))`)};
      ${e.indicesSet("input_indices",l,`max(0, min(width, ${t[l]} - 1))`)};
      ${mu(e,c,i,3)}
      return ${e.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${r.type.indices}) -> ${p} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${p} = originalIndices[${o}];
      var height:${p} = originalIndices[${a}];
      var width:${p} = originalIndices[${l}];
      ${s?`if (depth < 0 || depth > (${t[o]} - 1) || height < 0 || height > (${t[a]} - 1) || width < 0 || (width > ${t[l]} - 1)) {
      return ${n};
        }`:""};

    depth = max(0, min(depth, ${t[o]} - 1));
      height = max(0, min(height, ${t[a]} - 1));
      width = max(0, min(width, ${t[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${t.length>3?`u32(originalIndices[${c}])`:"0"};
      var batch: u32 =  ${t.length>3?`u32(originalIndices[${i}])`:"0"};

      var x111: ${p} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${p} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${p} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${p} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${p} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${p} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${p} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${p} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${p} = abs(depth - ${p}(depth1));
      var dx2: ${p} = abs(${p}(depth2) - depth);
      var dy1: ${p} = abs(height - ${p}(height1));
      var dy2: ${p} = abs(${p}(height2) - height);
      var dz1: ${p} = abs(width - ${p}(width1));
      var dz2: ${p} = abs(${p}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`},qy=(e,r,t,s,n,i)=>{let o=e.dims,a=By(i,r.axes,o.length),l=Ry(o,s,n,r.axes),c=s.slice();s.length===0&&(c=o.map((y,$)=>y===0?1:l[$]/y),r.keepAspectRatioPolicy!=="stretch"&&(l=Ny(o,c,r)));let p=ot("output",e.dataType,l.length),d=Pe("input",e.dataType,o.length),u=ye.size(l),_=o.length===l.length&&o.every((y,$)=>y===l[$]),f=r.coordinateTransformMode==="tf_crop_and_resize",w=r.extrapolationValue,I=d.type.value,M=y=>`
      ${_?"":`
      ${Ly(r.coordinateTransformMode,I)};
      ${(()=>{switch(r.mode){case"nearest":return`
              ${Uy(d,o)};
              ${zy(r.nearestMode,t,I)};
              ${Vy(d,p,o,l,c.length,a.length,f)};
              `;case"linear":return`
              ${jy(p,o,l,c.length,a.length)};
              ${(()=>{if(o.length===2||o.length===4)return`${Wy(d,p,o,f,w)}`;if(o.length===3||o.length===5)return`${Ky(d,p,o,f,w)}`;throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.")})()};
            `;case"cubic":return`
            ${(()=>{if(o.length===2||o.length===4)return`${Gy(d,p,o,l,c,a,r.cubicCoeffA,f,r.extrapolationValue,r.excludeOutside)}`;throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.")})()};
            `;default:throw Error("Invalid resize mode")}})()};
      `}
      ${y.registerUniform("output_size","u32").registerUniform("scales","f32",c.length).registerUniform("roi","f32",a.length).declareVariables(d,p)}
      ${y.mainStart()}
        ${y.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${_?"output[global_idx] = input[global_idx];":`
        let output_indices = ${p.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(()=>{switch(r.mode){case"nearest":return`input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${r.extrapolationValue};
                }`;case"linear":return`output[global_idx] = ${o.length===2||o.length===4?"bilinearInterpolation":"trilinearInterpolation"}(output_indices);`;case"cubic":return"output[global_idx] = bicubicInterpolation(output_indices);";default:throw Error(`Unsupported resize mode: ${r.mode}`)}})()};
`}
      }`;return{name:"Resize",shaderCache:{hint:`${r.cacheKey}|${t}|${c.length>0?r.mode==="cubic"?c:c.length:""}|${n.length>0?n:""}|${a.length>0?a:""}|${_}|${r.mode==="nearest"?o.length:o}`,inputDependencies:["rank"]},getShaderSource:M,getRunData:()=>({outputs:[{dims:l,dataType:e.dataType}],dispatchGroup:{x:Math.ceil(u/64)},programUniforms:[{type:12,data:u},{type:1,data:c},{type:1,data:a},...ct(o,l)]})}},Hy=e=>{let r=e.customDataBuffer;return new Uint32Array(r,r.byteOffset,1)[0]},rx=(e,r)=>{let t=[],s=[],n=[],i=Hy(e);if(r.antialias!==0)throw Error("Only default value (0) for Antialias attribute is supported");Oy(e.inputs,r,i,t,s,n),e.compute(qy(e.inputs[0],r,i,t,s,n),{inputs:[0]})},sx=e=>{let r=e.antialias,t=e.axes,s=e.coordinateTransformMode,n=e.cubicCoeffA,i=e.excludeOutside!==0,o=e.extrapolationValue,a=e.keepAspectRatioPolicy,l=e.mode,c=e.nearestMode===""?"simple":e.nearestMode;return Bt({antialias:r,axes:t,coordinateTransformMode:s,cubicCoeffA:n,excludeOutside:i,extrapolationValue:o,keepAspectRatioPolicy:a,mode:l,nearestMode:c})}}),Qy,Xy,nx,xC=Be(()=>{gt(),vt(),Tt(),Qy=e=>{if(!e||e.length<3)throw new Error("layerNorm requires at least 3 inputs.");let r=e[0],t=e[1],s=e[2];if(r.dataType!==t.dataType||r.dataType!==s.dataType)throw new Error("All inputs must have the same data type");if(r.dims.length!==3&&r.dims.length!==2)throw new Error("Input must be 2D or 3D");if(t.dims.length!==3&&t.dims.length!==2)throw new Error("Skip must be 2D or 3D");let n=r.dims[r.dims.length-1],i=r.dims[r.dims.length-2];if(t.dims[t.dims.length-1]!==n)throw new Error("Skip must have the same hidden size as input");if(t.dims[t.dims.length-2]!==i)throw new Error("Skip must have the same sequence length as input");if(s.dims.length!==1)throw new Error("Gamma must be 1D");if(s.dims[s.dims.length-1]!==n)throw new Error("Gamma must have the same hidden size as input");if(e.length>3){let o=e[3];if(o.dims.length!==1)throw new Error("Beta must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Beta must have the same hidden size as input")}if(e.length>4){let o=e[4];if(o.dims.length!==1)throw new Error("Bias must be 1D");if(o.dims[o.dims.length-1]!==n)throw new Error("Bias must have the same hidden size as input")}},Xy=(e,r,t,s)=>{let n=r.simplified,i=e[0].dims,o=ye.size(i),a=i,l=o,c=i.slice(-1)[0],p=s?i.slice(0,-1).concat(1):[],d=!n&&e.length>3,u=e.length>4,_=s&&t>1,f=s&&t>2,w=t>3,I=64,M=ar(c),y=[{type:12,data:l},{type:12,data:M},{type:12,data:c},{type:1,data:r.epsilon}],$=T=>{let E=[{name:"output_size",type:"u32"},{name:"components",type:"u32"},{name:"hidden_size",type:"u32"},{name:"epsilon",type:"f32"}],x=[Pe("x",e[0].dataType,e[0].dims,M),Pe("skip",e[1].dataType,e[1].dims,M),Pe("gamma",e[2].dataType,e[2].dims,M)];d&&x.push(Pe("beta",e[3].dataType,e[3].dims,M)),u&&x.push(Pe("bias",e[4].dataType,e[4].dims,M)),x.push(ot("output",e[0].dataType,a,M)),_&&x.push(ot("mean_output",1,p)),f&&x.push(ot("inv_std_output",1,p)),w&&x.push(ot("input_skip_bias_sum",e[0].dataType,a,M));let S=kr(e[0].dataType),z=kr(1,M);return`

      ${T.registerUniforms(E).declareVariables(...x)}
      var<workgroup> sum_shared : array<${z}, ${I}>;
      var<workgroup> sum_squared_shared : array<${z}, ${I}>;

      ${T.mainStart([I,1,1])}
        let ix = local_id.x;
        let iy = global_id.x / ${I};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${I};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${I-1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${u?"bias[offset1d + i]":S+"(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${w?"input_skip_bias_sum[offset + i] = value;":""}
          output[offset + i] = value;
          let f32_value = ${fi(S,M,"value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${I};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${pn("sum",M)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${pn("square_sum",M)} / f32(uniforms.hidden_size) ${n?"":"- mean * mean"} + uniforms.epsilon);
        ${_?"mean_output[global_idx] = mean;":""}
        ${f?"inv_std_output[global_idx] = inv_std_dev;":""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${n?"":`- ${S}(mean)`}) *
            ${S}(inv_std_dev) * gamma[offset1d + i]
            ${d?"+ beta[offset1d + i]":""};
        }
      }`},v=[{dims:a,dataType:e[0].dataType}];return t>1&&v.push({dims:p,dataType:1}),t>2&&v.push({dims:p,dataType:1}),t>3&&v.push({dims:i,dataType:e[0].dataType}),{name:"SkipLayerNormalization",shaderCache:{hint:`${M};${_};${f};${w}`,inputDependencies:e.map((T,E)=>"type")},getShaderSource:$,getRunData:()=>({outputs:v,dispatchGroup:{x:Math.ceil(l/c)},programUniforms:y})}},nx=(e,r)=>{Qy(e.inputs);let t=[0];e.outputCount>1&&t.push(-3),e.outputCount>2&&t.push(-3),e.outputCount>3&&t.push(3),e.compute(Xy(e.inputs,r,e.outputCount,!1),{outputs:t})}}),Yy,ro,Jy,fu,Zy,e0,ix,ox,TC=Be(()=>{gt(),vt(),cr(),Tt(),Yy=(e,r)=>{if(!e||e.length<1)throw new Error("too few inputs");if(r.axes.length!==0){if(r.axes.length!==r.starts.length||r.axes.length!==r.ends.length)throw new Error("axes, starts and ends must have the same length")}else if(r.starts.length!==r.ends.length)throw new Error("starts and ends must have the same length");e.slice(1).forEach((t,s)=>{if(e[s+1].dataType!==6&&e[s+1].dataType!==7)throw new Error(`Input ${s} must be an array of int32 or int64`)})},ro=(e,r)=>{let t=[];if(e.length>r)if(e[r].dataType===7)e[r].getBigInt64Array().forEach(s=>t.push(Number(s)));else if(e[r].dataType===6)e[r].getInt32Array().forEach(s=>t.push(Number(s)));else throw new Error(`Input ${r} must be an array of int32 or int64`);return t},Jy=(e,r)=>{if(e.length>1){let t=ro(e,1),s=ro(e,2),n=ro(e,3);return n.length===0&&(n=[...Array(e[0].dims.length).keys()]),Bt({starts:t,ends:s,axes:n})}else return r},fu=(e,r,t,s,n)=>{let i=e;return e<0&&(i+=t[s[r]]),n[r]<0?Math.max(0,Math.min(i,t[s[r]]-1)):Math.max(0,Math.min(i,t[s[r]]))},Zy=(e,r,t)=>`fn calculateInputIndices(output_indices: ${r.type.indices}) -> ${e.type.indices} {
          var input_indices: ${e.type.indices};
          var carry = 0u;
          for (var i = ${t.length}; i >= 0; i--) {
            let input_shape_i = ${at("uniforms.input_shape","i",t.length)};
            let steps_i = ${at("uniforms.steps","i",t.length)};
            let signs_i = ${at("uniforms.signs","i",t.length)};
            let starts_i = ${at("uniforms.starts","i",t.length)};
            var output_index = ${r.indicesGet("output_indices","i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${e.indicesSet("input_indices","i","input_index")};
          }
          return input_indices;
      }`,e0=(e,r)=>{let t=e[0].dims,s=ye.size(t),n=r.axes.length>0?ye.normalizeAxes(r.axes,t.length):[...Array(t.length).keys()],i=ro(e,4);i.forEach(M=>M!==0||(()=>{throw new Error("step cannot be 0")})),i.length===0&&(i=Array(n.length).fill(1));let o=r.starts.map((M,y)=>fu(M,y,t,n,i)),a=r.ends.map((M,y)=>fu(M,y,t,n,i));if(n.length!==o.length||n.length!==a.length)throw new Error("start, ends and axes should have the same number of elements");if(n.length!==t.length)for(let M=0;M<t.length;++M)n.includes(M)||(o.splice(M,0,0),a.splice(M,0,t[M]),i.splice(M,0,1));let l=i.map(M=>Math.sign(M));i.forEach((M,y,$)=>{if(M<0){let v=(a[y]-o[y])/M,T=o[y],E=T+v*i[y];o[y]=E,a[y]=T,$[y]=-M}});let c=t.slice(0);n.forEach((M,y)=>{c[M]=Math.ceil((a[M]-o[M])/i[M])});let p={dims:c,dataType:e[0].dataType},d=ot("output",e[0].dataType,c.length),u=Pe("input",e[0].dataType,e[0].dims.length),_=ye.size(c),f=[{name:"outputSize",type:"u32"},{name:"starts",type:"u32",length:o.length},{name:"signs",type:"i32",length:l.length},{name:"steps",type:"u32",length:i.length}],w=[{type:12,data:_},{type:12,data:o},{type:6,data:l},{type:12,data:i},...ct(e[0].dims,c)],I=M=>`
      ${M.registerUniforms(f).declareVariables(u,d)}
        ${Zy(u,d,t)}
        ${M.mainStart()}
          ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx",u.getByIndices("input_indices"))}
      }`;return{name:"Slice",shaderCache:{hint:`${l.length}_${o.length}_${i.length}`,inputDependencies:["rank"]},getShaderSource:I,getRunData:()=>({outputs:[p],dispatchGroup:{x:Math.ceil(s/64)},programUniforms:w})}},ix=(e,r)=>{Yy(e.inputs,r);let t=Jy(e.inputs,r);e.compute(e0(e.inputs,t),{inputs:[0]})},ox=e=>{let r=e.starts,t=e.ends,s=e.axes;return Bt({starts:r,ends:t,axes:s})}}),t0,r0,ax,lx,EC=Be(()=>{gt(),vt(),cr(),hn(),Tt(),t0=e=>{if(!e||e.length!==1)throw new Error("Softmax op requires 1 input.")},r0=(e,r)=>{let t=e.inputs[0],s=t.dims,n=ye.size(s),i=s.length,o=ye.normalizeAxis(r.axis,i),a=o<s.length-1,l,c=[];a?(c=Array.from({length:i},(x,S)=>S),c[o]=i-1,c[i-1]=o,l=e.compute(es(t,c),{inputs:[t],outputs:[-1]})[0]):l=t;let p=l.dims,d=p[i-1],u=n/d,_=ar(d),f=d/_,w=64;u===1&&(w=256);let I=(x,S)=>S===4?`max(max(${x}.x, ${x}.y), max(${x}.z, ${x}.w))`:S===2?`max(${x}.x, ${x}.y)`:S===3?`max(max(${x}.x, ${x}.y), ${x}.z)`:x,M=Pe("x",l.dataType,l.dims,_),y=ot("result",l.dataType,l.dims,_),$=M.type.value,v=kr(l.dataType)==="f32"?`var threadMax = ${$}(-3.402823e+38f);`:`var threadMax = ${$}(-65504.0h);`,T=x=>`
      var<workgroup> rowMaxShared : ${$};
      var<workgroup> rowSumShared : ${$};
      var<workgroup> threadShared : array<${$}, ${w}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${$} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${$}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${x.registerUniform("packedCols","i32").declareVariables(M,y)}
      ${x.mainStart(w)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${w};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${v}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${$}(${I("threadShared[0]",_)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${$}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${$}(${pn("threadShared[0]",_)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`,E=e.compute({name:"Softmax",shaderCache:{hint:`${_};${w}`,inputDependencies:["type"]},getRunData:()=>({outputs:[{dims:p,dataType:l.dataType}],dispatchGroup:{x:u},programUniforms:[{type:6,data:f}]}),getShaderSource:T},{inputs:[l],outputs:[a?-1:0]})[0];a&&e.compute(es(E,c),{inputs:[E]})},ax=(e,r)=>{t0(e.inputs),r0(e,r)},lx=e=>Bt({axis:e.axis})}),_u,s0,n0,i0,cx,PC=Be(()=>{gt(),vt(),Tt(),_u=e=>Array.from(e.getBigInt64Array(),Number),s0=e=>{if(!e||e.length!==2)throw new Error("Tile requires 2 inputs.");if(e[0].dataType!==1&&e[0].dataType!==10&&e[0].dataType!==6&&e[0].dataType!==12)throw new Error("Tile only support float, float16, int32, and uint32 data types");if(e[1].dataType!==7)throw new Error("Tile `repeats` input should be of int64 data type");if(e[1].dims.length!==1)throw new Error("Tile `repeats` input should be 1-D");if(_u(e[1]).length!==e[0].dims.length)throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor")},n0=(e,r)=>{let t=[];for(let s=0;s<e.length;++s)t.push(e[s]*r[s]);return t},i0=(e,r)=>{let t=e[0].dims,s=r??_u(e[1]),n=n0(t,s),i=ye.size(n),o=e[0].dataType,a=Pe("input",o,t.length),l=ot("output",o,n.length),c=p=>`
      const inputShape = ${a.indices(...t)};
      ${p.registerUniform("output_size","u32").declareVariables(a,l)}
      ${p.mainStart()}
      ${p.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${a.type.indices};
      for (var i = 0; i < ${t.length}; i++) {
        let input_dim_i = ${a.indicesGet("uniforms.input_shape","i")};
        let input_dim_value = ${l.indicesGet("output_indices","i")}  % input_dim_i;

        ${a.indicesSet("input_indices","i","input_dim_value")}
      }
      ${l.setByOffset("global_idx",a.getByIndices("input_indices"))}
    }`;return{name:"Tile",shaderCache:{hint:`${s}`,inputDependencies:["rank"]},getRunData:()=>({outputs:[{dims:n,dataType:e[0].dataType}],dispatchGroup:{x:Math.ceil(i/64)},programUniforms:[{type:12,data:i},...ct(e[0].dims,n)]}),getShaderSource:c}},cx=e=>{s0(e.inputs),e.compute(i0(e.inputs),{inputs:[0]})}}),o0,a0,ux,CC=Be(()=>{gt(),vt(),Tt(),o0=(e,r,t,s,n)=>{let i=ot("output_data",n,t.length,4),o=Pe("a_data",r[1].dataType,r[1].dims.length,4),a=Pe("b_data",r[2].dataType,r[2].dims.length,4),l=Pe("c_data",r[0].dataType,r[0].dims.length,4),c,p=(d,u,_)=>`select(${u}, ${d}, ${_})`;if(!s)c=i.setByOffset("global_idx",p(o.getByOffset("global_idx"),a.getByOffset("global_idx"),l.getByOffset("global_idx")));else{let d=(u,_,f="")=>{let w=`a_data[index_a${_}][component_a${_}]`,I=`b_data[index_b${_}][component_b${_}]`,M=`bool(c_data[index_c${_}] & (0xffu << (component_c${_} * 8)))`;return`
            let output_indices${_} = ${i.offsetToIndices(`global_idx * 4u + ${_}u`)};
            let offset_a${_} = ${o.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let offset_b${_} = ${a.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let offset_c${_} = ${l.broadcastedIndicesToOffset(`output_indices${_}`,i)};
            let index_a${_} = offset_a${_} / 4u;
            let index_b${_} = offset_b${_} / 4u;
            let index_c${_} = offset_c${_} / 4u;
            let component_a${_} = offset_a${_} % 4u;
            let component_b${_} = offset_b${_} % 4u;
            let component_c${_} = offset_c${_} % 4u;
            ${u}[${_}] = ${f}(${p(w,I,M)});
          `};n===9?c=`
            var data = vec4<u32>(0);
            ${d("data",0,"u32")}
            ${d("data",1,"u32")}
            ${d("data",2,"u32")}
            ${d("data",3,"u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));`:c=`
            ${d("output_data[global_idx]",0)}
            ${d("output_data[global_idx]",1)}
            ${d("output_data[global_idx]",2)}
            ${d("output_data[global_idx]",3)}
          `}return`
        ${e.registerUniform("vec_size","u32").declareVariables(l,o,a,i)}
        ${e.mainStart()}
        ${e.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${c}
      }`},a0=e=>{let r=e[1].dims,t=e[2].dims,s=e[0].dims,n=e[1].dataType,i=!(ye.areEqual(r,t)&&ye.areEqual(t,s)),o=r,a=ye.size(r);if(i){let c=yi.calcShape(yi.calcShape(r,t,!1),s,!1);if(!c)throw new Error("Can't perform where op on the given tensors");o=c,a=ye.size(o)}let l=Math.ceil(a/4);return{name:"Where",shaderCache:{inputDependencies:["rank","rank","rank"]},getShaderSource:c=>o0(c,e,o,i,n),getRunData:()=>({outputs:[{dims:o,dataType:n}],dispatchGroup:{x:Math.ceil(a/64/4)},programUniforms:[{type:12,data:l},...ct(s,r,t,o)]})}},ux=e=>{e.compute(a0(e.inputs))}}),dx,SC=Be(()=>{V2(),fd(),U2(),W2(),G2(),K2(),q2(),J2(),eC(),tC(),rC(),sC(),nC(),iC(),oC(),aC(),lC(),cC(),uC(),dC(),pC(),hC(),mC(),fC(),_C(),kv(),gC(),wC(),yC(),bC(),MC(),md(),vC(),Ov(),xC(),TC(),EC(),Fv(),PC(),hn(),_d(),CC(),dx=new Map([["Abs",[nM]],["Acos",[iM]],["Acosh",[oM]],["Add",[NM]],["ArgMax",[eM,zu]],["ArgMin",[Zb,zu]],["Asin",[aM]],["Asinh",[lM]],["Atan",[cM]],["Atanh",[uM]],["Attention",[tM]],["AveragePool",[Wv,Uv]],["BatchNormalization",[rM]],["BiasAdd",[sM]],["BiasSplitGelu",[RM]],["Cast",[pM,dM]],["Ceil",[mM]],["Clip",[hM]],["Concat",[XM,YM]],["Conv",[Uu,Vu]],["ConvTranspose",[av,ov]],["Cos",[fM]],["Cosh",[_M]],["CumSum",[lv,cv]],["DepthToSpace",[uv,dv]],["DequantizeLinear",[Yv,Jv]],["Div",[jM]],["Einsum",[pv,hv]],["Elu",[gM,uo]],["Equal",[VM]],["Erf",[wM]],["Exp",[yM]],["Expand",[mv]],["FastGelu",[fv]],["Floor",[bM]],["FusedConv",[Uu,Vu]],["Gather",[gv,_v]],["GatherElements",[xv,vv]],["GatherBlockQuantized",[bv,Mv]],["GatherND",[wv,yv]],["Gelu",[MM]],["Gemm",[Ev,Tv]],["GlobalAveragePool",[Kv,Gv]],["GlobalMaxPool",[Xv,Qv]],["Greater",[KM]],["GreaterOrEqual",[HM]],["GridSample",[Pv,Cv]],["GroupQueryAttention",[Lv]],["HardSigmoid",[$M,SM]],["InstanceNormalization",[zv]],["LayerNormalization",[Bv]],["LeakyRelu",[vM,uo]],["Less",[qM]],["LessOrEqual",[QM]],["Log",[zM]],["MatMul",[Rv]],["MatMulNBits",[Nv,jv]],["MaxPool",[qv,Hv]],["Mul",[UM]],["MultiHeadAttention",[$v,Sv]],["Neg",[TM]],["Not",[xM]],["Pad",[Vv]],["Pow",[WM]],["QuickGelu",[BM,uo]],["Range",[Zv]],["Reciprocal",[EM]],["ReduceMin",[Hb]],["ReduceMean",[Ub]],["ReduceMax",[qb]],["ReduceSum",[Xb]],["ReduceProd",[Qb]],["ReduceL1",[Wb]],["ReduceL2",[Gb]],["ReduceLogSum",[Jb]],["ReduceLogSumExp",[Kb]],["ReduceSumSquare",[Yb]],["Relu",[PM]],["Resize",[rx,sx]],["RotaryEmbedding",[Dv]],["ScatterND",[tx,ex]],["Sigmoid",[CM]],["Sin",[kM]],["Sinh",[IM]],["Slice",[ix,ox]],["SkipLayerNormalization",[nx]],["Split",[Iv,Av]],["Sqrt",[AM]],["Softmax",[ax,lx]],["Sub",[GM]],["Tan",[FM]],["Tanh",[DM]],["ThresholdedRelu",[LM,uo]],["Tile",[cx]],["Transpose",[Ib,Ab]],["Where",[ux]]])}),px,$C=Be(()=>{$s(),Ys(),Tt(),px=class{constructor(e){this.backend=e,this.repo=new Map,this.attributesBound=!1}getArtifact(e){return this.repo.get(e)}setArtifact(e,r){this.repo.set(e,r)}run(e,r,t,s,n){Cs(e.programInfo.name);let i=this.backend.device,o=this.backend.getComputePassEncoder();this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2);let a=[];for(let c of r)a.push({binding:a.length,resource:{buffer:c.buffer}});for(let c of t)a.push({binding:a.length,resource:{buffer:c.buffer}});n&&a.push({binding:a.length,resource:n});let l=i.createBindGroup({layout:e.computePipeline.getBindGroupLayout(0),entries:a,label:e.programInfo.name});if(this.backend.sessionStatus==="capturing"){let c={kernelId:this.backend.currentKernelId,computePipeline:e.computePipeline,bindGroup:l,dispatchGroup:s};this.backend.capturedCommandList.get(this.backend.currentSessionId).push(c)}o.setPipeline(e.computePipeline),o.setBindGroup(0,l),o.dispatchWorkgroups(...s),this.backend.writeTimestamp(this.backend.pendingDispatchNumber*2+1),this.backend.pendingDispatchNumber++,(this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber||this.backend.queryType==="at-passes")&&this.backend.endComputePass(),this.backend.pendingDispatchNumber>=this.backend.maxDispatchNumber&&this.backend.flush(),us(e.programInfo.name)}dispose(){}build(e,r){Cs(e.name);let t=this.backend.device,s=[];[{feature:"shader-f16",extension:"f16"},{feature:"subgroups",extension:"subgroups"}].forEach(c=>{t.features.has(c.feature)&&s.push(`enable ${c.extension};`)});let n=kb(r,this.backend.device.limits),i=e.getShaderSource(n),o=`${s.join(`
`)}
${n.additionalImplementations}
${i}`,a=t.createShaderModule({code:o,label:e.name});Dt("verbose",()=>`[WebGPU] ${e.name} shader code: ${o}`);let l=t.createComputePipeline({compute:{module:a,entryPoint:"main"},layout:"auto",label:e.name});return us(e.name),{programInfo:e,computePipeline:l,uniformVariablesInfo:n.variablesInfo}}normalizeDispatchGroupSize(e){let r=typeof e=="number"?e:e.x,t=typeof e=="number"?1:e.y||1,s=typeof e=="number"?1:e.z||1,n=this.backend.device.limits.maxComputeWorkgroupsPerDimension;if(r<=n&&t<=n&&s<=n)return[r,t,s];let i=r*t*s,o=Math.ceil(Math.sqrt(i));if(o>n){if(o=Math.ceil(Math.cbrt(i)),o>n)throw new Error("Total dispatch size exceeds WebGPU maximum.");return[o,o,o]}else return[o,o,1]}}}),hx={};Mi(hx,{WebGpuBackend:()=>mx});var l0,c0,u0,mx,kC=Be(()=>{$s(),gt(),Ys(),Eb(),N2(),SC(),$C(),l0=(e,r)=>{if(r.length!==e.length)throw new Error(`inputDependencies length ${r.length} is not equal to inputTensors length ${e.length}.`);let t=[];for(let s=0;s<e.length;++s){let n=e[s].dataType;switch(r[s]){case"none":{t.push("");break}case"type":{t.push(`${n}`);break}case"rank":{let i=e[s].dims.length;t.push(`${n};${i}`);break}case"dims":{let i=e[s].dims.join(",");t.push(`${n};${i}`);break}default:throw new Error(`unsupported input dependency: ${r[s]}`)}}return t.join("|")},c0=(e,r,t)=>{let s=e.name;return e.shaderCache?.hint&&(s+="["+e.shaderCache.hint+"]"),s+=":"+t+`:${l0(r,e.shaderCache?.inputDependencies??new Array(r.length).fill("dims"))}`,s},u0=class{constructor(e){e&&(this.architecture=e.architecture,this.vendor=e.vendor)}isArchitecture(e){return this.architecture===e}isVendor(e){return this.vendor===e}},mx=class{constructor(){this.currentSessionId=null,this.currentKernelId=null,this.commandEncoder=null,this.computePassEncoder=null,this.maxDispatchNumber=16,this.pendingDispatchNumber=0,this.pendingKernels=[],this.pendingQueries=new Map,this.sessionStatus="default",this.capturedCommandList=new Map,this.capturedPendingKernels=new Map,this.sessionExternalDataMapping=new Map}get currentKernelCustomData(){if(this.currentKernelId===null)throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");let e=this.kernelCustomData.get(this.currentKernelId);return e||(e={},this.kernelCustomData.set(this.currentKernelId,e)),e}async initialize(e,r){this.env=e;let t=[],s={requiredLimits:{maxComputeWorkgroupStorageSize:r.limits.maxComputeWorkgroupStorageSize,maxComputeWorkgroupsPerDimension:r.limits.maxComputeWorkgroupsPerDimension,maxStorageBufferBindingSize:r.limits.maxStorageBufferBindingSize,maxBufferSize:r.limits.maxBufferSize,maxComputeInvocationsPerWorkgroup:r.limits.maxComputeInvocationsPerWorkgroup,maxComputeWorkgroupSizeX:r.limits.maxComputeWorkgroupSizeX,maxComputeWorkgroupSizeY:r.limits.maxComputeWorkgroupSizeY,maxComputeWorkgroupSizeZ:r.limits.maxComputeWorkgroupSizeZ},requiredFeatures:t},n=i=>r.features.has(i)&&t.push(i)&&!0;n("chromium-experimental-timestamp-query-inside-passes")||n("timestamp-query"),n("shader-f16"),n("subgroups"),this.device=await r.requestDevice(s),this.adapterInfo=new u0(r.info||await r.requestAdapterInfo()),this.gpuDataManager=Sb(this),this.programManager=new px(this),this.kernels=new Map,this.kernelPersistentData=new Map,this.kernelCustomData=new Map,ud(e.logLevel,!!e.debug),this.device.onuncapturederror=i=>{i.error instanceof GPUValidationError&&console.error(`An uncaught WebGPU validation error was raised: ${i.error.message}`)},Object.defineProperty(this.env.webgpu,"device",{value:this.device,writable:!1,enumerable:!0,configurable:!1}),Object.defineProperty(this.env.webgpu,"adapter",{value:r,writable:!1,enumerable:!0,configurable:!1}),this.setQueryType()}dispose(){typeof this.querySet<"u"&&this.querySet.destroy(),this.gpuDataManager.dispose()}getCommandEncoder(){return this.commandEncoder||(this.commandEncoder=this.device.createCommandEncoder()),this.commandEncoder}getComputePassEncoder(){if(!this.computePassEncoder){let e=this.getCommandEncoder(),r={};this.queryType==="at-passes"&&(r.timestampWrites={querySet:this.querySet,beginningOfPassWriteIndex:this.pendingDispatchNumber*2,endOfPassWriteIndex:this.pendingDispatchNumber*2+1}),this.computePassEncoder=e.beginComputePass(r)}return this.computePassEncoder}endComputePass(){this.computePassEncoder&&(this.computePassEncoder.end(),this.computePassEncoder=null)}flush(){if(!this.commandEncoder)return;Cs(),this.endComputePass();let e;this.queryType!=="none"&&(this.commandEncoder.resolveQuerySet(this.querySet,0,this.pendingDispatchNumber*2,this.queryResolveBuffer,0),e=this.device.createBuffer({size:this.pendingDispatchNumber*2*8,usage:GPUBufferUsage.MAP_READ|GPUBufferUsage.COPY_DST}),this.pendingQueries.set(e,this.pendingKernels),this.pendingKernels=[],this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer,0,e,0,this.pendingDispatchNumber*2*8)),this.device.queue.submit([this.commandEncoder.finish()]),this.gpuDataManager.refreshPendingBuffers(),this.commandEncoder=null,this.pendingDispatchNumber=0,this.queryType!=="none"&&e.mapAsync(GPUMapMode.READ).then(()=>{let r=new BigUint64Array(e.getMappedRange()),t=this.pendingQueries.get(e);for(let s=0;s<r.length/2;s++){let n=t[s],i=n.kernelId,o=this.kernels.get(i),a=o.kernelType,l=o.kernelName,c=n.programName,p=n.inputTensorViews,d=n.outputTensorViews,u=r[s*2],_=r[s*2+1];typeof this.queryTimeBase>"u"&&(this.queryTimeBase=u);let f=Number(u-this.queryTimeBase),w=Number(_-this.queryTimeBase);if(!Number.isSafeInteger(f)||!Number.isSafeInteger(w))throw new RangeError("incorrect timestamp range");if(this.env.webgpu.profiling?.ondata)this.env.webgpu.profiling.ondata({version:1,inputsMetadata:p.map(I=>({dims:I.dims,dataType:Qs(I.dataType)})),outputsMetadata:d.map(I=>({dims:I.dims,dataType:Qs(I.dataType)})),kernelId:i,kernelType:a,kernelName:l,programName:c,startTime:f,endTime:w});else{let I="";p.forEach((y,$)=>{I+=`input[${$}]: [${y.dims}] | ${Qs(y.dataType)}, `});let M="";d.forEach((y,$)=>{M+=`output[${$}]: [${y.dims}] | ${Qs(y.dataType)}, `}),console.log(`[profiling] kernel "${i}|${a}|${l}|${c}" ${I}${M}execution time: ${w-f} ns`)}yo("GPU",`${c}::${u}::${_}`)}e.unmap(),this.pendingQueries.delete(e)}),us()}run(e,r,t,s,n,i){Cs(e.name);let o=[];for(let y=0;y<r.length;++y){let $=r[y].data;if($===0)continue;let v=this.gpuDataManager.get($);if(!v)throw new Error(`no GPU data for input: ${$}`);o.push(v)}let{outputs:a,dispatchGroup:l,programUniforms:c}=e.getRunData(r),p=t.length===0?a.map((y,$)=>$):t;if(p.length!==a.length)throw new Error(`Output size ${p.length} must be equal to ${a.length}.`);let d=[],u=[];for(let y=0;y<a.length;++y){if(!Number.isInteger(p[y])||p[y]<-3||p[y]>=i)throw new Error(`Invalid output index: ${p[y]}`);if(p[y]===-3)continue;let $=p[y]===-1,v=p[y]===-2,T=$||v?n(a[y].dataType,a[y].dims):s(p[y],a[y].dataType,a[y].dims);if(d.push(T),T.data===0)continue;let E=this.gpuDataManager.get(T.data);if(!E)throw new Error(`no GPU data for output: ${T.data}`);if($&&this.temporaryData.push(E),v){let x=this.kernelPersistentData.get(this.currentKernelId);x||(x=[],this.kernelPersistentData.set(this.currentKernelId,x)),x.push(E)}u.push(E)}if(o.length!==r.length||u.length!==d.length){if(u.length===0)return us(e.name),d;throw new Error(`Program ${e.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`)}let _;if(c){let y=0,$=[];c.forEach(x=>{let S=typeof x.data=="number"?[x.data]:x.data;if(S.length===0)return;let z=x.type===10?2:4,D,K;x.type===10?(K=S.length>4?16:S.length>2?8:S.length*z,D=S.length>4?16:z*S.length):(K=S.length<=2?S.length*z:16,D=16),y=Math.ceil(y/K)*K,$.push(y);let q=x.type===10?8:4;y+=S.length>4?Math.ceil(S.length/q)*D:S.length*z});let v=16;y=Math.ceil(y/v)*v;let T=new ArrayBuffer(y);c.forEach((x,S)=>{let z=$[S],D=typeof x.data=="number"?[x.data]:x.data;if(x.type===6)new Int32Array(T,z,D.length).set(D);else if(x.type===12)new Uint32Array(T,z,D.length).set(D);else if(x.type===10)new Uint16Array(T,z,D.length).set(D);else if(x.type===1)new Float32Array(T,z,D.length).set(D);else throw new Error(`Unsupported uniform type: ${Qs(x.type)}`)});let E=this.gpuDataManager.create(y,GPUBufferUsage.COPY_DST|GPUBufferUsage.UNIFORM);this.device.queue.writeBuffer(E.buffer,0,T,0,y),this.gpuDataManager.release(E.id),_={offset:0,size:y,buffer:E.buffer}}let f=this.programManager.normalizeDispatchGroupSize(l),w=f[1]===1&&f[2]===1,I=c0(e,r,w),M=this.programManager.getArtifact(I);if(M||(M=this.programManager.build(e,f),this.programManager.setArtifact(I,M),Dt("info",()=>`[artifact] key: ${I}, programName: ${e.name}`)),c&&M.uniformVariablesInfo){if(c.length!==M.uniformVariablesInfo.length)throw new Error(`Uniform variables count mismatch: expect ${M.uniformVariablesInfo.length}, got ${c.length} in program "${M.programInfo.name}".`);for(let y=0;y<c.length;y++){let $=c[y],v=$.type,T=typeof $.data=="number"?1:$.data.length,[E,x]=M.uniformVariablesInfo[y];if(v!==E||T!==x)throw new Error(`Uniform variable ${y} mismatch: expect type ${E} with size ${x}, got type ${v} with size ${T} in program "${M.programInfo.name}".`)}}if(Dt("info",()=>`[ProgramManager] run "${e.name}" (key=${I}) with ${f[0]}x${f[1]}x${f[2]}`),this.queryType!=="none"||this.sessionStatus==="capturing"){let y={kernelId:this.currentKernelId,programName:M.programInfo.name,inputTensorViews:r,outputTensorViews:d};this.pendingKernels.push(y),this.sessionStatus==="capturing"&&this.capturedPendingKernels.get(this.currentSessionId).push(y)}return this.programManager.run(M,o,u,f,_),us(e.name),d}upload(e,r){this.gpuDataManager.upload(e,r)}memcpy(e,r){this.gpuDataManager.memcpy(e,r)}async download(e,r){await this.gpuDataManager.download(e,r)}alloc(e){return this.gpuDataManager.create(e).id}free(e){return this.gpuDataManager.release(e)}createKernel(e,r,t,s){let n=dx.get(e);if(!n)throw new Error(`kernel not implemented: ${e}`);let i={kernelType:e,kernelName:s,kernelEntry:n[0],attributes:[n[1],t]};this.kernels.set(r,i)}releaseKernel(e){let r=this.kernelPersistentData.get(e);if(r){for(let t of r)this.gpuDataManager.release(t.id);this.kernelPersistentData.delete(e)}this.kernelCustomData.delete(e),this.kernels.delete(e)}computeKernel(e,r,t){let s=this.kernels.get(e);if(!s)throw new Error(`kernel not created: ${e}`);let n=s.kernelType,i=s.kernelName,o=s.kernelEntry,a=s.attributes;if(this.currentKernelId!==null)throw new Error(`kernel "[${n}] ${i}" is not allowed to be called recursively`);this.currentKernelId=e,a[0]&&(a[1]=a[0](a[1]),a[0]=void 0),Dt("info",()=>`[WebGPU] Start to run kernel "[${n}] ${i}"...`);let l=this.env.debug;this.temporaryData=[];try{return l&&this.device.pushErrorScope("validation"),o(r,a[1]),0}catch(c){return t.push(Promise.resolve(`[WebGPU] Kernel "[${n}] ${i}" failed. ${c}`)),1}finally{l&&t.push(this.device.popErrorScope().then(c=>c?`GPU validation error for kernel "[${n}] ${i}": ${c.message}`:null));for(let c of this.temporaryData)this.gpuDataManager.release(c.id);this.temporaryData=[],this.currentKernelId=null}}registerBuffer(e,r,t,s){let n=this.sessionExternalDataMapping.get(e);n||(n=new Map,this.sessionExternalDataMapping.set(e,n));let i=n.get(r),o=this.gpuDataManager.registerExternalBuffer(t,s,i);return n.set(r,[o,t]),o}unregisterBuffers(e){let r=this.sessionExternalDataMapping.get(e);r&&(r.forEach(t=>this.gpuDataManager.unregisterExternalBuffer(t[0])),this.sessionExternalDataMapping.delete(e))}getBuffer(e){let r=this.gpuDataManager.get(e);if(!r)throw new Error(`no GPU data for buffer: ${e}`);return r.buffer}createDownloader(e,r,t){return async()=>{let s=await Du(this,e,r);return dd(s.buffer,t)}}writeTimestamp(e){this.queryType==="inside-passes"&&this.computePassEncoder.writeTimestamp(this.querySet,e)}setQueryType(){this.queryType="none",(this.env.webgpu.profiling?.mode==="default"||(typeof this.env.trace>"u"?this.env.wasm.trace:this.env.trace))&&(this.device.features.has("chromium-experimental-timestamp-query-inside-passes")?this.queryType="inside-passes":this.device.features.has("timestamp-query")&&(this.queryType="at-passes"),this.queryType!=="none"&&typeof this.querySet>"u"&&(this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxDispatchNumber*2}),this.queryResolveBuffer=this.device.createBuffer({size:this.maxDispatchNumber*2*8,usage:GPUBufferUsage.COPY_SRC|GPUBufferUsage.QUERY_RESOLVE})))}captureBegin(){Dt("info","captureBegin"),this.capturedCommandList.get(this.currentSessionId)||this.capturedCommandList.set(this.currentSessionId,[]),this.capturedPendingKernels.get(this.currentSessionId)||this.capturedPendingKernels.set(this.currentSessionId,[]),this.flush(),this.sessionStatus="capturing"}captureEnd(){Dt("info","captureEnd"),this.flush(),this.sessionStatus="default"}replay(){Dt("info","replay"),this.sessionStatus="replaying";let e=this.capturedCommandList.get(this.currentSessionId),r=this.capturedPendingKernels.get(this.currentSessionId),t=e.length;this.pendingKernels=[];for(let s=0;s<t;s++){let n=this.getComputePassEncoder(),i=e[s];this.writeTimestamp(this.pendingDispatchNumber*2),n.setPipeline(i.computePipeline),n.setBindGroup(0,i.bindGroup),n.dispatchWorkgroups(...i.dispatchGroup),this.writeTimestamp(this.pendingDispatchNumber*2+1),this.pendingDispatchNumber++,this.queryType!=="none"&&this.pendingKernels.push(r[s]),(this.pendingDispatchNumber>=this.maxDispatchNumber||this.queryType==="at-passes")&&this.endComputePass(),this.pendingDispatchNumber>=this.maxDispatchNumber&&this.flush()}this.flush(),this.sessionStatus="default"}onCreateSession(){this.gpuDataManager.onCreateSession()}onReleaseSession(e){this.unregisterBuffers(e),this.capturedCommandList.has(e)&&this.capturedCommandList.delete(e),this.capturedPendingKernels.has(e)&&this.capturedPendingKernels.delete(e),this.gpuDataManager.onReleaseSession(e)}onRunStart(e){this.currentSessionId=e,this.setQueryType()}}}),fx={};Mi(fx,{init:()=>_x});var Ca,d0,_x,IC=Be(()=>{gt(),Ys(),vt(),R2(),Ca=class gx{constructor(r,t,s,n){this.module=r,this.dataType=t,this.data=s,this.dims=n}getFloat32Array(){if(this.dataType!==1)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Float32Array:new Float32Array(this.module.HEAP8.buffer,this.data,r)}getBigInt64Array(){if(this.dataType!==7)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new BigInt64Array:new BigInt64Array(this.module.HEAP8.buffer,this.data,r)}getInt32Array(){if(this.dataType!==6)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Int32Array:new Int32Array(this.module.HEAP8.buffer,this.data,r)}getUint16Array(){if(this.dataType!==10&&this.dataType!==4)throw new Error("Invalid data type");let r=ye.size(this.dims);return r===0?new Uint16Array:new Uint16Array(this.module.HEAP8.buffer,this.data,r)}reshape(r){if(ye.size(r)!==ye.size(this.dims))throw new Error("Invalid new shape");return new gx(this.module,this.dataType,this.data,r)}},d0=class{constructor(e,r,t){this.module=e,this.backend=r,this.customDataOffset=0,this.customDataSize=0,this.adapterInfo=r.adapterInfo;let s=e.PTR_SIZE,n=t/e.PTR_SIZE,i=s===4?"i32":"i64";this.opKernelContext=Number(e.getValue(s*n++,i));let o=Number(e.getValue(s*n++,i));this.outputCount=Number(e.getValue(s*n++,i)),this.customDataOffset=Number(e.getValue(s*n++,"*")),this.customDataSize=Number(e.getValue(s*n++,i));let a=[];for(let l=0;l<o;l++){let c=Number(e.getValue(s*n++,i)),p=Number(e.getValue(s*n++,"*")),d=Number(e.getValue(s*n++,i)),u=[];for(let _=0;_<d;_++)u.push(Number(e.getValue(s*n++,i)));a.push(new Ca(e,c,p,u))}this.inputs=a}get kernelCustomData(){return this.backend.currentKernelCustomData}get customDataBuffer(){return this.module.HEAPU8.subarray(this.customDataOffset,this.customDataOffset+this.customDataSize)}compute(e,r){let t=r?.inputs?.map(o=>typeof o=="number"?this.inputs[o]:o)??this.inputs,s=r?.outputs??[],n=(o,a,l)=>new Ca(this.module,a,this.output(o,l),l),i=(o,a)=>{let l=On(o,a);if(!l)throw new Error(`Unsupported data type: ${o}`);let c=l>0?this.backend.gpuDataManager.create(l).id:0;return new Ca(this.module,o,c,a)};return this.backend.run(e,t,s,n,i,this.outputCount)}output(e,r){let t=this.module.stackSave();try{let s=this.module.PTR_SIZE,n=s===4?"i32":"i64",i=this.module.stackAlloc((1+r.length)*s);this.module.setValue(i,r.length,n);for(let o=0;o<r.length;o++)this.module.setValue(i+s*(o+1),r[o],n);return this.module._JsepOutput(this.opKernelContext,e,i)}catch(s){throw new Error(`Failed to generate kernel's output[${e}] with dims [${r}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${s}`)}finally{this.module.stackRestore(t)}}},_x=async(e,r,t,s)=>{let n=r.jsepInit;if(!n)throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");if(e==="webgpu"){let i=(kC(),wo(hx)).WebGpuBackend,o=new i;await o.initialize(t,s),n("webgpu",[o,a=>o.alloc(Number(a)),a=>o.free(a),(a,l,c,p=!1)=>{if(p)Dt("verbose",()=>`[WebGPU] jsepCopyGpuToGpu: src=${Number(a)}, dst=${Number(l)}, size=${Number(c)}`),o.memcpy(Number(a),Number(l));else{Dt("verbose",()=>`[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(a)}, gpuDataId=${Number(l)}, size=${Number(c)}`);let d=r.HEAPU8.subarray(Number(a>>>0),Number(a>>>0)+Number(c));o.upload(Number(l),d)}},async(a,l,c)=>{Dt("verbose",()=>`[WebGPU] jsepCopyGpuToCpu: gpuDataId=${a}, dataOffset=${l}, size=${c}`),await o.download(Number(a),()=>r.HEAPU8.subarray(Number(l)>>>0,Number(l+c)>>>0))},(a,l,c)=>o.createKernel(a,Number(l),c,r.UTF8ToString(r._JsepGetNodeName(Number(l)))),a=>o.releaseKernel(a),(a,l,c,p)=>{Dt("verbose",()=>`[WebGPU] jsepRun: sessionHandle=${c}, kernel=${a}, contextDataOffset=${l}`);let d=new d0(r,o,Number(l));return o.computeKernel(Number(a),d,p)},()=>o.captureBegin(),()=>o.captureEnd(),()=>o.replay()])}else{let i=new Cb(t);n("webnn",[i,()=>i.reserveTensorId(),o=>i.releaseTensorId(o),async(o,a,l,c,p)=>i.ensureTensor(o,a,l,c,p),(o,a)=>{i.uploadTensor(o,a)},async(o,a)=>i.downloadTensor(o,a)])}}}),p0,vd,xd,cn,h0,gu,Qa,Td,Ed,wu,Pd,Cd,Sd,wx=Be(()=>{L2(),z2(),gt(),Un(),id(),Mb(),p0=(e,r)=>{Qt()._OrtInit(e,r)!==0&&Ut("Can't initialize onnxruntime.")},vd=async e=>{p0(e.wasm.numThreads,Wa(e.logLevel))},xd=async(e,r)=>{Qt().asyncInit?.();{let t=(IC(),wo(fx)).init;if(r==="webgpu"){if(typeof navigator>"u"||!navigator.gpu)throw new Error("WebGPU is not supported in current environment");let s=e.webgpu.adapter;if(s){if(typeof s.limits!="object"||typeof s.features!="object"||typeof s.requestDevice!="function")throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.")}else{let n=e.webgpu.powerPreference;if(n!==void 0&&n!=="low-power"&&n!=="high-performance")throw new Error(`Invalid powerPreference setting: "${n}"`);let i=e.webgpu.forceFallbackAdapter;if(i!==void 0&&typeof i!="boolean")throw new Error(`Invalid forceFallbackAdapter setting: "${i}"`);if(s=await navigator.gpu.requestAdapter({powerPreference:n,forceFallbackAdapter:i}),!s)throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.')}await t("webgpu",Qt(),e,s)}if(r==="webnn"){if(typeof navigator>"u"||!navigator.ml)throw new Error("WebNN is not supported in current environment");await t("webnn",Qt(),e)}}},cn=new Map,h0=e=>{let r=Qt(),t=r.stackSave();try{let s=r.PTR_SIZE,n=r.stackAlloc(2*s);r._OrtGetInputOutputCount(e,n,n+s)!==0&&Ut("Can't get session input/output count.");let i=s===4?"i32":"i64";return[Number(r.getValue(n,i)),Number(r.getValue(n+s,i))]}finally{r.stackRestore(t)}},gu=(e,r)=>{let t=Qt(),s=t.stackSave(),n=0;try{let i=t.PTR_SIZE,o=t.stackAlloc(2*i);t._OrtGetInputOutputMetadata(e,r,o,o+i)!==0&&Ut("Can't get session input/output metadata.");let a=Number(t.getValue(o,"*"));n=Number(t.getValue(o+i,"*"));let l=t.HEAP32[n/4];if(l===0)return[a,0];let c=t.HEAPU32[n/4+1],p=[];for(let d=0;d<c;d++){let u=Number(t.getValue(n+8+d*i,"*"));p.push(u!==0?t.UTF8ToString(u):Number(t.getValue(n+8+(d+c)*i,"*")))}return[a,l,p]}finally{t.stackRestore(s),n!==0&&t._OrtFree(n)}},Qa=e=>{let r=Qt(),t=r._malloc(e.byteLength);if(t===0)throw new Error(`Can't create a session. failed to allocate a buffer of size ${e.byteLength}.`);return r.HEAPU8.set(e,t),[t,e.byteLength]},Td=async(e,r)=>{let t,s,n=Qt();Array.isArray(e)?[t,s]=e:e.buffer===n.HEAPU8.buffer?[t,s]=[e.byteOffset,e.byteLength]:[t,s]=Qa(e);let i=0,o=0,a=0,l=[],c=[],p=[];try{if([o,l]=await bb(r),r?.externalData&&n.mountExternalData){let v=[];for(let T of r.externalData){let E=typeof T=="string"?T:T.path;v.push(cd(typeof T=="string"?T:T.data).then(x=>{n.mountExternalData(E,x)}))}await Promise.all(v)}for(let v of r?.executionProviders??[])if((typeof v=="string"?v:v.name)==="webnn"){if(n.shouldTransferToMLTensor=!1,typeof v!="string"){let T=v,E=T?.context,x=T?.gpuDevice,S=T?.deviceType,z=T?.powerPreference;E?n.currentContext=E:x?n.currentContext=await n.webnnCreateMLContext(x):n.currentContext=await n.webnnCreateMLContext({deviceType:S,powerPreference:z})}else n.currentContext=await n.webnnCreateMLContext();break}i=await n._OrtCreateSession(t,s,o),n.webgpuOnCreateSession?.(i),i===0&&Ut("Can't create a session."),n.jsepOnCreateSession?.(),n.currentContext&&(n.webnnRegisterMLContext(i,n.currentContext),n.currentContext=void 0,n.shouldTransferToMLTensor=!0);let[d,u]=h0(i),_=!!r?.enableGraphCapture,f=[],w=[],I=[],M=[],y=[];for(let v=0;v<d;v++){let[T,E,x]=gu(i,v);T===0&&Ut("Can't get an input name."),c.push(T);let S=n.UTF8ToString(T);f.push(S),I.push(E===0?{name:S,isTensor:!1}:{name:S,isTensor:!0,type:Qs(E),shape:x})}for(let v=0;v<u;v++){let[T,E,x]=gu(i,v+d);T===0&&Ut("Can't get an output name."),p.push(T);let S=n.UTF8ToString(T);w.push(S),M.push(E===0?{name:S,isTensor:!1}:{name:S,isTensor:!0,type:Qs(E),shape:x});{if(_&&r?.preferredOutputLocation===void 0){y.push("gpu-buffer");continue}let z=typeof r?.preferredOutputLocation=="string"?r.preferredOutputLocation:r?.preferredOutputLocation?.[S]??"cpu";if(z!=="cpu"&&z!=="cpu-pinned"&&z!=="gpu-buffer"&&z!=="ml-tensor")throw new Error(`Not supported preferred output location: ${z}.`);if(_&&z!=="gpu-buffer")throw new Error(`Not supported preferred output location: ${z}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);y.push(z)}}let $=null;return y.some(v=>v==="gpu-buffer"||v==="ml-tensor")&&(a=n._OrtCreateBinding(i),a===0&&Ut("Can't create IO binding."),$={handle:a,outputPreferredLocations:y,outputPreferredLocationsEncoded:y.map(v=>Au(v))}),cn.set(i,[i,c,p,$,_,!1]),[i,f,w,I,M]}catch(d){throw c.forEach(u=>n._OrtFree(u)),p.forEach(u=>n._OrtFree(u)),a!==0&&n._OrtReleaseBinding(a)!==0&&Ut("Can't release IO binding."),i!==0&&n._OrtReleaseSession(i)!==0&&Ut("Can't release session."),d}finally{n._free(t),o!==0&&n._OrtReleaseSessionOptions(o)!==0&&Ut("Can't release session options."),l.forEach(d=>n._free(d)),n.unmountExternalData?.()}},Ed=e=>{let r=Qt(),t=cn.get(e);if(!t)throw new Error(`cannot release session. invalid session id: ${e}`);let[s,n,i,o,a]=t;o&&(a&&r._OrtClearBoundOutputs(o.handle)!==0&&Ut("Can't clear bound outputs."),r._OrtReleaseBinding(o.handle)!==0&&Ut("Can't release IO binding.")),r.jsepOnReleaseSession?.(e),r.webnnOnReleaseSession?.(e),r.webgpuOnReleaseSession?.(e),n.forEach(l=>r._OrtFree(l)),i.forEach(l=>r._OrtFree(l)),r._OrtReleaseSession(s)!==0&&Ut("Can't release session."),cn.delete(e)},wu=async(e,r,t,s,n,i,o=!1)=>{if(!e){r.push(0);return}let a=Qt(),l=a.PTR_SIZE,c=e[0],p=e[1],d=e[3],u=d,_,f;if(c==="string"&&(d==="gpu-buffer"||d==="ml-tensor"))throw new Error("String tensor is not supported on GPU.");if(o&&d!=="gpu-buffer")throw new Error(`External buffer must be provided for input/output index ${i} when enableGraphCapture is true.`);if(d==="gpu-buffer"){let M=e[2].gpuBuffer;f=On(hi(c),p);{let y=a.jsepRegisterBuffer;if(!y)throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');_=y(s,i,M,f)}}else if(d==="ml-tensor"){let M=e[2].mlTensor;f=On(hi(c),p);let y=a.webnnRegisterMLTensor;if(!y)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');_=y(s,M,hi(c),p)}else{let M=e[2];if(Array.isArray(M)){f=l*M.length,_=a._malloc(f),t.push(_);for(let y=0;y<M.length;y++){if(typeof M[y]!="string")throw new TypeError(`tensor data at index ${y} is not a string`);a.setValue(_+y*l,xs(M[y],t),"*")}}else{let y=a.webnnIsGraphInput;if(c!=="string"&&y){let $=a.UTF8ToString(n);if(y(s,$)){let v=hi(c);f=On(v,p),u="ml-tensor";let T=a.webnnCreateTemporaryTensor,E=a.webnnUploadTensor;if(!T||!E)throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');let x=await T(s,v,p);E(x,new Uint8Array(M.buffer,M.byteOffset,M.byteLength)),_=x}else f=M.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(M.buffer,M.byteOffset,f),_)}else f=M.byteLength,_=a._malloc(f),t.push(_),a.HEAPU8.set(new Uint8Array(M.buffer,M.byteOffset,f),_)}}let w=a.stackSave(),I=a.stackAlloc(4*p.length);try{p.forEach((y,$)=>a.setValue(I+$*l,y,l===4?"i32":"i64"));let M=a._OrtCreateTensor(hi(c),_,f,I,p.length,Au(u));M===0&&Ut(`Can't create tensor for input/output. session=${s}, index=${i}.`),r.push(M)}finally{a.stackRestore(w)}},Pd=async(e,r,t,s,n,i)=>{let o=Qt(),a=o.PTR_SIZE,l=cn.get(e);if(!l)throw new Error(`cannot run inference. invalid session id: ${e}`);let c=l[0],p=l[1],d=l[2],u=l[3],_=l[4],f=l[5],w=r.length,I=s.length,M=0,y=[],$=[],v=[],T=[],E=o.stackSave(),x=o.stackAlloc(w*a),S=o.stackAlloc(w*a),z=o.stackAlloc(I*a),D=o.stackAlloc(I*a);try{[M,y]=yb(i);for(let O=0;O<w;O++)await wu(t[O],$,T,e,p[r[O]],r[O],_);for(let O=0;O<I;O++)await wu(n[O],v,T,e,d[s[O]],w+s[O],_);for(let O=0;O<w;O++)o.setValue(x+O*a,$[O],"*"),o.setValue(S+O*a,p[r[O]],"*");for(let O=0;O<I;O++)o.setValue(z+O*a,v[O],"*"),o.setValue(D+O*a,d[s[O]],"*");if(u&&!f){let{handle:O,outputPreferredLocations:Z,outputPreferredLocationsEncoded:Q}=u;if(p.length!==w)throw new Error(`input count from feeds (${w}) is expected to be always equal to model's input count (${p.length}).`);for(let J=0;J<w;J++){let re=r[J];await o._OrtBindInput(O,p[re],$[J])!==0&&Ut(`Can't bind input[${J}] for session=${e}.`)}for(let J=0;J<I;J++){let re=s[J];n[J]?.[3]?o._OrtBindOutput(O,d[re],v[J],0)!==0&&Ut(`Can't bind pre-allocated output[${J}] for session=${e}.`):o._OrtBindOutput(O,d[re],0,Q[re])!==0&&Ut(`Can't bind output[${J}] to ${Z[J]} for session=${e}.`)}cn.set(e,[c,p,d,u,_,!0])}o.jsepOnRunStart?.(c),o.webnnOnRunStart?.(c);let K;u?K=await o._OrtRunWithBinding(c,u.handle,I,z,M):K=await o._OrtRun(c,S,x,w,D,I,z,M),K!==0&&Ut("failed to call OrtRun().");let q=[];for(let O=0;O<I;O++){let Z=Number(o.getValue(z+O*a,"*"));if(Z===v[O]){q.push(n[O]);continue}let Q=o.stackSave(),J=o.stackAlloc(4*a),re=!1,te,ce=0;try{o._OrtGetTensorData(Z,J,J+a,J+2*a,J+3*a)!==0&&Ut(`Can't access output tensor data on index ${O}.`);let ue=a===4?"i32":"i64",B=Number(o.getValue(J,ue));ce=o.getValue(J+a,"*");let F=o.getValue(J+a*2,"*"),G=Number(o.getValue(J+a*3,ue)),N=[];for(let ve=0;ve<G;ve++)N.push(Number(o.getValue(F+ve*a,ue)));o._OrtFree(F)!==0&&Ut("Can't free memory for tensor dims.");let ae=N.reduce((ve,Fe)=>ve*Fe,1);te=Qs(B);let ke=u?.outputPreferredLocations[s[O]];if(te==="string"){if(ke==="gpu-buffer"||ke==="ml-tensor")throw new Error("String tensor is not supported on GPU.");let ve=[];for(let Fe=0;Fe<ae;Fe++){let Qe=o.getValue(ce+Fe*a,"*"),xe=o.getValue(ce+(Fe+1)*a,"*"),H=Fe===ae-1?void 0:xe-Qe;ve.push(o.UTF8ToString(Qe,H))}q.push([te,N,ve,"cpu"])}else if(ke==="gpu-buffer"&&ae>0){let ve=o.jsepGetBuffer;if(!ve)throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');let Fe=ve(ce),Qe=On(B,ae);if(Qe===void 0||!ad(te))throw new Error(`Unsupported data type: ${te}`);re=!0,q.push([te,N,{gpuBuffer:Fe,download:o.jsepCreateDownloader(Fe,Qe,te),dispose:()=>{o._OrtReleaseTensor(Z)!==0&&Ut("Can't release tensor.")}},"gpu-buffer"])}else if(ke==="ml-tensor"&&ae>0){let ve=o.webnnEnsureTensor,Fe=o.webnnIsInt64Supported;if(!ve||!Fe)throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');if(On(B,ae)===void 0||!ld(te))throw new Error(`Unsupported data type: ${te}`);if(te==="int64"&&!Fe(e))throw new Error('preferredLocation "ml-tensor" for int64 output is not supported by current WebNN Context.');let Qe=await ve(e,ce,B,N,!1);re=!0,q.push([te,N,{mlTensor:Qe,download:o.webnnCreateMLTensorDownloader(ce,te),dispose:()=>{o.webnnReleaseTensorId(ce),o._OrtReleaseTensor(Z)}},"ml-tensor"])}else{let ve=od(te),Fe=new ve(ae);new Uint8Array(Fe.buffer,Fe.byteOffset,Fe.byteLength).set(o.HEAPU8.subarray(ce,ce+Fe.byteLength)),q.push([te,N,Fe,"cpu"])}}finally{o.stackRestore(Q),te==="string"&&ce&&o._free(ce),re||o._OrtReleaseTensor(Z),o.webnnOnRunEnd?.(c)}}return u&&!_&&(o._OrtClearBoundOutputs(u.handle)!==0&&Ut("Can't clear bound outputs."),cn.set(e,[c,p,d,u,_,!1])),q}finally{o.stackRestore(E),$.forEach(K=>o._OrtReleaseTensor(K)),v.forEach(K=>o._OrtReleaseTensor(K)),T.forEach(K=>o._free(K)),M!==0&&o._OrtReleaseRunOptions(M),y.forEach(K=>o._free(K))}},Cd=e=>{let r=Qt(),t=cn.get(e);if(!t)throw new Error("invalid session id");let s=t[0],n=r._OrtEndProfiling(s);n===0&&Ut("Can't get an profile file name."),r._OrtFree(n)},Sd=e=>{let r=[];for(let t of e){let s=t[2];!Array.isArray(s)&&"buffer"in s&&r.push(s.buffer)}return r}}),un,as,di,so,no,Sa,yu,$a,In,An,m0,yx,bx,Mx,vx,xx,Tx,Ex,Px=Be(()=>{$s(),wx(),Un(),sd(),un=()=>!!Zt.wasm.proxy&&typeof document<"u",di=!1,so=!1,no=!1,$a=new Map,In=(e,r)=>{let t=$a.get(e);t?t.push(r):$a.set(e,[r])},An=()=>{if(di||!so||no||!as)throw new Error("worker not ready")},m0=e=>{switch(e.data.type){case"init-wasm":di=!1,e.data.err?(no=!0,yu[1](e.data.err)):(so=!0,yu[0]()),Sa&&(URL.revokeObjectURL(Sa),Sa=void 0);break;case"init-ep":case"copy-from":case"create":case"release":case"run":case"end-profiling":{let r=$a.get(e.data.type);e.data.err?r.shift()[1](e.data.err):r.shift()[0](e.data.out);break}}},yx=async()=>{if(!so){if(di)throw new Error("multiple calls to 'initWasm()' detected.");if(no)throw new Error("previous call to 'initWasm()' failed.");if(di=!0,un())return new Promise((e,r)=>{as?.terminate(),gb().then(([t,s])=>{try{as=s,as.onerror=i=>r(i),as.onmessage=m0,yu=[e,r];let n={type:"init-wasm",in:Zt};!n.in.wasm.wasmPaths&&(t||Iu)&&(n.in.wasm.wasmPaths={wasm:new URL("/muvera-browser/assets/ort-wasm-simd-threaded.jsep-B0T3yYHD.wasm",import.meta.url).href}),as.postMessage(n),Sa=t}catch(n){r(n)}},r)});try{await nd(Zt.wasm),await vd(Zt),so=!0}catch(e){throw no=!0,e}finally{di=!1}}},bx=async e=>{if(un())return An(),new Promise((r,t)=>{In("init-ep",[r,t]);let s={type:"init-ep",in:{epName:e,env:Zt}};as.postMessage(s)});await xd(Zt,e)},Mx=async e=>un()?(An(),new Promise((r,t)=>{In("copy-from",[r,t]);let s={type:"copy-from",in:{buffer:e}};as.postMessage(s,[e.buffer])})):Qa(e),vx=async(e,r)=>{if(un()){if(r?.preferredOutputLocation)throw new Error('session option "preferredOutputLocation" is not supported for proxy.');return An(),new Promise((t,s)=>{In("create",[t,s]);let n={type:"create",in:{model:e,options:{...r}}},i=[];e instanceof Uint8Array&&i.push(e.buffer),as.postMessage(n,i)})}else return Td(e,r)},xx=async e=>{if(un())return An(),new Promise((r,t)=>{In("release",[r,t]);let s={type:"release",in:e};as.postMessage(s)});Ed(e)},Tx=async(e,r,t,s,n,i)=>{if(un()){if(t.some(o=>o[3]!=="cpu"))throw new Error("input tensor on GPU is not supported for proxy.");if(n.some(o=>o))throw new Error("pre-allocated output tensor is not supported for proxy.");return An(),new Promise((o,a)=>{In("run",[o,a]);let l=t,c={type:"run",in:{sessionId:e,inputIndices:r,inputs:l,outputIndices:s,options:i}};as.postMessage(c,Sd(l))})}else return Pd(e,r,t,s,n,i)},Ex=async e=>{if(un())return An(),new Promise((r,t)=>{In("end-profiling",[r,t]);let s={type:"end-profiling",in:e};as.postMessage(s)});Cd(e)}}),bu,f0,Cx,AC=Be(()=>{$s(),Px(),gt(),rd(),Mb(),bu=(e,r)=>{switch(e.location){case"cpu":return[e.type,e.dims,e.data,"cpu"];case"gpu-buffer":return[e.type,e.dims,{gpuBuffer:e.gpuBuffer},"gpu-buffer"];case"ml-tensor":return[e.type,e.dims,{mlTensor:e.mlTensor},"ml-tensor"];default:throw new Error(`invalid data location: ${e.location} for ${r()}`)}},f0=e=>{switch(e[3]){case"cpu":return new Es(e[0],e[2],e[1]);case"gpu-buffer":{let r=e[0];if(!ad(r))throw new Error(`not supported data type: ${r} for deserializing GPU tensor`);let{gpuBuffer:t,download:s,dispose:n}=e[2];return Es.fromGpuBuffer(t,{dataType:r,dims:e[1],download:s,dispose:n})}case"ml-tensor":{let r=e[0];if(!ld(r))throw new Error(`not supported data type: ${r} for deserializing MLTensor tensor`);let{mlTensor:t,download:s,dispose:n}=e[2];return Es.fromMLTensor(t,{dataType:r,dims:e[1],download:s,dispose:n})}default:throw new Error(`invalid data location: ${e[3]}`)}},Cx=class{async fetchModelAndCopyToWasmMemory(e){return Mx(await cd(e))}async loadModel(e,r){Cs();let t;typeof e=="string"?t=await this.fetchModelAndCopyToWasmMemory(e):t=e,[this.sessionId,this.inputNames,this.outputNames,this.inputMetadata,this.outputMetadata]=await vx(t,r),us()}async dispose(){return xx(this.sessionId)}async run(e,r,t){Cs();let s=[],n=[];Object.entries(e).forEach(d=>{let u=d[0],_=d[1],f=this.inputNames.indexOf(u);if(f===-1)throw new Error(`invalid input '${u}'`);s.push(_),n.push(f)});let i=[],o=[];Object.entries(r).forEach(d=>{let u=d[0],_=d[1],f=this.outputNames.indexOf(u);if(f===-1)throw new Error(`invalid output '${u}'`);i.push(_),o.push(f)});let a=s.map((d,u)=>bu(d,()=>`input "${this.inputNames[n[u]]}"`)),l=i.map((d,u)=>d?bu(d,()=>`output "${this.outputNames[o[u]]}"`):null),c=await Tx(this.sessionId,n,a,o,l,t),p={};for(let d=0;d<c.length;d++)p[this.outputNames[o[d]]]=i[d]??f0(c[d]);return us(),p}startProfiling(){}endProfiling(){Ex(this.sessionId)}}}),Sx={};Mi(Sx,{OnnxruntimeWebAssemblyBackend:()=>Ku,initializeFlags:()=>Gu,wasmBackend:()=>$x});var Gu,Ku,$x,FC=Be(()=>{$s(),Px(),AC(),Gu=()=>{(typeof Zt.wasm.initTimeout!="number"||Zt.wasm.initTimeout<0)&&(Zt.wasm.initTimeout=0);let e=Zt.wasm.simd;if(typeof e!="boolean"&&e!==void 0&&e!=="fixed"&&e!=="relaxed"&&(console.warn(`Property "env.wasm.simd" is set to unknown value "${e}". Reset it to \`false\` and ignore SIMD feature checking.`),Zt.wasm.simd=!1),typeof Zt.wasm.proxy!="boolean"&&(Zt.wasm.proxy=!1),typeof Zt.wasm.trace!="boolean"&&(Zt.wasm.trace=!1),typeof Zt.wasm.numThreads!="number"||!Number.isInteger(Zt.wasm.numThreads)||Zt.wasm.numThreads<=0)if(typeof self<"u"&&!self.crossOriginIsolated)Zt.wasm.numThreads=1;else{let r=typeof navigator>"u"?y2("node:os").cpus().length:navigator.hardwareConcurrency;Zt.wasm.numThreads=Math.min(4,Math.ceil((r||1)/2))}},Ku=class{async init(e){Gu(),await yx(),await bx(e)}async createInferenceSessionHandler(e,r){let t=new Cx;return await t.loadModel(e,r),t}},$x=new Ku});$s();$s();$s();var DC="1.22.0-dev.20250409-89f8206ba4",OC=db;{let e=(FC(),wo(Sx)).wasmBackend;zn("webgpu",e,5),zn("webnn",e,5),zn("cpu",e,10),zn("wasm",e,10)}Object.defineProperty(Zt.versions,"web",{value:DC,enumerable:!0});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC=Object.freeze(Object.defineProperty({__proto__:null,get InferenceSession(){return td},get TRACE(){return yo},get TRACE_FUNC_BEGIN(){return Cs},get TRACE_FUNC_END(){return us},get Tensor(){return Es},default:OC,get env(){return Zt},get registerBackend(){return zn}},Symbol.toStringTag,{value:"Module"}));var Mu={},zC={"onnxruntime-common":(e=>{e.exports=f2}),"onnxruntime-web":(e=>{e.exports=LC}),"?2ce3":(()=>{}),"?7992":(()=>{}),"?5af5":(()=>{}),"?2b25":(()=>{}),"?db59":(()=>{}),"?383f":(()=>{}),"?fa4b":(()=>{}),"./node_modules/@huggingface/jinja/dist/index.js":((e,r,t)=>{t.r(r),t.d(r,{Environment:()=>He,Interpreter:()=>Ze,Template:()=>Is,parse:()=>ke,tokenize:()=>p});var s=Object.freeze({Text:"Text",NumericLiteral:"NumericLiteral",StringLiteral:"StringLiteral",Identifier:"Identifier",Equals:"Equals",OpenParen:"OpenParen",CloseParen:"CloseParen",OpenStatement:"OpenStatement",CloseStatement:"CloseStatement",OpenExpression:"OpenExpression",CloseExpression:"CloseExpression",OpenSquareBracket:"OpenSquareBracket",CloseSquareBracket:"CloseSquareBracket",OpenCurlyBracket:"OpenCurlyBracket",CloseCurlyBracket:"CloseCurlyBracket",Comma:"Comma",Dot:"Dot",Colon:"Colon",Pipe:"Pipe",CallOperator:"CallOperator",AdditiveBinaryOperator:"AdditiveBinaryOperator",MultiplicativeBinaryOperator:"MultiplicativeBinaryOperator",ComparisonBinaryOperator:"ComparisonBinaryOperator",UnaryOperator:"UnaryOperator",Comment:"Comment"}),n=class{constructor(C,X){this.value=C,this.type=X}};function i(C){return/\w/.test(C)}function o(C){return/[0-9]/.test(C)}var a=[["{%",s.OpenStatement],["%}",s.CloseStatement],["{{",s.OpenExpression],["}}",s.CloseExpression],["(",s.OpenParen],[")",s.CloseParen],["{",s.OpenCurlyBracket],["}",s.CloseCurlyBracket],["[",s.OpenSquareBracket],["]",s.CloseSquareBracket],[",",s.Comma],[".",s.Dot],[":",s.Colon],["|",s.Pipe],["<=",s.ComparisonBinaryOperator],[">=",s.ComparisonBinaryOperator],["==",s.ComparisonBinaryOperator],["!=",s.ComparisonBinaryOperator],["<",s.ComparisonBinaryOperator],[">",s.ComparisonBinaryOperator],["+",s.AdditiveBinaryOperator],["-",s.AdditiveBinaryOperator],["~",s.AdditiveBinaryOperator],["*",s.MultiplicativeBinaryOperator],["/",s.MultiplicativeBinaryOperator],["%",s.MultiplicativeBinaryOperator],["=",s.Equals]],l=new Map([["n",`
`],["t","	"],["r","\r"],["b","\b"],["f","\f"],["v","\v"],["'","'"],['"','"'],["\\","\\"]]);function c(C,X={}){return C.endsWith(`
`)&&(C=C.slice(0,-1)),X.lstrip_blocks&&(C=C.replace(/^[ \t]*({[#%-])/gm,"$1")),X.trim_blocks&&(C=C.replace(/([#%-]})\n/g,"$1")),C.replace(/-%}\s*/g,"%}").replace(/\s*{%-/g,"{%").replace(/-}}\s*/g,"}}").replace(/\s*{{-/g,"{{").replace(/-#}\s*/g,"#}").replace(/\s*{#-/g,"{#").replace(/{%\s*(end)?generation\s*%}/gs,"")}function p(C,X={}){const j=[],Y=c(C,X);let ne=0,he=0;const Se=tt=>{let lt="";for(;tt(Y[ne]);){if(Y[ne]==="\\"){if(++ne,ne>=Y.length)throw new SyntaxError("Unexpected end of input");const Ge=Y[ne++],St=l.get(Ge);if(St===void 0)throw new SyntaxError(`Unexpected escaped character: ${Ge}`);lt+=St;continue}if(lt+=Y[ne++],ne>=Y.length)throw new SyntaxError("Unexpected end of input")}return lt};e:for(;ne<Y.length;){const tt=j.at(-1)?.type;if(tt===void 0||tt===s.CloseStatement||tt===s.CloseExpression||tt===s.Comment){let Ge="";for(;ne<Y.length&&!(Y[ne]==="{"&&(Y[ne+1]==="%"||Y[ne+1]==="{"||Y[ne+1]==="#"));)Ge+=Y[ne++];if(Ge.length>0){j.push(new n(Ge,s.Text));continue}}if(Y[ne]==="{"&&Y[ne+1]==="#"){ne+=2;let Ge="";for(;Y[ne]!=="#"||Y[ne+1]!=="}";){if(ne+2>=Y.length)throw new SyntaxError("Missing end of comment tag");Ge+=Y[ne++]}j.push(new n(Ge,s.Comment)),ne+=2;continue}Se(Ge=>/\s/.test(Ge));const lt=Y[ne];if(lt==="-"||lt==="+"){const Ge=j.at(-1)?.type;if(Ge===s.Text||Ge===void 0)throw new SyntaxError(`Unexpected character: ${lt}`);switch(Ge){case s.Identifier:case s.NumericLiteral:case s.StringLiteral:case s.CloseParen:case s.CloseSquareBracket:break;default:{++ne;const St=Se(o);j.push(new n(`${lt}${St}`,St.length>0?s.NumericLiteral:s.UnaryOperator));continue}}}for(const[Ge,St]of a){if(Ge==="}}"&&he>0)continue;if(Y.slice(ne,ne+Ge.length)===Ge){j.push(new n(Ge,St)),St===s.OpenExpression?he=0:St===s.OpenCurlyBracket?++he:St===s.CloseCurlyBracket&&--he,ne+=Ge.length;continue e}}if(lt==="'"||lt==='"'){++ne;const Ge=Se(St=>St!==lt);j.push(new n(Ge,s.StringLiteral)),++ne;continue}if(o(lt)){let Ge=Se(o);if(Y[ne]==="."&&o(Y[ne+1])){++ne;const St=Se(o);Ge=`${Ge}.${St}`}j.push(new n(Ge,s.NumericLiteral));continue}if(i(lt)){const Ge=Se(i);j.push(new n(Ge,s.Identifier));continue}throw new SyntaxError(`Unexpected character: ${lt}`)}return j}var d=class{type="Statement"},u=class extends d{constructor(C){super(),this.body=C}type="Program"},_=class extends d{constructor(C,X,j){super(),this.test=C,this.body=X,this.alternate=j}type="If"},f=class extends d{constructor(C,X,j,Y){super(),this.loopvar=C,this.iterable=X,this.body=j,this.defaultBlock=Y}type="For"},w=class extends d{type="Break"},I=class extends d{type="Continue"},M=class extends d{constructor(C,X,j){super(),this.assignee=C,this.value=X,this.body=j}type="Set"},y=class extends d{constructor(C,X,j){super(),this.name=C,this.args=X,this.body=j}type="Macro"},$=class extends d{constructor(C){super(),this.value=C}type="Comment"},v=class extends d{type="Expression"},T=class extends v{constructor(C,X,j){super(),this.object=C,this.property=X,this.computed=j}type="MemberExpression"},E=class extends v{constructor(C,X){super(),this.callee=C,this.args=X}type="CallExpression"},x=class extends v{constructor(C){super(),this.value=C}type="Identifier"},S=class extends v{constructor(C){super(),this.value=C}type="Literal"},z=class extends S{type="IntegerLiteral"},D=class extends S{type="FloatLiteral"},K=class extends S{type="StringLiteral"},q=class extends S{type="ArrayLiteral"},O=class extends S{type="TupleLiteral"},Z=class extends S{type="ObjectLiteral"},Q=class extends v{constructor(C,X,j){super(),this.operator=C,this.left=X,this.right=j}type="BinaryExpression"},J=class extends v{constructor(C,X){super(),this.operand=C,this.filter=X}type="FilterExpression"},re=class extends d{constructor(C,X){super(),this.filter=C,this.body=X}type="FilterStatement"},te=class extends v{constructor(C,X){super(),this.lhs=C,this.test=X}type="SelectExpression"},ce=class extends v{constructor(C,X,j){super(),this.operand=C,this.negate=X,this.test=j}type="TestExpression"},ue=class extends v{constructor(C,X){super(),this.operator=C,this.argument=X}type="UnaryExpression"},B=class extends v{constructor(C=void 0,X=void 0,j=void 0){super(),this.start=C,this.stop=X,this.step=j}type="SliceExpression"},F=class extends v{constructor(C,X){super(),this.key=C,this.value=X}type="KeywordArgumentExpression"},G=class extends v{constructor(C){super(),this.argument=C}type="SpreadExpression"},N=class extends d{constructor(C,X,j){super(),this.call=C,this.callerArgs=X,this.body=j}type="CallStatement"},ae=class extends v{constructor(C,X,j){super(),this.condition=C,this.trueExpr=X,this.falseExpr=j}type="Ternary"};function ke(C){const X=new u([]);let j=0;function Y(Le,Re){const rt=C[j++];if(!rt||rt.type!==Le)throw new Error(`Parser Error: ${Re}. ${rt.type} !== ${Le}.`);return rt}function ne(Le){if(!lt(Le))throw new SyntaxError(`Expected ${Le}`);++j}function he(){switch(C[j].type){case s.Comment:return new $(C[j++].value);case s.Text:return Ge();case s.OpenStatement:return St();case s.OpenExpression:return kt();default:throw new SyntaxError(`Unexpected token type: ${C[j].type}`)}}function Se(...Le){return j+Le.length<=C.length&&Le.every((Re,rt)=>Re===C[j+rt].type)}function tt(...Le){return C[j]?.type===s.OpenStatement&&C[j+1]?.type===s.Identifier&&Le.includes(C[j+1]?.value)}function lt(...Le){return j+Le.length<=C.length&&Le.every((Re,rt)=>C[j+rt].type==="Identifier"&&Re===C[j+rt].value)}function Ge(){return new K(Y(s.Text,"Expected text token").value)}function St(){if(Y(s.OpenStatement,"Expected opening statement token"),C[j].type!==s.Identifier)throw new SyntaxError(`Unknown statement, got ${C[j].type}`);const Le=C[j].value;let Re;switch(Le){case"set":++j,Re=_r();break;case"if":++j,Re=Rt(),Y(s.OpenStatement,"Expected {% token"),ne("endif"),Y(s.CloseStatement,"Expected %} token");break;case"macro":++j,Re=ur(),Y(s.OpenStatement,"Expected {% token"),ne("endmacro"),Y(s.CloseStatement,"Expected %} token");break;case"for":++j,Re=Xt(),Y(s.OpenStatement,"Expected {% token"),ne("endfor"),Y(s.CloseStatement,"Expected %} token");break;case"call":{++j;let rt=null;Se(s.OpenParen)&&(rt=qr());const Yt=zr();if(Yt.type!=="Identifier")throw new SyntaxError("Expected identifier following call statement");const Ws=qr();Y(s.CloseStatement,"Expected closing statement token");const Ds=[];for(;!tt("endcall");)Ds.push(he());Y(s.OpenStatement,"Expected '{%'"),ne("endcall"),Y(s.CloseStatement,"Expected closing statement token");const Gs=new E(Yt,Ws);Re=new N(Gs,rt,Ds);break}case"break":++j,Y(s.CloseStatement,"Expected closing statement token"),Re=new w;break;case"continue":++j,Y(s.CloseStatement,"Expected closing statement token"),Re=new I;break;case"filter":{++j;let rt=zr();rt instanceof x&&Se(s.OpenParen)&&(rt=nr(rt)),Y(s.CloseStatement,"Expected closing statement token");const Yt=[];for(;!tt("endfilter");)Yt.push(he());Y(s.OpenStatement,"Expected '{%'"),ne("endfilter"),Y(s.CloseStatement,"Expected '%}'"),Re=new re(rt,Yt);break}default:throw new SyntaxError(`Unknown statement type: ${Le}`)}return Re}function kt(){Y(s.OpenExpression,"Expected opening expression token");const Le=gr();return Y(s.CloseExpression,"Expected closing expression token"),Le}function _r(){const Le=Kr();let Re=null;const rt=[];if(Se(s.Equals))++j,Re=Kr();else{for(Y(s.CloseStatement,"Expected %} token");!tt("endset");)rt.push(he());Y(s.OpenStatement,"Expected {% token"),ne("endset")}return Y(s.CloseStatement,"Expected closing statement token"),new M(Le,Re,rt)}function Rt(){const Le=gr();Y(s.CloseStatement,"Expected closing statement token");const Re=[],rt=[];for(;!tt("elif","else","endif");)Re.push(he());if(tt("elif")){++j,++j;const Yt=Rt();rt.push(Yt)}else if(tt("else"))for(++j,++j,Y(s.CloseStatement,"Expected closing statement token");!tt("endif");)rt.push(he());return new _(Le,Re,rt)}function ur(){const Le=zr();if(Le.type!=="Identifier")throw new SyntaxError("Expected identifier following macro statement");const Re=qr();Y(s.CloseStatement,"Expected closing statement token");const rt=[];for(;!tt("endmacro");)rt.push(he());return new y(Le,Re,rt)}function Kr(Le=!1){const Re=Le?zr:gr,rt=[Re()],Yt=Se(s.Comma);for(;Yt&&(++j,rt.push(Re()),!!Se(s.Comma)););return Yt?new O(rt):rt[0]}function Xt(){const Le=Kr(!0);if(!(Le instanceof x||Le instanceof O))throw new SyntaxError(`Expected identifier/tuple for the loop variable, got ${Le.type} instead`);if(!lt("in"))throw new SyntaxError("Expected `in` keyword following loop variable");++j;const Re=gr();Y(s.CloseStatement,"Expected closing statement token");const rt=[];for(;!tt("endfor","else");)rt.push(he());const Yt=[];if(tt("else"))for(++j,++j,Y(s.CloseStatement,"Expected closing statement token");!tt("endfor");)Yt.push(he());return new f(Le,Re,rt,Yt)}function gr(){return ss()}function ss(){const Le=dr();if(lt("if")){++j;const Re=dr();if(lt("else")){++j;const rt=ss();return new ae(Re,Le,rt)}else return new te(Le,Re)}return Le}function dr(){let Le=ds();for(;lt("or");){const Re=C[j];++j;const rt=ds();Le=new Q(Re,Le,rt)}return Le}function ds(){let Le=ps();for(;lt("and");){const Re=C[j];++j;const rt=ps();Le=new Q(Re,Le,rt)}return Le}function ps(){let Le;for(;lt("not");){const Re=C[j];++j;const rt=ps();Le=new ue(Re,rt)}return Le??Lr()}function Lr(){let Le=As();for(;;){let Re;if(lt("not","in"))Re=new n("not in",s.Identifier),j+=2;else if(lt("in"))Re=C[j++];else if(Se(s.ComparisonBinaryOperator))Re=C[j++];else break;const rt=As();Le=new Q(Re,Le,rt)}return Le}function As(){let Le=Fs();for(;Se(s.AdditiveBinaryOperator);){const Re=C[j];++j;const rt=Fs();Le=new Q(Re,Le,rt)}return Le}function hs(){const Le=ns(zr());return Se(s.OpenParen)?nr(Le):Le}function nr(Le){let Re=new E(Le,qr());return Re=ns(Re),Se(s.OpenParen)&&(Re=nr(Re)),Re}function qr(){Y(s.OpenParen,"Expected opening parenthesis for arguments list");const Le=pr();return Y(s.CloseParen,"Expected closing parenthesis for arguments list"),Le}function pr(){const Le=[];for(;!Se(s.CloseParen);){let Re;if(C[j].type===s.MultiplicativeBinaryOperator&&C[j].value==="*"){++j;const rt=gr();Re=new G(rt)}else if(Re=gr(),Se(s.Equals)){if(++j,!(Re instanceof x))throw new SyntaxError("Expected identifier for keyword argument");const rt=gr();Re=new F(Re,rt)}Le.push(Re),Se(s.Comma)&&++j}return Le}function vr(){const Le=[];let Re=!1;for(;!Se(s.CloseSquareBracket);)Se(s.Colon)?(Le.push(void 0),++j,Re=!0):(Le.push(gr()),Se(s.Colon)&&(++j,Re=!0));if(Le.length===0)throw new SyntaxError("Expected at least one argument for member/slice expression");if(Re){if(Le.length>3)throw new SyntaxError("Expected 0-3 arguments for slice expression");return new B(...Le)}return Le[0]}function ns(Le){for(;Se(s.Dot)||Se(s.OpenSquareBracket);){const Re=C[j];++j;let rt;const Yt=Re.type===s.OpenSquareBracket;if(Yt)rt=vr(),Y(s.CloseSquareBracket,"Expected closing square bracket");else if(rt=zr(),rt.type!=="Identifier")throw new SyntaxError("Expected identifier following dot operator");Le=new T(Le,rt,Yt)}return Le}function Fs(){let Le=Qr();for(;Se(s.MultiplicativeBinaryOperator);){const Re=C[j++],rt=Qr();Le=new Q(Re,Le,rt)}return Le}function Qr(){let Le=Us();for(;lt("is");){++j;const Re=lt("not");Re&&++j;const rt=zr();if(!(rt instanceof x))throw new SyntaxError("Expected identifier for the test");Le=new ce(Le,Re,rt)}return Le}function Us(){let Le=hs();for(;Se(s.Pipe);){++j;let Re=zr();if(!(Re instanceof x))throw new SyntaxError("Expected identifier for the filter");Se(s.OpenParen)&&(Re=nr(Re)),Le=new J(Le,Re)}return Le}function zr(){const Le=C[j++];switch(Le.type){case s.NumericLiteral:{const Re=Le.value;return Re.includes(".")?new D(Number(Re)):new z(Number(Re))}case s.StringLiteral:{let Re=Le.value;for(;Se(s.StringLiteral);)Re+=C[j++].value;return new K(Re)}case s.Identifier:return new x(Le.value);case s.OpenParen:{const Re=Kr();return Y(s.CloseParen,"Expected closing parenthesis, got ${tokens[current].type} instead."),Re}case s.OpenSquareBracket:{const Re=[];for(;!Se(s.CloseSquareBracket);)Re.push(gr()),Se(s.Comma)&&++j;return++j,new q(Re)}case s.OpenCurlyBracket:{const Re=new Map;for(;!Se(s.CloseCurlyBracket);){const rt=gr();Y(s.Colon,"Expected colon between key and value in object literal");const Yt=gr();Re.set(rt,Yt),Se(s.Comma)&&++j}return++j,new Z(Re)}default:throw new SyntaxError(`Unexpected token: ${Le.type}`)}}for(;j<C.length;)X.body.push(he());return X}function ve(C,X,j=1){X===void 0&&(X=C,C=0);const Y=[];for(let ne=C;ne<X;ne+=j)Y.push(ne);return Y}function Fe(C,X,j,Y=1){const ne=Math.sign(Y);ne>=0?(X=(X??=0)<0?Math.max(C.length+X,0):Math.min(X,C.length),j=(j??=C.length)<0?Math.max(C.length+j,0):Math.min(j,C.length)):(X=(X??=C.length-1)<0?Math.max(C.length+X,-1):Math.min(X,C.length-1),j=(j??=-1)<-1?Math.max(C.length+j,-1):Math.min(j,C.length-1));const he=[];for(let Se=X;ne*Se<ne*j;Se+=Y)he.push(C[Se]);return he}function Qe(C){return C.replace(/\b\w/g,X=>X.toUpperCase())}function xe(C){return H(new Date,C)}function H(C,X){const j=new Intl.DateTimeFormat(void 0,{month:"long"}),Y=new Intl.DateTimeFormat(void 0,{month:"short"}),ne=he=>he<10?"0"+he:he.toString();return X.replace(/%[YmdbBHM%]/g,he=>{switch(he){case"%Y":return C.getFullYear().toString();case"%m":return ne(C.getMonth()+1);case"%d":return ne(C.getDate());case"%b":return Y.format(C);case"%B":return j.format(C);case"%H":return ne(C.getHours());case"%M":return ne(C.getMinutes());case"%%":return"%";default:return he}})}function de(C){return C.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function W(C,X,j,Y){if(Y===0)return C;let ne=Y==null||Y<0?1/0:Y;const he=X.length===0?new RegExp("(?=)","gu"):new RegExp(de(X),"gu");return C.replaceAll(he,Se=>ne>0?(--ne,j):Se)}var _e=class extends Error{},Ie=class extends Error{},Me=class{type="RuntimeValue";value;builtins=new Map;constructor(C=void 0){this.value=C}__bool__(){return new Ae(!!this.value)}toString(){return String(this.value)}},ge=class extends Me{type="IntegerValue"},Ee=class extends Me{type="FloatValue";toString(){return this.value%1===0?this.value.toFixed(1):this.value.toString()}},we=class extends Me{type="StringValue";builtins=new Map([["upper",new je(()=>new we(this.value.toUpperCase()))],["lower",new je(()=>new we(this.value.toLowerCase()))],["strip",new je(()=>new we(this.value.trim()))],["title",new je(()=>new we(Qe(this.value)))],["capitalize",new je(()=>new we(this.value.charAt(0).toUpperCase()+this.value.slice(1)))],["length",new ge(this.value.length)],["rstrip",new je(()=>new we(this.value.trimEnd()))],["lstrip",new je(()=>new we(this.value.trimStart()))],["startswith",new je(C=>{if(C.length===0)throw new Error("startswith() requires at least one argument");const X=C[0];if(X instanceof we)return new Ae(this.value.startsWith(X.value));if(X instanceof be){for(const j of X.value){if(!(j instanceof we))throw new Error("startswith() tuple elements must be strings");if(this.value.startsWith(j.value))return new Ae(!0)}return new Ae(!1)}throw new Error("startswith() argument must be a string or tuple of strings")})],["endswith",new je(C=>{if(C.length===0)throw new Error("endswith() requires at least one argument");const X=C[0];if(X instanceof we)return new Ae(this.value.endsWith(X.value));if(X instanceof be){for(const j of X.value){if(!(j instanceof we))throw new Error("endswith() tuple elements must be strings");if(this.value.endsWith(j.value))return new Ae(!0)}return new Ae(!1)}throw new Error("endswith() argument must be a string or tuple of strings")})],["split",new je(C=>{const X=C[0]??new Ne;if(!(X instanceof we||X instanceof Ne))throw new Error("sep argument must be a string or null");const j=C[1]??new ge(-1);if(!(j instanceof ge))throw new Error("maxsplit argument must be a number");let Y=[];if(X instanceof Ne){const ne=this.value.trimStart();for(const{0:he,index:Se}of ne.matchAll(/\S+/g)){if(j.value!==-1&&Y.length>=j.value&&Se!==void 0){Y.push(he+ne.slice(Se+he.length));break}Y.push(he)}}else{if(X.value==="")throw new Error("empty separator");Y=this.value.split(X.value),j.value!==-1&&Y.length>j.value&&Y.push(Y.splice(j.value).join(X.value))}return new be(Y.map(ne=>new we(ne)))})],["replace",new je(C=>{if(C.length<2)throw new Error("replace() requires at least two arguments");const X=C[0],j=C[1];if(!(X instanceof we&&j instanceof we))throw new Error("replace() arguments must be strings");let Y;if(C.length>2?C[2].type==="KeywordArgumentsValue"?Y=C[2].value.get("count")??new Ne:Y=C[2]:Y=new Ne,!(Y instanceof ge||Y instanceof Ne))throw new Error("replace() count argument must be a number or null");return new we(W(this.value,X.value,j.value,Y.value))})]])},Ae=class extends Me{type="BooleanValue"},De=class extends Me{type="ObjectValue";__bool__(){return new Ae(this.value.size>0)}builtins=new Map([["get",new je(([C,X])=>{if(!(C instanceof we))throw new Error(`Object key must be a string: got ${C.type}`);return this.value.get(C.value)??X??new Ne})],["items",new je(()=>this.items())],["keys",new je(()=>this.keys())],["values",new je(()=>this.values())]]);items(){return new be(Array.from(this.value.entries()).map(([C,X])=>new be([new we(C),X])))}keys(){return new be(Array.from(this.value.keys()).map(C=>new we(C)))}values(){return new be(Array.from(this.value.values()))}},We=class extends De{type="KeywordArgumentsValue"},be=class extends Me{type="ArrayValue";builtins=new Map([["length",new ge(this.value.length)]]);__bool__(){return new Ae(this.value.length>0)}},st=class extends be{type="TupleValue"},je=class extends Me{type="FunctionValue"},Ne=class extends Me{type="NullValue"},et=class extends Me{type="UndefinedValue"},He=class{constructor(C){this.parent=C}variables=new Map([["namespace",new je(C=>{if(C.length===0)return new De(new Map);if(C.length!==1||!(C[0]instanceof De))throw new Error("`namespace` expects either zero arguments or a single object argument");return C[0]})]]);tests=new Map([["boolean",C=>C.type==="BooleanValue"],["callable",C=>C instanceof je],["odd",C=>{if(!(C instanceof ge))throw new Error(`cannot odd on ${C.type}`);return C.value%2!==0}],["even",C=>{if(!(C instanceof ge))throw new Error(`cannot even on ${C.type}`);return C.value%2===0}],["false",C=>C.type==="BooleanValue"&&!C.value],["true",C=>C.type==="BooleanValue"&&C.value],["none",C=>C.type==="NullValue"],["string",C=>C.type==="StringValue"],["number",C=>C instanceof ge||C instanceof Ee],["integer",C=>C instanceof ge],["iterable",C=>C.type==="ArrayValue"||C.type==="StringValue"],["mapping",C=>C.type==="ObjectValue"],["lower",C=>{const X=C.value;return C.type==="StringValue"&&X===X.toLowerCase()}],["upper",C=>{const X=C.value;return C.type==="StringValue"&&X===X.toUpperCase()}],["none",C=>C.type==="NullValue"],["defined",C=>C.type!=="UndefinedValue"],["undefined",C=>C.type==="UndefinedValue"],["equalto",(C,X)=>C.value===X.value],["eq",(C,X)=>C.value===X.value]]);set(C,X){return this.declareVariable(C,Ct(X))}declareVariable(C,X){if(this.variables.has(C))throw new SyntaxError(`Variable already declared: ${C}`);return this.variables.set(C,X),X}setVariable(C,X){return this.variables.set(C,X),X}resolve(C){if(this.variables.has(C))return this;if(this.parent)return this.parent.resolve(C);throw new Error(`Unknown variable: ${C}`)}lookupVariable(C){try{return this.resolve(C).variables.get(C)??new et}catch{return new et}}};function Je(C){C.set("false",!1),C.set("true",!0),C.set("none",null),C.set("raise_exception",X=>{throw new Error(X)}),C.set("range",ve),C.set("strftime_now",xe),C.set("True",!0),C.set("False",!1),C.set("None",null)}var Ze=class{global;constructor(C){this.global=C??new He}run(C){return this.evaluate(C,this.global)}evaluateBinaryExpression(C,X){const j=this.evaluate(C.left,X);switch(C.operator.value){case"and":return j.__bool__().value?this.evaluate(C.right,X):j;case"or":return j.__bool__().value?j:this.evaluate(C.right,X)}const Y=this.evaluate(C.right,X);switch(C.operator.value){case"==":return new Ae(j.value==Y.value);case"!=":return new Ae(j.value!=Y.value)}if(j instanceof et||Y instanceof et){if(Y instanceof et&&["in","not in"].includes(C.operator.value))return new Ae(C.operator.value==="not in");throw new Error(`Cannot perform operation ${C.operator.value} on undefined values`)}else{if(j instanceof Ne||Y instanceof Ne)throw new Error("Cannot perform operation on null values");if(C.operator.value==="~")return new we(j.value.toString()+Y.value.toString());if((j instanceof ge||j instanceof Ee)&&(Y instanceof ge||Y instanceof Ee)){const ne=j.value,he=Y.value;switch(C.operator.value){case"+":case"-":case"*":{const Se=C.operator.value==="+"?ne+he:C.operator.value==="-"?ne-he:ne*he;return j instanceof Ee||Y instanceof Ee?new Ee(Se):new ge(Se)}case"/":return new Ee(ne/he);case"%":{const Se=ne%he;return j instanceof Ee||Y instanceof Ee?new Ee(Se):new ge(Se)}case"<":return new Ae(ne<he);case">":return new Ae(ne>he);case">=":return new Ae(ne>=he);case"<=":return new Ae(ne<=he)}}else if(j instanceof be&&Y instanceof be)switch(C.operator.value){case"+":return new be(j.value.concat(Y.value))}else if(Y instanceof be){const ne=Y.value.find(he=>he.value===j.value)!==void 0;switch(C.operator.value){case"in":return new Ae(ne);case"not in":return new Ae(!ne)}}}if(j instanceof we||Y instanceof we)switch(C.operator.value){case"+":return new we(j.value.toString()+Y.value.toString())}if(j instanceof we&&Y instanceof we)switch(C.operator.value){case"in":return new Ae(Y.value.includes(j.value));case"not in":return new Ae(!Y.value.includes(j.value))}if(j instanceof we&&Y instanceof De)switch(C.operator.value){case"in":return new Ae(Y.value.has(j.value));case"not in":return new Ae(!Y.value.has(j.value))}throw new SyntaxError(`Unknown operator "${C.operator.value}" between ${j.type} and ${Y.type}`)}evaluateArguments(C,X){const j=[],Y=new Map;for(const ne of C)if(ne.type==="SpreadExpression"){const he=ne,Se=this.evaluate(he.argument,X);if(!(Se instanceof be))throw new Error(`Cannot unpack non-iterable type: ${Se.type}`);for(const tt of Se.value)j.push(tt)}else if(ne.type==="KeywordArgumentExpression"){const he=ne;Y.set(he.key.value,this.evaluate(he.value,X))}else{if(Y.size>0)throw new Error("Positional arguments must come before keyword arguments");j.push(this.evaluate(ne,X))}return[j,Y]}applyFilter(C,X,j){if(X.type==="Identifier"){const Y=X;if(Y.value==="tojson")return new we(At(C));if(C instanceof be)switch(Y.value){case"list":return C;case"first":return C.value[0];case"last":return C.value[C.value.length-1];case"length":return new ge(C.value.length);case"reverse":return new be(C.value.reverse());case"sort":return new be(C.value.sort((ne,he)=>{if(ne.type!==he.type)throw new Error(`Cannot compare different types: ${ne.type} and ${he.type}`);switch(ne.type){case"IntegerValue":case"FloatValue":return ne.value-he.value;case"StringValue":return ne.value.localeCompare(he.value);default:throw new Error(`Cannot compare type: ${ne.type}`)}}));case"join":return new we(C.value.map(ne=>ne.value).join(""));case"string":return new we(At(C));case"unique":{const ne=new Set,he=[];for(const Se of C.value)ne.has(Se.value)||(ne.add(Se.value),he.push(Se));return new be(he)}default:throw new Error(`Unknown ArrayValue filter: ${Y.value}`)}else if(C instanceof we)switch(Y.value){case"length":case"upper":case"lower":case"title":case"capitalize":{const ne=C.builtins.get(Y.value);if(ne instanceof je)return ne.value([],j);if(ne instanceof ge)return ne;throw new Error(`Unknown StringValue filter: ${Y.value}`)}case"trim":return new we(C.value.trim());case"indent":return new we(C.value.split(`
`).map((ne,he)=>he===0||ne.length===0?ne:"    "+ne).join(`
`));case"join":case"string":return C;case"int":{const ne=parseInt(C.value,10);return new ge(isNaN(ne)?0:ne)}case"float":{const ne=parseFloat(C.value);return new Ee(isNaN(ne)?0:ne)}default:throw new Error(`Unknown StringValue filter: ${Y.value}`)}else if(C instanceof ge||C instanceof Ee)switch(Y.value){case"abs":return C instanceof ge?new ge(Math.abs(C.value)):new Ee(Math.abs(C.value));case"int":return new ge(Math.floor(C.value));case"float":return new Ee(C.value);default:throw new Error(`Unknown NumericValue filter: ${Y.value}`)}else if(C instanceof De)switch(Y.value){case"items":return new be(Array.from(C.value.entries()).map(([ne,he])=>new be([new we(ne),he])));case"length":return new ge(C.value.size);default:throw new Error(`Unknown ObjectValue filter: ${Y.value}`)}else if(C instanceof Ae)switch(Y.value){case"bool":return new Ae(C.value);case"int":return new ge(C.value?1:0);case"float":return new Ee(C.value?1:0);case"string":return new we(C.value?"true":"false");default:throw new Error(`Unknown BooleanValue filter: ${Y.value}`)}throw new Error(`Cannot apply filter "${Y.value}" to type: ${C.type}`)}else if(X.type==="CallExpression"){const Y=X;if(Y.callee.type!=="Identifier")throw new Error(`Unknown filter: ${Y.callee.type}`);const ne=Y.callee.value;if(ne==="tojson"){const[,he]=this.evaluateArguments(Y.args,j),Se=he.get("indent")??new Ne;if(!(Se instanceof ge||Se instanceof Ne))throw new Error("If set, indent must be a number");return new we(At(C,Se.value))}else if(ne==="join"){let he;if(C instanceof we)he=Array.from(C.value);else if(C instanceof be)he=C.value.map(Ge=>Ge.value);else throw new Error(`Cannot apply filter "${ne}" to type: ${C.type}`);const[Se,tt]=this.evaluateArguments(Y.args,j),lt=Se.at(0)??tt.get("separator")??new we("");if(!(lt instanceof we))throw new Error("separator must be a string");return new we(he.join(lt.value))}else if(ne==="int"||ne==="float"){const[he,Se]=this.evaluateArguments(Y.args,j),tt=he.at(0)??Se.get("default")??(ne==="int"?new ge(0):new Ee(0));if(C instanceof we){const lt=ne==="int"?parseInt(C.value,10):parseFloat(C.value);return isNaN(lt)?tt:ne==="int"?new ge(lt):new Ee(lt)}else{if(C instanceof ge||C instanceof Ee)return C;if(C instanceof Ae)return ne==="int"?new ge(C.value?1:0):new Ee(C.value?1:0);throw new Error(`Cannot apply filter "${ne}" to type: ${C.type}`)}}else if(ne==="default"){const[he,Se]=this.evaluateArguments(Y.args,j),tt=he[0]??new we(""),lt=he[1]??Se.get("boolean")??new Ae(!1);if(!(lt instanceof Ae))throw new Error("`default` filter flag must be a boolean");return C instanceof et||lt.value&&!C.__bool__().value?tt:C}if(C instanceof be){switch(ne){case"selectattr":case"rejectattr":{const he=ne==="selectattr";if(C.value.some(kt=>!(kt instanceof De)))throw new Error(`\`${ne}\` can only be applied to array of objects`);if(Y.args.some(kt=>kt.type!=="StringLiteral"))throw new Error(`arguments of \`${ne}\` must be strings`);const[Se,tt,lt]=Y.args.map(kt=>this.evaluate(kt,j));let Ge;if(tt){const kt=j.tests.get(tt.value);if(!kt)throw new Error(`Unknown test: ${tt.value}`);Ge=kt}else Ge=(...kt)=>kt[0].__bool__().value;const St=C.value.filter(kt=>{const _r=kt.value.get(Se.value),Rt=_r?Ge(_r,lt):!1;return he?Rt:!Rt});return new be(St)}case"map":{const[,he]=this.evaluateArguments(Y.args,j);if(he.has("attribute")){const Se=he.get("attribute");if(!(Se instanceof we))throw new Error("attribute must be a string");const tt=he.get("default"),lt=C.value.map(Ge=>{if(!(Ge instanceof De))throw new Error("items in map must be an object");return Ge.value.get(Se.value)??tt??new et});return new be(lt)}else throw new Error("`map` expressions without `attribute` set are not currently supported.")}}throw new Error(`Unknown ArrayValue filter: ${ne}`)}else if(C instanceof we){switch(ne){case"indent":{const[he,Se]=this.evaluateArguments(Y.args,j),tt=he.at(0)??Se.get("width")??new ge(4);if(!(tt instanceof ge))throw new Error("width must be a number");const lt=he.at(1)??Se.get("first")??new Ae(!1),Ge=he.at(2)??Se.get("blank")??new Ae(!1),St=C.value.split(`
`),kt=" ".repeat(tt.value),_r=St.map((Rt,ur)=>!lt.value&&ur===0||!Ge.value&&Rt.length===0?Rt:kt+Rt);return new we(_r.join(`
`))}case"replace":{const he=C.builtins.get("replace");if(!(he instanceof je))throw new Error("replace filter not available");const[Se,tt]=this.evaluateArguments(Y.args,j);return he.value([...Se,new We(tt)],j)}}throw new Error(`Unknown StringValue filter: ${ne}`)}else throw new Error(`Cannot apply filter "${ne}" to type: ${C.type}`)}throw new Error(`Unknown filter: ${X.type}`)}evaluateFilterExpression(C,X){const j=this.evaluate(C.operand,X);return this.applyFilter(j,C.filter,X)}evaluateTestExpression(C,X){const j=this.evaluate(C.operand,X),Y=X.tests.get(C.test.value);if(!Y)throw new Error(`Unknown test: ${C.test.value}`);const ne=Y(j);return new Ae(C.negate?!ne:ne)}evaluateSelectExpression(C,X){return this.evaluate(C.test,X).__bool__().value?this.evaluate(C.lhs,X):new et}evaluateUnaryExpression(C,X){const j=this.evaluate(C.argument,X);switch(C.operator.value){case"not":return new Ae(!j.value);default:throw new SyntaxError(`Unknown operator: ${C.operator.value}`)}}evaluateTernaryExpression(C,X){return this.evaluate(C.condition,X).__bool__().value?this.evaluate(C.trueExpr,X):this.evaluate(C.falseExpr,X)}evalProgram(C,X){return this.evaluateBlock(C.body,X)}evaluateBlock(C,X){let j="";for(const Y of C){const ne=this.evaluate(Y,X);ne.type!=="NullValue"&&ne.type!=="UndefinedValue"&&(j+=ne.toString())}return new we(j)}evaluateIdentifier(C,X){return X.lookupVariable(C.value)}evaluateCallExpression(C,X){const[j,Y]=this.evaluateArguments(C.args,X);Y.size>0&&j.push(new We(Y));const ne=this.evaluate(C.callee,X);if(ne.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${ne.type}`);return ne.value(j,X)}evaluateSliceExpression(C,X,j){if(!(C instanceof be||C instanceof we))throw new Error("Slice object must be an array or string");const Y=this.evaluate(X.start,j),ne=this.evaluate(X.stop,j),he=this.evaluate(X.step,j);if(!(Y instanceof ge||Y instanceof et))throw new Error("Slice start must be numeric or undefined");if(!(ne instanceof ge||ne instanceof et))throw new Error("Slice stop must be numeric or undefined");if(!(he instanceof ge||he instanceof et))throw new Error("Slice step must be numeric or undefined");return C instanceof be?new be(Fe(C.value,Y.value,ne.value,he.value)):new we(Fe(Array.from(C.value),Y.value,ne.value,he.value).join(""))}evaluateMemberExpression(C,X){const j=this.evaluate(C.object,X);let Y;if(C.computed){if(C.property.type==="SliceExpression")return this.evaluateSliceExpression(j,C.property,X);Y=this.evaluate(C.property,X)}else Y=new we(C.property.value);let ne;if(j instanceof De){if(!(Y instanceof we))throw new Error(`Cannot access property with non-string: got ${Y.type}`);ne=j.value.get(Y.value)??j.builtins.get(Y.value)}else if(j instanceof be||j instanceof we)if(Y instanceof ge)ne=j.value.at(Y.value),j instanceof we&&(ne=new we(j.value.at(Y.value)));else if(Y instanceof we)ne=j.builtins.get(Y.value);else throw new Error(`Cannot access property with non-string/non-number: got ${Y.type}`);else{if(!(Y instanceof we))throw new Error(`Cannot access property with non-string: got ${Y.type}`);ne=j.builtins.get(Y.value)}return ne instanceof Me?ne:new et}evaluateSet(C,X){const j=C.value?this.evaluate(C.value,X):this.evaluateBlock(C.body,X);if(C.assignee.type==="Identifier"){const Y=C.assignee.value;X.setVariable(Y,j)}else if(C.assignee.type==="TupleLiteral"){const Y=C.assignee;if(!(j instanceof be))throw new Error(`Cannot unpack non-iterable type in set: ${j.type}`);const ne=j.value;if(ne.length!==Y.value.length)throw new Error(`Too ${Y.value.length>ne.length?"few":"many"} items to unpack in set`);for(let he=0;he<Y.value.length;++he){const Se=Y.value[he];if(Se.type!=="Identifier")throw new Error(`Cannot unpack to non-identifier in set: ${Se.type}`);X.setVariable(Se.value,ne[he])}}else if(C.assignee.type==="MemberExpression"){const Y=C.assignee,ne=this.evaluate(Y.object,X);if(!(ne instanceof De))throw new Error("Cannot assign to member of non-object");if(Y.property.type!=="Identifier")throw new Error("Cannot assign to member with non-identifier property");ne.value.set(Y.property.value,j)}else throw new Error(`Invalid LHS inside assignment expression: ${JSON.stringify(C.assignee)}`);return new Ne}evaluateIf(C,X){const j=this.evaluate(C.test,X);return this.evaluateBlock(j.__bool__().value?C.body:C.alternate,X)}evaluateFor(C,X){const j=new He(X);let Y,ne;if(C.iterable.type==="SelectExpression"){const Ge=C.iterable;ne=this.evaluate(Ge.lhs,j),Y=Ge.test}else ne=this.evaluate(C.iterable,j);if(!(ne instanceof be||ne instanceof De))throw new Error(`Expected iterable or object type in for loop: got ${ne.type}`);ne instanceof De&&(ne=ne.keys());const he=[],Se=[];for(let Ge=0;Ge<ne.value.length;++Ge){const St=new He(j),kt=ne.value[Ge];let _r;if(C.loopvar.type==="Identifier")_r=Rt=>Rt.setVariable(C.loopvar.value,kt);else if(C.loopvar.type==="TupleLiteral"){const Rt=C.loopvar;if(kt.type!=="ArrayValue")throw new Error(`Cannot unpack non-iterable type: ${kt.type}`);const ur=kt;if(Rt.value.length!==ur.value.length)throw new Error(`Too ${Rt.value.length>ur.value.length?"few":"many"} items to unpack`);_r=Kr=>{for(let Xt=0;Xt<Rt.value.length;++Xt){if(Rt.value[Xt].type!=="Identifier")throw new Error(`Cannot unpack non-identifier type: ${Rt.value[Xt].type}`);Kr.setVariable(Rt.value[Xt].value,ur.value[Xt])}}}else throw new Error(`Invalid loop variable(s): ${C.loopvar.type}`);Y&&(_r(St),!this.evaluate(Y,St).__bool__().value)||(he.push(kt),Se.push(_r))}let tt="",lt=!0;for(let Ge=0;Ge<he.length;++Ge){const St=new Map([["index",new ge(Ge+1)],["index0",new ge(Ge)],["revindex",new ge(he.length-Ge)],["revindex0",new ge(he.length-Ge-1)],["first",new Ae(Ge===0)],["last",new Ae(Ge===he.length-1)],["length",new ge(he.length)],["previtem",Ge>0?he[Ge-1]:new et],["nextitem",Ge<he.length-1?he[Ge+1]:new et]]);j.setVariable("loop",new De(St)),Se[Ge](j);try{const kt=this.evaluateBlock(C.body,j);tt+=kt.value}catch(kt){if(kt instanceof Ie)continue;if(kt instanceof _e)break;throw kt}lt=!1}if(lt){const Ge=this.evaluateBlock(C.defaultBlock,j);tt+=Ge.value}return new we(tt)}evaluateMacro(C,X){return X.setVariable(C.name.value,new je((j,Y)=>{const ne=new He(Y);j=j.slice();let he;j.at(-1)?.type==="KeywordArgumentsValue"&&(he=j.pop());for(let Se=0;Se<C.args.length;++Se){const tt=C.args[Se],lt=j[Se];if(tt.type==="Identifier"){const Ge=tt;if(!lt)throw new Error(`Missing positional argument: ${Ge.value}`);ne.setVariable(Ge.value,lt)}else if(tt.type==="KeywordArgumentExpression"){const Ge=tt,St=lt??he?.value.get(Ge.key.value)??this.evaluate(Ge.value,ne);ne.setVariable(Ge.key.value,St)}else throw new Error(`Unknown argument type: ${tt.type}`)}return this.evaluateBlock(C.body,ne)})),new Ne}evaluateCallStatement(C,X){const j=new je((tt,lt)=>{const Ge=new He(lt);if(C.callerArgs)for(let St=0;St<C.callerArgs.length;++St){const kt=C.callerArgs[St];if(kt.type!=="Identifier")throw new Error(`Caller parameter must be an identifier, got ${kt.type}`);Ge.setVariable(kt.value,tt[St]??new et)}return this.evaluateBlock(C.body,Ge)}),[Y,ne]=this.evaluateArguments(C.call.args,X);Y.push(new We(ne));const he=this.evaluate(C.call.callee,X);if(he.type!=="FunctionValue")throw new Error(`Cannot call something that is not a function: got ${he.type}`);const Se=new He(X);return Se.setVariable("caller",j),he.value(Y,Se)}evaluateFilterStatement(C,X){const j=this.evaluateBlock(C.body,X);return this.applyFilter(j,C.filter,X)}evaluate(C,X){if(!C)return new et;switch(C.type){case"Program":return this.evalProgram(C,X);case"Set":return this.evaluateSet(C,X);case"If":return this.evaluateIf(C,X);case"For":return this.evaluateFor(C,X);case"Macro":return this.evaluateMacro(C,X);case"CallStatement":return this.evaluateCallStatement(C,X);case"Break":throw new _e;case"Continue":throw new Ie;case"IntegerLiteral":return new ge(C.value);case"FloatLiteral":return new Ee(C.value);case"StringLiteral":return new we(C.value);case"ArrayLiteral":return new be(C.value.map(j=>this.evaluate(j,X)));case"TupleLiteral":return new st(C.value.map(j=>this.evaluate(j,X)));case"ObjectLiteral":{const j=new Map;for(const[Y,ne]of C.value){const he=this.evaluate(Y,X);if(!(he instanceof we))throw new Error(`Object keys must be strings: got ${he.type}`);j.set(he.value,this.evaluate(ne,X))}return new De(j)}case"Identifier":return this.evaluateIdentifier(C,X);case"CallExpression":return this.evaluateCallExpression(C,X);case"MemberExpression":return this.evaluateMemberExpression(C,X);case"UnaryExpression":return this.evaluateUnaryExpression(C,X);case"BinaryExpression":return this.evaluateBinaryExpression(C,X);case"FilterExpression":return this.evaluateFilterExpression(C,X);case"FilterStatement":return this.evaluateFilterStatement(C,X);case"TestExpression":return this.evaluateTestExpression(C,X);case"SelectExpression":return this.evaluateSelectExpression(C,X);case"Ternary":return this.evaluateTernaryExpression(C,X);case"Comment":return new Ne;default:throw new SyntaxError(`Unknown node type: ${C.type}`)}}};function Ct(C){switch(typeof C){case"number":return Number.isInteger(C)?new ge(C):new Ee(C);case"string":return new we(C);case"boolean":return new Ae(C);case"undefined":return new et;case"object":return C===null?new Ne:Array.isArray(C)?new be(C.map(Ct)):new De(new Map(Object.entries(C).map(([X,j])=>[X,Ct(j)])));case"function":return new je((X,j)=>{const Y=C(...X.map(ne=>ne.value))??null;return Ct(Y)});default:throw new Error(`Cannot convert to runtime value: ${C}`)}}function At(C,X,j){const Y=j??0;switch(C.type){case"NullValue":case"UndefinedValue":return"null";case"IntegerValue":case"FloatValue":case"StringValue":case"BooleanValue":return JSON.stringify(C.value);case"ArrayValue":case"ObjectValue":{const ne=X?" ".repeat(X):"",he=`
`+ne.repeat(Y),Se=he+ne;if(C.type==="ArrayValue"){const tt=C.value.map(lt=>At(lt,X,Y+1));return X?`[${Se}${tt.join(`,${Se}`)}${he}]`:`[${tt.join(", ")}]`}else{const tt=Array.from(C.value.entries()).map(([lt,Ge])=>{const St=`"${lt}": ${At(Ge,X,Y+1)}`;return X?`${Se}${St}`:St});return X?`{${tt.join(",")}${he}}`:`{${tt.join(", ")}}`}}default:throw new Error(`Cannot convert to JSON: ${C.type}`)}}var ft=`
`,Mr="{%- ",Gr=" -%}";function Or(C){switch(C.operator.type){case"MultiplicativeBinaryOperator":return 4;case"AdditiveBinaryOperator":return 3;case"ComparisonBinaryOperator":return 2;case"Identifier":return C.operator.value==="and"?1:C.operator.value==="in"||C.operator.value==="not in"?2:0}return 0}function rs(C,X="	"){const j=typeof X=="number"?" ".repeat(X):X;return Ir(C.body,0,j).replace(/\n$/,"")}function Kt(...C){return Mr+C.join(" ")+Gr}function Ir(C,X,j){return C.map(Y=>Js(Y,X,j)).join(ft)}function Js(C,X,j){const Y=j.repeat(X);switch(C.type){case"Program":return Ir(C.body,X,j);case"If":return Zs(C,X,j);case"For":return js(C,X,j);case"Set":return Vs(C,X,j);case"Macro":return dt(C,X,j);case"Break":return Y+Kt("break");case"Continue":return Y+Kt("continue");case"CallStatement":return ks(C,X,j);case"FilterStatement":return Wt(C,X,j);case"Comment":return Y+"{# "+C.value+" #}";default:return Y+"{{- "+Et(C)+" -}}"}}function Zs(C,X,j){const Y=j.repeat(X),ne=[];let he=C;for(;he&&(ne.push({test:he.test,body:he.body}),he.alternate.length===1&&he.alternate[0].type==="If");)he=he.alternate[0];let Se=Y+Kt("if",Et(ne[0].test))+ft+Ir(ne[0].body,X+1,j);for(let tt=1;tt<ne.length;++tt)Se+=ft+Y+Kt("elif",Et(ne[tt].test))+ft+Ir(ne[tt].body,X+1,j);return he&&he.alternate.length>0&&(Se+=ft+Y+Kt("else")+ft+Ir(he.alternate,X+1,j)),Se+=ft+Y+Kt("endif"),Se}function js(C,X,j){const Y=j.repeat(X);let ne="";if(C.iterable.type==="SelectExpression"){const Se=C.iterable;ne=`${Et(Se.lhs)} if ${Et(Se.test)}`}else ne=Et(C.iterable);let he=Y+Kt("for",Et(C.loopvar),"in",ne)+ft+Ir(C.body,X+1,j);return C.defaultBlock.length>0&&(he+=ft+Y+Kt("else")+ft+Ir(C.defaultBlock,X+1,j)),he+=ft+Y+Kt("endfor"),he}function Vs(C,X,j){const Y=j.repeat(X),ne=Et(C.assignee),he=C.value?Et(C.value):"",Se=Y+Kt("set",`${ne}${C.value?" = "+he:""}`);return C.body.length===0?Se:Se+ft+Ir(C.body,X+1,j)+ft+Y+Kt("endset")}function dt(C,X,j){const Y=j.repeat(X),ne=C.args.map(Et).join(", ");return Y+Kt("macro",`${C.name.value}(${ne})`)+ft+Ir(C.body,X+1,j)+ft+Y+Kt("endmacro")}function ks(C,X,j){const Y=j.repeat(X),ne=C.callerArgs&&C.callerArgs.length>0?`(${C.callerArgs.map(Et).join(", ")})`:"",he=Et(C.call);let Se=Y+Kt(`call${ne}`,he)+ft;return Se+=Ir(C.body,X+1,j)+ft,Se+=Y+Kt("endcall"),Se}function Wt(C,X,j){const Y=j.repeat(X),ne=C.filter.type==="Identifier"?C.filter.value:Et(C.filter);let he=Y+Kt("filter",ne)+ft;return he+=Ir(C.body,X+1,j)+ft,he+=Y+Kt("endfilter"),he}function Et(C,X=-1){switch(C.type){case"SpreadExpression":return`*${Et(C.argument)}`;case"Identifier":return C.value;case"IntegerLiteral":return`${C.value}`;case"FloatLiteral":return`${C.value}`;case"StringLiteral":return JSON.stringify(C.value);case"BinaryExpression":{const j=C,Y=Or(j),ne=Et(j.left,Y),he=Et(j.right,Y+1),Se=`${ne} ${j.operator.value} ${he}`;return Y<X?`(${Se})`:Se}case"UnaryExpression":{const j=C;return j.operator.value+(j.operator.value==="not"?" ":"")+Et(j.argument,1/0)}case"CallExpression":{const j=C,Y=j.args.map(Et).join(", ");return`${Et(j.callee)}(${Y})`}case"MemberExpression":{const j=C;let Y=Et(j.object);["Identifier","MemberExpression","CallExpression","StringLiteral","IntegerLiteral","FloatLiteral","ArrayLiteral","TupleLiteral","ObjectLiteral"].includes(j.object.type)||(Y=`(${Y})`);let ne=Et(j.property);return!j.computed&&j.property.type!=="Identifier"&&(ne=`(${ne})`),j.computed?`${Y}[${ne}]`:`${Y}.${ne}`}case"FilterExpression":{const j=C,Y=Et(j.operand,1/0);return j.filter.type==="CallExpression"?`${Y} | ${Et(j.filter)}`:`${Y} | ${j.filter.value}`}case"SelectExpression":{const j=C;return`${Et(j.lhs)} if ${Et(j.test)}`}case"TestExpression":{const j=C;return`${Et(j.operand)} is${j.negate?" not":""} ${j.test.value}`}case"ArrayLiteral":case"TupleLiteral":{const j=C.value.map(Et),Y=C.type==="ArrayLiteral"?"[]":"()";return`${Y[0]}${j.join(", ")}${Y[1]}`}case"ObjectLiteral":return`{${Array.from(C.value.entries()).map(([Y,ne])=>`${Et(Y)}: ${Et(ne)}`).join(", ")}}`;case"SliceExpression":{const j=C,Y=j.start?Et(j.start):"",ne=j.stop?Et(j.stop):"",he=j.step?`:${Et(j.step)}`:"";return`${Y}:${ne}${he}`}case"KeywordArgumentExpression":{const j=C;return`${j.key.value}=${Et(j.value)}`}case"Ternary":{const j=C,Y=`${Et(j.trueExpr)} if ${Et(j.condition,0)} else ${Et(j.falseExpr)}`;return X>-1?`(${Y})`:Y}default:throw new Error(`Unknown expression type: ${C.type}`)}}var Is=class{parsed;constructor(C){const X=p(C,{lstrip_blocks:!0,trim_blocks:!0});this.parsed=ke(X)}render(C){const X=new He;if(Je(X),C)for(const[ne,he]of Object.entries(C))X.set(ne,he);return new Ze(X).run(this.parsed).value}format(C){return rs(this.parsed,C?.indent||"	")}}}),"./src/backends/onnx.js":((e,r,t)=>{var s;t.r(r),t.d(r,{Tensor:()=>a.Tensor,createInferenceSession:()=>I,deviceToExecutionProviders:()=>f,isONNXProxy:()=>$,isONNXTensor:()=>M});var n=t("./src/env.js"),i=t("?2ce3"),o=t("onnxruntime-web"),a=t("onnxruntime-common");const l=Object.freeze({auto:null,gpu:null,cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:{name:"webnn",deviceType:"cpu"},"webnn-npu":{name:"webnn",deviceType:"npu"},"webnn-gpu":{name:"webnn",deviceType:"gpu"},"webnn-cpu":{name:"webnn",deviceType:"cpu"}}),c=[];let p,d;const u=Symbol.for("onnxruntime");if(u in globalThis)d=globalThis[u];else if(n.apis.IS_NODE_ENV){switch(d=i??(s||(s=t.t(i,2))),process.platform){case"win32":c.push("dml");break;case"linux":process.arch==="x64"&&c.push("cuda");break}c.push("cpu"),p=["cpu"]}else d=o,n.apis.IS_WEBNN_AVAILABLE&&c.push("webnn-npu","webnn-gpu","webnn-cpu","webnn"),n.apis.IS_WEBGPU_AVAILABLE&&c.push("webgpu"),c.push("wasm"),p=["wasm"];const _=d.InferenceSession;function f(v=null){if(!v)return p;switch(v){case"auto":return c;case"gpu":return c.filter(T=>["webgpu","cuda","dml","webnn-gpu"].includes(T))}if(c.includes(v))return[l[v]??v];throw new Error(`Unsupported device: "${v}". Should be one of: ${c.join(", ")}.`)}let w=null;async function I(v,T,E){w&&await w;const x=_.create(v,T);w??=x;const S=await x;return S.config=E,S}function M(v){return v instanceof d.Tensor}const y=d?.env;y?.wasm&&(!(typeof ServiceWorkerGlobalScope<"u"&&self instanceof ServiceWorkerGlobalScope)&&!y.wasm.wasmPaths&&(y.wasm.wasmPaths=`https://cdn.jsdelivr.net/npm/@huggingface/transformers@${n.env.version}/dist/`),y.wasm.proxy=!1),y?.webgpu&&(y.webgpu.powerPreference="high-performance");function $(){return y?.wasm?.proxy}n.env.backends.onnx=y}),"./src/base/feature_extraction_utils.js":((e,r,t)=>{t.r(r),t.d(r,{FeatureExtractor:()=>o,validate_audio_inputs:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),i=t("./src/utils/hub.js");class o extends n.Callable{constructor(c){super(),this.config=c}static async from_pretrained(c,p={}){const d=await(0,i.getModelJSON)(c,s.FEATURE_EXTRACTOR_NAME,!0,p);return new this(d)}}function a(l,c){if(!(l instanceof Float32Array||l instanceof Float64Array))throw new Error(`${c} expects input to be a Float32Array or a Float64Array, but got ${l?.constructor?.name??typeof l} instead. If using the feature extractor directly, remember to use \`read_audio(url, sampling_rate)\` to obtain the raw audio data of the file/url.`)}}),"./src/base/image_processors_utils.js":((e,r,t)=>{t.r(r),t.d(r,{ImageProcessor:()=>v,center_to_corners_format:()=>d,post_process_instance_segmentation:()=>$,post_process_object_detection:()=>u,post_process_panoptic_segmentation:()=>y,post_process_semantic_segmentation:()=>_});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");t("./src/utils/image.js");var o=t("./src/utils/core.js"),a=t("./src/utils/hub.js"),l=t("./src/utils/constants.js");function c(T,E,x=0,S=null){const z=T/E;let D=(0,i.bankers_round)(z)*E;return S!==null&&D>S&&(D=Math.floor(z)*E),D<x&&(D=Math.ceil(z)*E),D}function p([T,E],x){return[Math.max(Math.floor(T/x),1)*x,Math.max(Math.floor(E/x),1)*x]}function d([T,E,x,S]){return[T-x/2,E-S/2,T+x/2,E+S/2]}function u(T,E=.5,x=null,S=!1){const z=T.logits,D=T.pred_boxes,[K,q,O]=z.dims;if(x!==null&&x.length!==K)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let Z=[];for(let Q=0;Q<K;++Q){let J=x!==null?x[Q]:null,re={boxes:[],classes:[],scores:[]},te=z[Q],ce=D[Q];for(let ue=0;ue<q;++ue){let B=te[ue],F=[],G;if(S){G=B.sigmoid().data;for(let N=0;N<G.length;++N)G[N]>E&&F.push(N)}else{let N=(0,i.max)(B.data)[1];if(N===O-1||(G=(0,i.softmax)(B.data),G[N]<E))continue;F.push(N)}for(const N of F){let ae=ce[ue].data;ae=d(ae),J!==null&&(ae=ae.map((ke,ve)=>ke*J[(ve+1)%2])),re.boxes.push(ae),re.classes.push(N),re.scores.push(G[N])}}Z.push(re)}return Z}function _(T,E=null){const x=T.logits,S=x.dims[0];if(E!==null&&E.length!==S)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const z=[];for(let D=0;D<S;++D){const K=E!==null?E[D]:null;let q=x[D];K!==null&&(q=(0,n.interpolate)(q,K,"bilinear",!1));const[O,Z]=K??q.dims.slice(-2),Q=new n.Tensor("int32",new Int32Array(O*Z),[O,Z]),J=q[0].data,re=Q.data;for(let ue=1;ue<q.dims[0];++ue){const B=q[ue].data;for(let F=0;F<B.length;++F)B[F]>J[F]&&(J[F]=B[F],re[F]=ue)}const te=new Array(q.dims[0]);for(let ue=0;ue<re.length;++ue){const B=re[ue];te[B]=B}const ce=te.filter(ue=>ue!==void 0);z.push({segmentation:Q,labels:ce})}return z}function f(T,E,x,S){const z=[],D=[],K=[];for(let q=0;q<T.dims[0];++q){const O=T[q],Z=E[q],Q=(0,i.max)(O.data)[1];if(Q===S)continue;const re=(0,i.softmax)(O.data)[Q];re>x&&(z.push(Z),D.push(re),K.push(Q))}return[z,D,K]}function w(T,E,x,S=.5,z=.8){const D=[];let K=0,q=0;const O=E[x].data;for(let Q=0;Q<T.length;++Q)T[Q]===x&&(D.push(Q),++K),O[Q]>=S&&++q;let Z=K>0&&q>0;return Z&&(Z=K/q>z),[Z,D]}function I(T,E,x,S,z,D=null,K=null){const[q,O]=K??T[0].dims,Z=new n.Tensor("int32",new Int32Array(q*O),[q,O]),Q=[];if(K!==null)for(let ue=0;ue<T.length;++ue)T[ue]=(0,n.interpolate)(T[ue],K,"bilinear",!1);const J=new Int32Array(T[0].data.length),re=new Float32Array(T[0].data.length);for(let ue=0;ue<T.length;++ue){let B=E[ue];const F=T[ue].data;for(let G=0;G<F.length;++G)F[G]*=B,F[G]>re[G]&&(J[G]=ue,re[G]=F[G])}let te=0;const ce=Z.data;for(let ue=0;ue<x.length;++ue){const B=x[ue],[F,G]=w(J,T,ue,S,z);if(F){++te;for(const N of G)ce[N]=te;Q.push({id:te,label_id:B,score:E[ue]})}}return[Z,Q]}function M(T,E,x=28,S=3136,z=784*1280){if(T<x||E<x)throw new Error(`height:${T} or width:${E} must be larger than factor:${x}`);if(Math.max(T,E)/Math.min(T,E)>200)throw new Error(`absolute aspect ratio must be smaller than 200, got ${Math.max(T,E)/Math.min(T,E)}`);let D=Math.round(T/x)*x,K=Math.round(E/x)*x;if(D*K>z){const q=Math.sqrt(T*E/z);D=Math.floor(T/q/x)*x,K=Math.floor(E/q/x)*x}else if(D*K<S){const q=Math.sqrt(S/(T*E));D=Math.ceil(T*q/x)*x,K=Math.ceil(E*q/x)*x}return[D,K]}function y(T,E=.5,x=.5,S=.8,z=null,D=null){z===null&&(console.warn("`label_ids_to_fuse` unset. No instance will be fused."),z=new Set);const K=T.class_queries_logits??T.logits,O=(T.masks_queries_logits??T.pred_masks).sigmoid();let[Z,Q,J]=K.dims;if(J-=1,D!==null&&D.length!==Z)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");let re=[];for(let te=0;te<Z;++te){let ce=D!==null?D[te]:null,ue=K[te],B=O[te],[F,G,N]=f(ue,B,E,J);if(N.length===0){let[ve,Fe]=ce??B.dims.slice(-2),Qe=new n.Tensor("int32",new Int32Array(ve*Fe).fill(-1),[ve,Fe]);re.push({segmentation:Qe,segments_info:[]});continue}let[ae,ke]=I(F,G,N,x,S,z,ce);re.push({segmentation:ae,segments_info:ke})}return re}function $(T,E=.5,x=null){throw new Error("`post_process_instance_segmentation` is not yet implemented.")}class v extends s.Callable{constructor(E){super(),this.image_mean=E.image_mean??E.mean,this.image_std=E.image_std??E.std,this.resample=E.resample??2,this.do_rescale=E.do_rescale??!0,this.rescale_factor=E.rescale_factor??1/255,this.do_normalize=E.do_normalize,this.do_thumbnail=E.do_thumbnail,this.size=E.size??E.image_size,this.do_resize=E.do_resize??this.size!==void 0,this.size_divisibility=E.size_divisibility??E.size_divisor,this.do_center_crop=E.do_center_crop,this.crop_size=E.crop_size,this.do_convert_rgb=E.do_convert_rgb??!0,this.do_crop_margin=E.do_crop_margin,this.pad_size=E.pad_size,this.do_pad=E.do_pad,this.min_pixels=E.min_pixels,this.max_pixels=E.max_pixels,this.do_pad&&!this.pad_size&&this.size&&this.size.width!==void 0&&this.size.height!==void 0&&(this.pad_size=this.size),this.do_flip_channel_order=E.do_flip_channel_order??!1,this.config=E}async thumbnail(E,x,S=2){const z=E.height,D=E.width,K=x.height,q=x.width;let O=Math.min(z,K),Z=Math.min(D,q);return O===z&&Z===D?E:(z>D?Z=Math.floor(D*O/z):D>z&&(O=Math.floor(z*Z/D)),await E.resize(Z,O,{resample:S}))}async crop_margin(E,x=200){const S=E.clone().grayscale(),z=(0,i.min)(S.data)[0],K=(0,i.max)(S.data)[0]-z;if(K===0)return E;const q=x/255;let O=S.width,Z=S.height,Q=0,J=0;const re=S.data;for(let te=0;te<S.height;++te){const ce=te*S.width;for(let ue=0;ue<S.width;++ue)(re[ce+ue]-z)/K<q&&(O=Math.min(O,ue),Z=Math.min(Z,te),Q=Math.max(Q,ue),J=Math.max(J,te))}return E=await E.crop([O,Z,Q,J]),E}pad_image(E,x,S,{mode:z="constant",center:D=!1,constant_values:K=0}={}){const[q,O,Z]=x;let Q,J;if(typeof S=="number"?(Q=S,J=S):S==="square"?Q=J=Math.max(q,O):(Q=S.width,J=S.height),Q!==O||J!==q){const re=new Float32Array(Q*J*Z);if(Array.isArray(K))for(let ue=0;ue<re.length;++ue)re[ue]=K[ue%Z];else K!==0&&re.fill(K);const[te,ce]=D?[Math.floor((Q-O)/2),Math.floor((J-q)/2)]:[0,0];for(let ue=0;ue<q;++ue){const B=(ue+ce)*Q,F=ue*O;for(let G=0;G<O;++G){const N=(B+G+te)*Z,ae=(F+G)*Z;for(let ke=0;ke<Z;++ke)re[N+ke]=E[ae+ke]}}if(z==="symmetric"){if(D)throw new Error("`center` padding is not supported when `mode` is set to `symmetric`.");const ue=q-1,B=O-1;for(let F=0;F<J;++F){const G=F*Q,N=(0,o.calculateReflectOffset)(F,ue)*O;for(let ae=0;ae<Q;++ae){if(F<q&&ae<O)continue;const ke=(G+ae)*Z,ve=(N+(0,o.calculateReflectOffset)(ae,B))*Z;for(let Fe=0;Fe<Z;++Fe)re[ke+Fe]=E[ve+Fe]}}}E=re,x=[J,Q,Z]}return[E,x]}rescale(E){for(let x=0;x<E.length;++x)E[x]=this.rescale_factor*E[x]}get_resize_output_image_size(E,x){const[S,z]=E.size;let D,K;if(this.do_thumbnail){const{height:q,width:O}=x;D=Math.min(q,O)}else Number.isInteger(x)?(D=x,K=this.config.max_size??D):x!==void 0&&(D=x.shortest_edge,K=x.longest_edge);if(D!==void 0||K!==void 0){const q=D===void 0?1:Math.max(D/S,D/z),O=S*q,Z=z*q,Q=K===void 0?1:Math.min(K/O,K/Z);let J=Math.floor(Number((O*Q).toFixed(2))),re=Math.floor(Number((Z*Q).toFixed(2)));return this.size_divisibility!==void 0&&([J,re]=p([J,re],this.size_divisibility)),[J,re]}else if(x!==void 0&&x.width!==void 0&&x.height!==void 0){let q=x.width,O=x.height;if(this.config.keep_aspect_ratio&&this.config.ensure_multiple_of){let Z=O/z,Q=q/S;Math.abs(1-Q)<Math.abs(1-Z)?Z=Q:Q=Z,O=c(Z*z,this.config.ensure_multiple_of),q=c(Q*S,this.config.ensure_multiple_of)}return[q,O]}else{if(this.size_divisibility!==void 0)return p([S,z],this.size_divisibility);if(this.min_pixels!==void 0&&this.max_pixels!==void 0){const q=this.config.patch_size*this.config.merge_size;return M(z,S,q,this.min_pixels,this.max_pixels)}else throw new Error(`Could not resize image due to unsupported \`this.size\` option in config: ${JSON.stringify(x)}`)}}async resize(E){const[x,S]=this.get_resize_output_image_size(E,this.size);return await E.resize(x,S,{resample:this.resample})}async preprocess(E,{do_normalize:x=null,do_pad:S=null,do_convert_rgb:z=null,do_convert_grayscale:D=null,do_flip_channel_order:K=null}={}){this.do_crop_margin&&(E=await this.crop_margin(E));const[q,O]=E.size;if(z??this.do_convert_rgb?E=E.rgb():D&&(E=E.grayscale()),this.do_resize&&(E=await this.resize(E)),this.do_thumbnail&&(E=await this.thumbnail(E,this.size,this.resample)),this.do_center_crop){let te,ce;Number.isInteger(this.crop_size)?(te=this.crop_size,ce=this.crop_size):(te=this.crop_size.width,ce=this.crop_size.height),E=await E.center_crop(te,ce)}const Z=[E.height,E.width];let Q=Float32Array.from(E.data),J=[E.height,E.width,E.channels];if(this.do_rescale&&this.rescale(Q),x??this.do_normalize){let te=this.image_mean;Array.isArray(this.image_mean)||(te=new Array(E.channels).fill(te));let ce=this.image_std;if(Array.isArray(this.image_std)||(ce=new Array(E.channels).fill(te)),te.length!==E.channels||ce.length!==E.channels)throw new Error(`When set to arrays, the length of \`image_mean\` (${te.length}) and \`image_std\` (${ce.length}) must match the number of channels in the image (${E.channels}).`);for(let ue=0;ue<Q.length;ue+=E.channels)for(let B=0;B<E.channels;++B)Q[ue+B]=(Q[ue+B]-te[B])/ce[B]}if(S??this.do_pad){if(this.pad_size)[Q,J]=this.pad_image(Q,[E.height,E.width,E.channels],this.pad_size);else if(this.size_divisibility){const[te,ce]=p([J[1],J[0]],this.size_divisibility);[Q,J]=this.pad_image(Q,J,{width:te,height:ce})}}if(K??this.do_flip_channel_order){if(J[2]!==3)throw new Error("Flipping channel order is only supported for RGB images.");for(let te=0;te<Q.length;te+=3){const ce=Q[te];Q[te]=Q[te+2],Q[te+2]=ce}}const re=new n.Tensor("float32",Q,J).permute(2,0,1);return{original_size:[O,q],reshaped_input_size:Z,pixel_values:re}}async _call(E,...x){Array.isArray(E)||(E=[E]);const S=await Promise.all(E.map(D=>this.preprocess(D)));return{pixel_values:(0,n.stack)(S.map(D=>D.pixel_values),0),original_sizes:S.map(D=>D.original_size),reshaped_input_sizes:S.map(D=>D.reshaped_input_size)}}static async from_pretrained(E,x={}){const S=await(0,a.getModelJSON)(E,l.IMAGE_PROCESSOR_NAME,!0,x);return new this(S)}}}),"./src/base/processing_utils.js":((e,r,t)=>{t.r(r),t.d(r,{Processor:()=>o});var s=t("./src/utils/constants.js"),n=t("./src/utils/generic.js"),i=t("./src/utils/hub.js");class o extends n.Callable{static classes=["image_processor_class","tokenizer_class","feature_extractor_class"];static uses_processor_config=!1;static uses_chat_template_file=!1;constructor(l,c,p){super(),this.config=l,this.components=c,this.chat_template=p}get image_processor(){return this.components.image_processor}get tokenizer(){return this.components.tokenizer}get feature_extractor(){return this.components.feature_extractor}apply_chat_template(l,c={}){if(!this.tokenizer)throw new Error("Unable to apply chat template without a tokenizer.");return this.tokenizer.apply_chat_template(l,{tokenize:!1,chat_template:this.chat_template??void 0,...c})}batch_decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.batch_decode(...l)}decode(...l){if(!this.tokenizer)throw new Error("Unable to decode without a tokenizer.");return this.tokenizer.decode(...l)}async _call(l,...c){for(const p of[this.image_processor,this.feature_extractor,this.tokenizer])if(p)return p(l,...c);throw new Error("No image processor, feature extractor, or tokenizer found.")}static async from_pretrained(l,c={}){const[p,d,u]=await Promise.all([this.uses_processor_config?(0,i.getModelJSON)(l,s.PROCESSOR_NAME,!0,c):{},Promise.all(this.classes.filter(_=>_ in this).map(async _=>{const f=await this[_].from_pretrained(l,c);return[_.replace(/_class$/,""),f]})).then(Object.fromEntries),this.uses_chat_template_file?(0,i.getModelText)(l,s.CHAT_TEMPLATE_NAME,!0,c):null]);return new this(p,d,u)}}}),"./src/configs.js":((e,r,t)=>{t.r(r),t.d(r,{AutoConfig:()=>p,PretrainedConfig:()=>c,getCacheShapes:()=>a});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js");async function i(d,u){return await(0,n.getModelJSON)(d,"config.json",!0,u)}function o(d){const u={};let _={};switch(d.model_type){case"llava":case"paligemma":case"gemma3":case"florence2":case"llava_onevision":case"idefics3":case"ultravox":case"voxtral":case"smolvlm":case"gemma3n":_=o(d.text_config);break;case"moondream1":_=o(d.phi_config);break;case"musicgen":_=o(d.decoder);break;case"multi_modality":_=o(d.language_config);break;case"gpt2":case"gptj":case"jais":case"codegen":case"gpt_bigcode":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="n_embd";break;case"gpt_neox":case"stablelm":case"opt":case"falcon":case"modernbert-decoder":u.num_heads="num_attention_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size";break;case"llama":case"arcee":case"lfm2":case"smollm3":case"olmo":case"olmo2":case"mobilellm":case"granite":case"cohere":case"mistral":case"starcoder2":case"qwen2":case"qwen2_vl":case"phi":case"phi3":case"phi3_v":case"llava_qwen2":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.hidden_size="hidden_size",u.num_attention_heads="num_attention_heads",u.dim_kv="head_dim";break;case"qwen3":case"gemma":case"gemma2":case"gemma3_text":case"gemma3n_text":case"glm":case"helium":case"ernie4_5":u.num_heads="num_key_value_heads",u.num_layers="num_hidden_layers",u.dim_kv="head_dim";break;case"openelm":u.num_heads="num_kv_heads",u.num_layers="num_transformer_layers",u.dim_kv="head_dim";break;case"gpt_neo":case"donut-swin":u.num_heads="num_heads",u.num_layers="num_layers",u.hidden_size="hidden_size";break;case"bloom":u.num_heads="n_head",u.num_layers="n_layer",u.hidden_size="hidden_size";break;case"mpt":u.num_heads="n_heads",u.num_layers="n_layers",u.hidden_size="d_model";break;case"exaone":u.num_heads="num_key_value_heads",u.num_layers="num_layers",u.dim_kv="head_dim",u.num_attention_heads="num_attention_heads";break;case"t5":case"mt5":case"longt5":u.num_decoder_layers="num_decoder_layers",u.num_decoder_heads="num_heads",u.decoder_dim_kv="d_kv",u.num_encoder_layers="num_layers",u.num_encoder_heads="num_heads",u.encoder_dim_kv="d_kv";break;case"bart":case"mbart":case"marian":case"whisper":case"lite-whisper":case"m2m_100":case"blenderbot":case"blenderbot-small":case"florence2_language":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="d_model",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="d_model";break;case"speecht5":u.num_decoder_layers="decoder_layers",u.num_decoder_heads="decoder_attention_heads",u.decoder_hidden_size="hidden_size",u.num_encoder_layers="encoder_layers",u.num_encoder_heads="encoder_attention_heads",u.encoder_hidden_size="hidden_size";break;case"trocr":u.num_encoder_layers=u.num_decoder_layers="decoder_layers",u.num_encoder_heads=u.num_decoder_heads="decoder_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="d_model";break;case"musicgen_decoder":u.num_encoder_layers=u.num_decoder_layers="num_hidden_layers",u.num_encoder_heads=u.num_decoder_heads="num_attention_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"moonshine":u.num_decoder_layers="decoder_num_hidden_layers",u.num_decoder_heads="decoder_num_key_value_heads",u.num_encoder_layers="encoder_num_hidden_layers",u.num_encoder_heads="encoder_num_key_value_heads",u.encoder_hidden_size=u.decoder_hidden_size="hidden_size";break;case"vision-encoder-decoder":const w=o(d.decoder),I="num_decoder_layers"in w,M=(0,s.pick)(d,["model_type","is_encoder_decoder"]);return I?(M.num_decoder_layers=w.num_decoder_layers,M.num_decoder_heads=w.num_decoder_heads,M.decoder_hidden_size=w.decoder_hidden_size,M.num_encoder_layers=w.num_encoder_layers,M.num_encoder_heads=w.num_encoder_heads,M.encoder_hidden_size=w.encoder_hidden_size):(M.num_layers=w.num_layers,M.num_heads=w.num_heads,M.hidden_size=w.hidden_size),M}const f={..._,...(0,s.pick)(d,["model_type","multi_query","is_encoder_decoder"])};for(const w in u)f[w]=d[u[w]];return f}function a(d,u){if(d.model_type==="lfm2"){const _=u?.prefix??"past_key_values",f=_==="present"?"present":"past",w={},{layer_types:I,num_attention_heads:M,num_key_value_heads:y,hidden_size:$,conv_L_cache:v}=d,T=$/M,E=u?.batch_size??1;for(let x=0;x<I.length;++x)if(I[x]==="full_attention")for(const S of["key","value"])w[`${_}.${x}.${S}`]=[E,y,0,T];else if(I[x]==="conv")w[`${f}_conv.${x}`]=[E,$,v];else throw new Error(`Unsupported layer type: ${I[x]}`);return w}return l(d,u)}function l(d,{prefix:u="past_key_values",batch_size:_=1}={}){const f={},w=d.normalized_config;if(w.is_encoder_decoder&&"num_encoder_heads"in w&&"num_decoder_heads"in w){const I=w.encoder_dim_kv??w.encoder_hidden_size/w.num_encoder_heads,M=w.decoder_dim_kv??w.decoder_hidden_size/w.num_decoder_heads,y=[_,w.num_encoder_heads,0,I],$=[_,w.num_decoder_heads,0,M];for(let v=0;v<w.num_decoder_layers;++v)f[`${u}.${v}.encoder.key`]=y,f[`${u}.${v}.encoder.value`]=y,f[`${u}.${v}.decoder.key`]=$,f[`${u}.${v}.decoder.value`]=$}else{const I=w.num_heads,M=w.num_layers,y=w.dim_kv??w.hidden_size/(w.num_attention_heads??I);if(w.model_type==="falcon"){const $=[_*I,0,y];for(let v=0;v<M;++v)f[`${u}.${v}.key`]=$,f[`${u}.${v}.value`]=$}else if(w.multi_query){const $=[_*I,0,2*y];for(let v=0;v<M;++v)f[`${u}.${v}.key_value`]=$}else if(w.model_type==="bloom"){const $=[_*I,y,0],v=[_*I,0,y];for(let T=0;T<M;++T)f[`${u}.${T}.key`]=$,f[`${u}.${T}.value`]=v}else if(w.model_type==="openelm")for(let $=0;$<M;++$){const v=[_,I[$],0,y];f[`${u}.${$}.key`]=v,f[`${u}.${$}.value`]=v}else{const $=[_,I,0,y];for(let v=0;v<M;++v)f[`${u}.${v}.key`]=$,f[`${u}.${v}.value`]=$}}return f}class c{model_type=null;is_encoder_decoder=!1;max_position_embeddings;"transformers.js_config";constructor(u){Object.assign(this,u),this.normalized_config=o(this)}static async from_pretrained(u,{progress_callback:_=null,config:f=null,cache_dir:w=null,local_files_only:I=!1,revision:M="main"}={}){f&&!(f instanceof c)&&(f=new c(f));const y=f??await i(u,{progress_callback:_,config:f,cache_dir:w,local_files_only:I,revision:M});return new this(y)}}class p{static async from_pretrained(...u){return c.from_pretrained(...u)}}}),"./src/env.js":((e,r,t)=>{t.r(r),t.d(r,{apis:()=>M,env:()=>x});var s=t("?db59"),n=t("?383f"),i=t("?fa4b");const o="3.7.2",a=typeof window<"u"&&typeof window.document<"u",l=typeof self<"u"&&["DedicatedWorkerGlobalScope","ServiceWorkerGlobalScope","SharedWorkerGlobalScope"].includes(self.constructor?.name),c=typeof self<"u"&&"caches"in self,p=typeof navigator<"u"&&"gpu"in navigator,d=typeof navigator<"u"&&"ml"in navigator,u=typeof process<"u",_=u&&process?.release?.name==="node",f=!S(s),w=!S(n),I=typeof globalThis.Deno<"u",M=Object.freeze({IS_BROWSER_ENV:a,IS_WEBWORKER_ENV:l,IS_WEB_CACHE_AVAILABLE:c,IS_WEBGPU_AVAILABLE:p,IS_WEBNN_AVAILABLE:d,IS_PROCESS_AVAILABLE:u,IS_NODE_ENV:_,IS_FS_AVAILABLE:f,IS_PATH_AVAILABLE:w}),y=f&&w;let $="./";if(y){const z=Object(import.meta).url;z?$=n.dirname(n.dirname(i.fileURLToPath(z))):typeof __dirname<"u"&&($=n.dirname(__dirname))}const v=y?n.join($,"/.cache/"):null,T="/models/",E=y?n.join($,T):T,x={version:o,backends:{onnx:{}},allowRemoteModels:!0,remoteHost:"https://huggingface.co/",remotePathTemplate:"{model}/resolve/{revision}/",allowLocalModels:!(a||l),localModelPath:E,useFS:f,useBrowserCache:c&&!I,useFSCache:f,cacheDir:v,useCustomCache:!1,customCache:null};function S(z){return Object.keys(z).length===0}}),"./src/generation/configuration_utils.js":((e,r,t)=>{t.r(r),t.d(r,{GenerationConfig:()=>n});var s=t("./src/utils/core.js");class n{max_length=20;max_new_tokens=null;min_length=0;min_new_tokens=null;early_stopping=!1;max_time=null;do_sample=!1;num_beams=1;num_beam_groups=1;penalty_alpha=null;use_cache=!0;temperature=1;top_k=50;top_p=1;typical_p=1;epsilon_cutoff=0;eta_cutoff=0;diversity_penalty=0;repetition_penalty=1;encoder_repetition_penalty=1;length_penalty=1;no_repeat_ngram_size=0;bad_words_ids=null;force_words_ids=null;renormalize_logits=!1;constraints=null;forced_bos_token_id=null;forced_eos_token_id=null;remove_invalid_values=!1;exponential_decay_length_penalty=null;suppress_tokens=null;streamer=null;begin_suppress_tokens=null;forced_decoder_ids=null;guidance_scale=null;num_return_sequences=1;output_attentions=!1;output_hidden_states=!1;output_scores=!1;return_dict_in_generate=!1;pad_token_id=null;bos_token_id=null;eos_token_id=null;encoder_no_repeat_ngram_size=0;decoder_start_token_id=null;generation_kwargs={};constructor(o){Object.assign(this,(0,s.pick)(o,Object.getOwnPropertyNames(this)))}}}),"./src/generation/logits_process.js":((e,r,t)=>{t.r(r),t.d(r,{ClassifierFreeGuidanceLogitsProcessor:()=>M,ForcedBOSTokenLogitsProcessor:()=>l,ForcedEOSTokenLogitsProcessor:()=>c,LogitsProcessor:()=>i,LogitsProcessorList:()=>a,LogitsWarper:()=>o,MinLengthLogitsProcessor:()=>f,MinNewTokensLengthLogitsProcessor:()=>w,NoBadWordsLogitsProcessor:()=>I,NoRepeatNGramLogitsProcessor:()=>u,RepetitionPenaltyLogitsProcessor:()=>_,SuppressTokensAtBeginLogitsProcessor:()=>p,TemperatureLogitsWarper:()=>y,TopKLogitsWarper:()=>v,TopPLogitsWarper:()=>$,WhisperTimeStampLogitsProcessor:()=>d});var s=t("./src/utils/generic.js");t("./src/utils/tensor.js");var n=t("./src/utils/maths.js");class i extends s.Callable{_call(E,x){throw Error("`_call` should be implemented in a subclass")}}class o extends s.Callable{_call(E,x){throw Error("`_call` should be implemented in a subclass")}}class a extends s.Callable{constructor(){super(),this.processors=[]}push(E){this.processors.push(E)}extend(E){this.processors.push(...E)}_call(E,x){let S=x;for(const z of this.processors)S=z(E,S);return S}[Symbol.iterator](){return this.processors.values()}}class l extends i{constructor(E){super(),this.bos_token_id=E}_call(E,x){for(let S=0;S<E.length;++S)if(E[S].length===1){const z=x[S].data;z.fill(-1/0),z[this.bos_token_id]=0}return x}}class c extends i{constructor(E,x){super(),this.max_length=E,this.eos_token_id=Array.isArray(x)?x:[x]}_call(E,x){for(let S=0;S<E.length;++S)if(E[S].length===this.max_length-1){const z=x[S].data;z.fill(-1/0);for(const D of this.eos_token_id)z[D]=0}return x}}class p extends i{constructor(E,x){super(),this.begin_suppress_tokens=E,this.begin_index=x}_call(E,x){for(let S=0;S<E.length;++S)if(E[S].length===this.begin_index){const z=x[S].data;for(const D of this.begin_suppress_tokens)z[D]=-1/0}return x}}class d extends i{constructor(E,x){super(),this.eos_token_id=Array.isArray(E.eos_token_id)?E.eos_token_id[0]:E.eos_token_id,this.no_timestamps_token_id=E.no_timestamps_token_id,this.timestamp_begin=this.no_timestamps_token_id+1,this.begin_index=x.length,x.at(-1)===this.no_timestamps_token_id&&(this.begin_index-=1),this.max_initial_timestamp_index=E.max_initial_timestamp_index}_call(E,x){for(let S=0;S<E.length;++S){const z=x[S].data;if(z[this.no_timestamps_token_id]=-1/0,E[S].length===this.begin_index-1){z.fill(-1/0),z[this.timestamp_begin]=0;continue}const D=E[S].slice(this.begin_index),K=D.length>=1&&D[D.length-1]>=this.timestamp_begin,q=D.length<2||D[D.length-2]>=this.timestamp_begin;if(K&&(q?z.subarray(this.timestamp_begin).fill(-1/0):z.subarray(0,this.eos_token_id).fill(-1/0)),E[S].length===this.begin_index&&this.max_initial_timestamp_index!==null){const J=this.timestamp_begin+this.max_initial_timestamp_index;z.subarray(J+1).fill(-1/0)}const O=(0,n.log_softmax)(z),Z=Math.log(O.subarray(this.timestamp_begin).map(Math.exp).reduce((J,re)=>J+re)),Q=(0,n.max)(O.subarray(0,this.timestamp_begin))[0];Z>Q&&z.subarray(0,this.timestamp_begin).fill(-1/0)}return x}}class u extends i{constructor(E){super(),this.no_repeat_ngram_size=E}getNgrams(E){const x=E.length,S=[];for(let D=0;D<x+1-this.no_repeat_ngram_size;++D){const K=[];for(let q=0;q<this.no_repeat_ngram_size;++q)K.push(E[D+q]);S.push(K.map(Number))}const z=new Map;for(const D of S){const K=D.slice(0,D.length-1),q=JSON.stringify(K),O=z.get(q)??[];O.push(D[D.length-1]),z.set(q,O)}return z}getGeneratedNgrams(E,x){const S=x.slice(x.length+1-this.no_repeat_ngram_size,x.length);return E.get(JSON.stringify(S.map(Number)))??[]}calcBannedNgramTokens(E){const x=[];if(E.length+1<this.no_repeat_ngram_size)return x;{const S=this.getNgrams(E);return this.getGeneratedNgrams(S,E)}}_call(E,x){for(let S=0;S<E.length;++S){const z=x[S].data,D=this.calcBannedNgramTokens(E[S]);for(const K of D)z[K]=-1/0}return x}}class _ extends i{constructor(E){super(),this.penalty=E}_call(E,x){for(let S=0;S<E.length;++S){const z=x[S].data;for(const D of new Set(E[S])){const K=Number(D);z[K]<0?z[K]*=this.penalty:z[K]/=this.penalty}}return x}}class f extends i{constructor(E,x){super(),this.min_length=E,this.eos_token_id=Array.isArray(x)?x:[x]}_call(E,x){for(let S=0;S<E.length;++S)if(E[S].length<this.min_length){const z=x[S].data;for(const D of this.eos_token_id)z[D]=-1/0}return x}}class w extends i{constructor(E,x,S){super(),this.prompt_length_to_skip=E,this.min_new_tokens=x,this.eos_token_id=Array.isArray(S)?S:[S]}_call(E,x){for(let S=0;S<E.length;++S)if(E[S].length-this.prompt_length_to_skip<this.min_new_tokens){const D=x[S].data;for(const K of this.eos_token_id)D[K]=-1/0}return x}}class I extends i{constructor(E,x){super(),this.bad_words_ids=E,this.eos_token_id=Array.isArray(x)?x:[x]}_call(E,x){for(let S=0;S<E.length;++S){const z=x[S].data,D=E[S];for(const K of this.bad_words_ids){if(D.length<K.length-1)continue;let q=!0;for(let O=1;O<=K.length-1;++O)if(K.at(-O-1)!=D.at(-O)){q=!1;break}q&&(z[K.at(-1)]=-1/0)}}return x}}class M extends i{constructor(E){if(super(),E<=1)throw new Error(`Require guidance scale >1 to use the classifier free guidance processor, got guidance scale ${E}.`);this.guidance_scale=E}_call(E,x){if(x.dims[0]!==2*E.length)throw new Error(`Logits should have twice the batch size of the input ids, the first half of batches corresponding to the conditional inputs, and the second half of batches corresponding to the unconditional inputs. Got batch size ${x.dims[0]} for the logits and ${E.length} for the input ids.`);const S=E.length,z=x.slice([0,S],null),D=x.slice([S,x.dims[0]],null);for(let K=0;K<D.data.length;++K)D.data[K]+=(z.data[K]-D.data[K])*this.guidance_scale;return D}}class y extends o{constructor(E){super(),this.temperature=E}_call(E,x){const S=x.data;for(let z=0;z<S.length;++z)S[z]/=this.temperature;return x}}class $ extends o{constructor(E,{filter_value:x=-1/0,min_tokens_to_keep:S=1}={}){if(super(),E<0||E>1)throw new Error(`\`top_p\` must be a float > 0 and < 1, but is ${E}`);if(!Number.isInteger(S)||S<1)throw new Error(`\`min_tokens_to_keep\` must be a positive integer, but is ${S}`);this.top_p=E,this.filter_value=x,this.min_tokens_to_keep=S}}class v extends o{constructor(E,{filter_value:x=-1/0,min_tokens_to_keep:S=1}={}){if(super(),!Number.isInteger(E)||E<0)throw new Error(`\`top_k\` must be a positive integer, but is ${E}`);this.top_k=Math.max(E,S),this.filter_value=x}}}),"./src/generation/logits_sampler.js":((e,r,t)=>{t.r(r),t.d(r,{LogitsSampler:()=>o});var s=t("./src/utils/generic.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");t("./src/generation/configuration_utils.js");class o extends s.Callable{constructor(d){super(),this.generation_config=d}async _call(d){return this.sample(d)}async sample(d){throw Error("sample should be implemented in subclasses.")}getLogits(d,u){let _=d.dims.at(-1),f=d.data;if(u===-1)f=f.slice(-_);else{let w=u*_;f=f.slice(w,w+_)}return f}randomSelect(d){let u=0;for(let f=0;f<d.length;++f)u+=d[f];let _=Math.random()*u;for(let f=0;f<d.length;++f)if(_-=d[f],_<=0)return f;return 0}static getSampler(d){if(d.do_sample)return new l(d);if(d.num_beams>1)return new c(d);if(d.num_return_sequences>1)throw Error(`num_return_sequences has to be 1 when doing greedy search, but is ${d.num_return_sequences}.`);return new a(d)}}class a extends o{async sample(d){const u=(0,i.max)(d.data)[1];return[[BigInt(u),0]]}}class l extends o{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[_,f]=await(0,n.topk)(d,u),w=(0,i.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},()=>{const I=this.randomSelect(w);return[f.data[I],Math.log(w[I])]})}}class c extends o{async sample(d){let u=d.dims.at(-1);this.generation_config.top_k>0&&(u=Math.min(this.generation_config.top_k,u));const[_,f]=await(0,n.topk)(d,u),w=(0,i.softmax)(_.data);return Array.from({length:this.generation_config.num_beams},(I,M)=>[f.data[M],Math.log(w[M])])}}}),"./src/generation/stopping_criteria.js":((e,r,t)=>{t.r(r),t.d(r,{EosTokenCriteria:()=>a,InterruptableStoppingCriteria:()=>l,MaxLengthCriteria:()=>o,StoppingCriteria:()=>n,StoppingCriteriaList:()=>i});var s=t("./src/utils/generic.js");class n extends s.Callable{_call(p,d){throw Error("StoppingCriteria needs to be subclassed")}}class i extends s.Callable{constructor(){super(),this.criteria=[]}push(p){this.criteria.push(p)}extend(p){p instanceof i?p=p.criteria:p instanceof n&&(p=[p]),this.criteria.push(...p)}_call(p,d){const u=new Array(p.length).fill(!1);for(const _ of this.criteria){const f=_(p,d);for(let w=0;w<u.length;++w)u[w]||=f[w]}return u}[Symbol.iterator](){return this.criteria.values()}}class o extends n{constructor(p,d=null){super(),this.max_length=p,this.max_position_embeddings=d}_call(p){return p.map(d=>d.length>=this.max_length)}}class a extends n{constructor(p){super(),Array.isArray(p)||(p=[p]),this.eos_token_id=p}_call(p,d){return p.map(u=>{const _=u.at(-1);return this.eos_token_id.some(f=>_==f)})}}class l extends n{constructor(){super(),this.interrupted=!1}interrupt(){this.interrupted=!0}reset(){this.interrupted=!1}_call(p,d){return new Array(p.length).fill(this.interrupted)}}}),"./src/generation/streamers.js":((e,r,t)=>{t.r(r),t.d(r,{BaseStreamer:()=>o,TextStreamer:()=>l,WhisperTextStreamer:()=>c});var s=t("./src/utils/core.js"),n=t("./src/tokenizers.js"),i=t("./src/env.js");class o{put(d){throw Error("Not implemented")}end(){throw Error("Not implemented")}}const a=i.apis.IS_PROCESS_AVAILABLE?p=>process.stdout.write(p):p=>console.log(p);class l extends o{constructor(d,{skip_prompt:u=!1,callback_function:_=null,token_callback_function:f=null,skip_special_tokens:w=!0,decode_kwargs:I={},...M}={}){super(),this.tokenizer=d,this.skip_prompt=u,this.callback_function=_??a,this.token_callback_function=f,this.decode_kwargs={skip_special_tokens:w,...I,...M},this.token_cache=[],this.print_len=0,this.next_tokens_are_prompt=!0}put(d){if(d.length>1)throw Error("TextStreamer only supports batch size of 1");const u=this.next_tokens_are_prompt;if(u&&(this.next_tokens_are_prompt=!1,this.skip_prompt))return;const _=d[0];this.token_callback_function?.(_),this.token_cache=(0,s.mergeArrays)(this.token_cache,_);const f=this.tokenizer.decode(this.token_cache,this.decode_kwargs);let w;u||f.endsWith(`
`)?(w=f.slice(this.print_len),this.token_cache=[],this.print_len=0):f.length>0&&(0,n.is_chinese_char)(f.charCodeAt(f.length-1))?(w=f.slice(this.print_len),this.print_len+=w.length):(w=f.slice(this.print_len,f.lastIndexOf(" ")+1),this.print_len+=w.length),this.on_finalized_text(w,!1)}end(){let d;this.token_cache.length>0?(d=this.tokenizer.decode(this.token_cache,this.decode_kwargs).slice(this.print_len),this.token_cache=[],this.print_len=0):d="",this.next_tokens_are_prompt=!0,this.on_finalized_text(d,!0)}on_finalized_text(d,u){d.length>0&&this.callback_function?.(d),u&&this.callback_function===a&&i.apis.IS_PROCESS_AVAILABLE&&this.callback_function?.(`
`)}}class c extends l{constructor(d,{skip_prompt:u=!1,callback_function:_=null,token_callback_function:f=null,on_chunk_start:w=null,on_chunk_end:I=null,on_finalize:M=null,time_precision:y=.02,skip_special_tokens:$=!0,decode_kwargs:v={}}={}){super(d,{skip_prompt:u,skip_special_tokens:$,callback_function:_,token_callback_function:f,decode_kwargs:v}),this.timestamp_begin=d.timestamp_begin,this.on_chunk_start=w,this.on_chunk_end=I,this.on_finalize=M,this.time_precision=y,this.waiting_for_timestamp=!1}put(d){if(d.length>1)throw Error("WhisperTextStreamer only supports batch size of 1");const u=d[0];if(u.length===1){const _=Number(u[0])-this.timestamp_begin;if(_>=0){const f=_*this.time_precision;this.waiting_for_timestamp?this.on_chunk_end?.(f):this.on_chunk_start?.(f),this.waiting_for_timestamp=!this.waiting_for_timestamp,this.token_callback_function?.(u);return}}return super.put(d)}end(){super.end(),this.on_finalize?.()}}}),"./src/models.js":((e,r,t)=>{t.r(r),t.d(r,{ASTForAudioClassification:()=>sn,ASTModel:()=>Ei,ASTPreTrainedModel:()=>qn,AlbertForMaskedLM:()=>$t,AlbertForQuestionAnswering:()=>Ue,AlbertForSequenceClassification:()=>Ye,AlbertModel:()=>Xe,AlbertPreTrainedModel:()=>Ke,ArceeForCausalLM:()=>Er,ArceeModel:()=>Nt,ArceePreTrainedModel:()=>Ft,AutoModel:()=>Ux,AutoModelForAudioClassification:()=>lT,AutoModelForAudioFrameClassification:()=>uT,AutoModelForAudioTextToText:()=>yT,AutoModelForCTC:()=>aT,AutoModelForCausalLM:()=>Xx,AutoModelForDepthEstimation:()=>mT,AutoModelForDocumentQuestionAnswering:()=>dT,AutoModelForImageClassification:()=>eT,AutoModelForImageFeatureExtraction:()=>gT,AutoModelForImageMatting:()=>pT,AutoModelForImageSegmentation:()=>tT,AutoModelForImageTextToText:()=>wT,AutoModelForImageToImage:()=>hT,AutoModelForMaskGeneration:()=>oT,AutoModelForMaskedLM:()=>Yx,AutoModelForNormalEstimation:()=>fT,AutoModelForObjectDetection:()=>nT,AutoModelForPoseEstimation:()=>_T,AutoModelForQuestionAnswering:()=>Jx,AutoModelForSemanticSegmentation:()=>rT,AutoModelForSeq2SeqLM:()=>Kx,AutoModelForSequenceClassification:()=>Wx,AutoModelForSpeechSeq2Seq:()=>qx,AutoModelForTextToSpectrogram:()=>Hx,AutoModelForTextToWaveform:()=>Qx,AutoModelForTokenClassification:()=>Gx,AutoModelForUniversalSegmentation:()=>sT,AutoModelForVision2Seq:()=>Zx,AutoModelForXVector:()=>cT,AutoModelForZeroShotObjectDetection:()=>iT,BartForConditionalGeneration:()=>hr,BartForSequenceClassification:()=>Br,BartModel:()=>er,BartPretrainedModel:()=>Xr,BaseModelOutput:()=>Ie,BeitForImageClassification:()=>Gp,BeitModel:()=>Wp,BeitPreTrainedModel:()=>Sl,BertForMaskedLM:()=>Ee,BertForQuestionAnswering:()=>De,BertForSequenceClassification:()=>we,BertForTokenClassification:()=>Ae,BertModel:()=>ge,BertPreTrainedModel:()=>Me,BlenderbotForConditionalGeneration:()=>lr,BlenderbotModel:()=>mr,BlenderbotPreTrainedModel:()=>Jt,BlenderbotSmallForConditionalGeneration:()=>Kn,BlenderbotSmallModel:()=>en,BlenderbotSmallPreTrainedModel:()=>Nr,BloomForCausalLM:()=>hp,BloomModel:()=>pp,BloomPreTrainedModel:()=>_l,CLIPModel:()=>Di,CLIPPreTrainedModel:()=>Os,CLIPSegForImageSegmentation:()=>Ri,CLIPSegModel:()=>Bi,CLIPSegPreTrainedModel:()=>vn,CLIPTextModel:()=>Uo,CLIPTextModelWithProjection:()=>Oi,CLIPVisionModel:()=>Wo,CLIPVisionModelWithProjection:()=>Go,CamembertForMaskedLM:()=>Ge,CamembertForQuestionAnswering:()=>_r,CamembertForSequenceClassification:()=>St,CamembertForTokenClassification:()=>kt,CamembertModel:()=>lt,CamembertPreTrainedModel:()=>tt,CausalLMOutput:()=>En,CausalLMOutputWithPast:()=>MT,ChineseCLIPModel:()=>zi,ChineseCLIPPreTrainedModel:()=>Ko,ClapAudioModelWithProjection:()=>Ym,ClapModel:()=>Qm,ClapPreTrainedModel:()=>ea,ClapTextModelWithProjection:()=>Xm,CodeGenForCausalLM:()=>Oe,CodeGenModel:()=>Te,CodeGenPreTrainedModel:()=>oe,CohereForCausalLM:()=>qd,CohereModel:()=>Kd,CoherePreTrainedModel:()=>al,ConvBertForMaskedLM:()=>Wt,ConvBertForQuestionAnswering:()=>C,ConvBertForSequenceClassification:()=>Et,ConvBertForTokenClassification:()=>Is,ConvBertModel:()=>ks,ConvBertPreTrainedModel:()=>dt,ConvNextForImageClassification:()=>Rh,ConvNextModel:()=>Bh,ConvNextPreTrainedModel:()=>Ul,ConvNextV2ForImageClassification:()=>jh,ConvNextV2Model:()=>Nh,ConvNextV2PreTrainedModel:()=>Wl,DFineForObjectDetection:()=>nh,DFineModel:()=>sh,DFinePreTrainedModel:()=>Dl,DINOv3ConvNextModel:()=>Qh,DINOv3ConvNextPreTrainedModel:()=>Hh,DINOv3ViTModel:()=>qh,DINOv3ViTPreTrainedModel:()=>Kh,DPTForDepthEstimation:()=>bh,DPTModel:()=>yh,DPTPreTrainedModel:()=>Nl,DacDecoderModel:()=>Nf,DacDecoderOutput:()=>zf,DacEncoderModel:()=>Rf,DacEncoderOutput:()=>Lf,DacModel:()=>Bf,DacPreTrainedModel:()=>aa,DebertaForMaskedLM:()=>Kr,DebertaForQuestionAnswering:()=>ss,DebertaForSequenceClassification:()=>Xt,DebertaForTokenClassification:()=>gr,DebertaModel:()=>ur,DebertaPreTrainedModel:()=>Rt,DebertaV2ForMaskedLM:()=>ps,DebertaV2ForQuestionAnswering:()=>hs,DebertaV2ForSequenceClassification:()=>Lr,DebertaV2ForTokenClassification:()=>As,DebertaV2Model:()=>ds,DebertaV2PreTrainedModel:()=>dr,DecisionTransformerModel:()=>yf,DecisionTransformerPreTrainedModel:()=>wf,DeiTForImageClassification:()=>ch,DeiTModel:()=>lh,DeiTPreTrainedModel:()=>Ll,DepthAnythingForDepthEstimation:()=>vh,DepthAnythingPreTrainedModel:()=>Mh,DepthProForDepthEstimation:()=>Ch,DepthProPreTrainedModel:()=>Ph,DetrForObjectDetection:()=>qp,DetrForSegmentation:()=>$l,DetrModel:()=>Kp,DetrObjectDetectionOutput:()=>kl,DetrPreTrainedModel:()=>Ho,DetrSegmentationOutput:()=>Hp,Dinov2ForImageClassification:()=>Uh,Dinov2Model:()=>Vh,Dinov2PreTrainedModel:()=>Gl,Dinov2WithRegistersForImageClassification:()=>Gh,Dinov2WithRegistersModel:()=>Wh,Dinov2WithRegistersPreTrainedModel:()=>Kl,DistilBertForMaskedLM:()=>Fs,DistilBertForQuestionAnswering:()=>ns,DistilBertForSequenceClassification:()=>pr,DistilBertForTokenClassification:()=>vr,DistilBertModel:()=>qr,DistilBertPreTrainedModel:()=>nr,DonutSwinModel:()=>zh,DonutSwinPreTrainedModel:()=>Lh,EfficientNetForImageClassification:()=>nf,EfficientNetModel:()=>sf,EfficientNetPreTrainedModel:()=>sc,ElectraForMaskedLM:()=>Y,ElectraForQuestionAnswering:()=>Se,ElectraForSequenceClassification:()=>ne,ElectraForTokenClassification:()=>he,ElectraModel:()=>j,ElectraPreTrainedModel:()=>X,Ernie4_5_ForCausalLM:()=>Wm,Ernie4_5_Model:()=>Um,Ernie4_5_PretrainedModel:()=>Jl,EsmForMaskedLM:()=>zr,EsmForSequenceClassification:()=>Le,EsmForTokenClassification:()=>Re,EsmModel:()=>Us,EsmPreTrainedModel:()=>Qr,ExaoneForCausalLM:()=>zd,ExaoneModel:()=>Ld,ExaonePreTrainedModel:()=>rl,FalconForCausalLM:()=>Hm,FalconModel:()=>qm,FalconPreTrainedModel:()=>ec,FastViTForImageClassification:()=>Fp,FastViTModel:()=>Ap,FastViTPreTrainedModel:()=>xl,Florence2ForConditionalGeneration:()=>Ro,Florence2PreTrainedModel:()=>Bo,GLPNForDepthEstimation:()=>Oh,GLPNModel:()=>Dh,GLPNPreTrainedModel:()=>Vl,GPT2LMHeadModel:()=>Ni,GPT2Model:()=>ti,GPT2PreTrainedModel:()=>ei,GPTBigCodeForCausalLM:()=>V,GPTBigCodeModel:()=>L,GPTBigCodePreTrainedModel:()=>A,GPTJForCausalLM:()=>P,GPTJModel:()=>h,GPTJPreTrainedModel:()=>ii,GPTNeoForCausalLM:()=>Vi,GPTNeoModel:()=>si,GPTNeoPreTrainedModel:()=>Tn,GPTNeoXForCausalLM:()=>Wi,GPTNeoXModel:()=>Ui,GPTNeoXPreTrainedModel:()=>ni,Gemma2ForCausalLM:()=>Yd,Gemma2Model:()=>Xd,Gemma2PreTrainedModel:()=>cl,Gemma3ForCausalLM:()=>Zd,Gemma3Model:()=>Jd,Gemma3PreTrainedModel:()=>ul,Gemma3nForConditionalGeneration:()=>Qn,Gemma3nPreTrainedModel:()=>nn,GemmaForCausalLM:()=>Qd,GemmaModel:()=>Hd,GemmaPreTrainedModel:()=>ll,GlmForCausalLM:()=>Od,GlmModel:()=>Dd,GlmPreTrainedModel:()=>tl,GraniteForCausalLM:()=>Gd,GraniteModel:()=>Wd,GranitePreTrainedModel:()=>ol,GroundingDinoForObjectDetection:()=>Yh,GroundingDinoPreTrainedModel:()=>Xh,GroupViTModel:()=>Ip,GroupViTPreTrainedModel:()=>kp,HeliumForCausalLM:()=>Fd,HeliumModel:()=>Ad,HeliumPreTrainedModel:()=>el,HieraForImageClassification:()=>dh,HieraModel:()=>uh,HieraPreTrainedModel:()=>zl,HubertForCTC:()=>Cm,HubertForSequenceClassification:()=>Sm,HubertModel:()=>Pm,HubertPreTrainedModel:()=>kx,IJepaForImageClassification:()=>Mp,IJepaModel:()=>bp,IJepaPreTrainedModel:()=>bl,Idefics3ForConditionalGeneration:()=>Xn,Idefics3PreTrainedModel:()=>Vo,ImageMattingOutput:()=>g_,JAISLMHeadModel:()=>xn,JAISModel:()=>ji,JAISPreTrainedModel:()=>ri,JinaCLIPModel:()=>bn,JinaCLIPPreTrainedModel:()=>yn,JinaCLIPTextModel:()=>Yr,JinaCLIPVisionModel:()=>Mn,Lfm2ForCausalLM:()=>$d,Lfm2Model:()=>qo,Lfm2PreTrainedModel:()=>Ls,LiteWhisperForConditionalGeneration:()=>Oo,LlamaForCausalLM:()=>yt,LlamaModel:()=>it,LlamaPreTrainedModel:()=>qe,LlavaForConditionalGeneration:()=>Hn,LlavaOnevisionForConditionalGeneration:()=>Lo,LlavaPreTrainedModel:()=>Fi,LlavaQwen2ForCausalLM:()=>_n,LongT5ForConditionalGeneration:()=>Gt,LongT5Model:()=>sr,LongT5PreTrainedModel:()=>qt,M2M100ForConditionalGeneration:()=>am,M2M100Model:()=>om,M2M100PreTrainedModel:()=>Ql,MBartForCausalLM:()=>Tr,MBartForConditionalGeneration:()=>wr,MBartForSequenceClassification:()=>os,MBartModel:()=>fs,MBartPreTrainedModel:()=>Rr,MPNetForMaskedLM:()=>fn,MPNetForQuestionAnswering:()=>k,MPNetForSequenceClassification:()=>Gn,MPNetForTokenClassification:()=>le,MPNetModel:()=>mn,MPNetPreTrainedModel:()=>ms,MT5ForConditionalGeneration:()=>Ar,MT5Model:()=>is,MT5PreTrainedModel:()=>Vr,MarianMTModel:()=>im,MarianModel:()=>nm,MarianPreTrainedModel:()=>Hl,MaskFormerForInstanceSegmentation:()=>Fh,MaskFormerModel:()=>Ah,MaskFormerPreTrainedModel:()=>jl,MaskedLMOutput:()=>Sr,Metric3DForDepthEstimation:()=>$h,Metric3DPreTrainedModel:()=>Sh,Metric3Dv2ForDepthEstimation:()=>Ih,Metric3Dv2PreTrainedModel:()=>kh,MgpstrForSceneTextRecognition:()=>Tf,MgpstrModelOutput:()=>vf,MgpstrPreTrainedModel:()=>xf,MimiDecoderModel:()=>Of,MimiDecoderOutput:()=>Af,MimiEncoderModel:()=>Df,MimiEncoderOutput:()=>If,MimiModel:()=>Ff,MimiPreTrainedModel:()=>oa,MistralForCausalLM:()=>Vm,MistralModel:()=>jm,MistralPreTrainedModel:()=>Yl,MobileBertForMaskedLM:()=>Ws,MobileBertForQuestionAnswering:()=>Gs,MobileBertForSequenceClassification:()=>Ds,MobileBertModel:()=>Yt,MobileBertPreTrainedModel:()=>rt,MobileLLMForCausalLM:()=>Rd,MobileLLMModel:()=>Bd,MobileLLMPreTrainedModel:()=>sl,MobileNetV1ForImageClassification:()=>af,MobileNetV1ForSemanticSegmentation:()=>lf,MobileNetV1Model:()=>of,MobileNetV1PreTrainedModel:()=>ra,MobileNetV2ForImageClassification:()=>uf,MobileNetV2ForSemanticSegmentation:()=>df,MobileNetV2Model:()=>cf,MobileNetV2PreTrainedModel:()=>sa,MobileNetV3ForImageClassification:()=>hf,MobileNetV3ForSemanticSegmentation:()=>mf,MobileNetV3Model:()=>pf,MobileNetV3PreTrainedModel:()=>na,MobileNetV4ForImageClassification:()=>_f,MobileNetV4ForSemanticSegmentation:()=>gf,MobileNetV4Model:()=>ff,MobileNetV4PreTrainedModel:()=>ia,MobileViTForImageClassification:()=>zp,MobileViTModel:()=>Lp,MobileViTPreTrainedModel:()=>Tl,MobileViTV2ForImageClassification:()=>Rp,MobileViTV2Model:()=>Bp,MobileViTV2PreTrainedModel:()=>El,ModelOutput:()=>_e,ModernBertDecoderForCausalLM:()=>Gr,ModernBertDecoderModel:()=>Mr,ModernBertDecoderPreTrainedModel:()=>ft,ModernBertForMaskedLM:()=>Ze,ModernBertForSequenceClassification:()=>Ct,ModernBertForTokenClassification:()=>At,ModernBertModel:()=>Je,ModernBertPreTrainedModel:()=>He,Moondream1ForConditionalGeneration:()=>zo,MoonshineForConditionalGeneration:()=>Ii,MoonshineModel:()=>ki,MoonshinePreTrainedModel:()=>$i,MptForCausalLM:()=>fp,MptModel:()=>mp,MptPreTrainedModel:()=>gl,MultiModalityCausalLM:()=>Mf,MultiModalityPreTrainedModel:()=>bf,MusicgenForCausalLM:()=>Dx,MusicgenForConditionalGeneration:()=>ic,MusicgenModel:()=>Fx,MusicgenPreTrainedModel:()=>nc,NeoBertForMaskedLM:()=>st,NeoBertForQuestionAnswering:()=>et,NeoBertForSequenceClassification:()=>je,NeoBertForTokenClassification:()=>Ne,NeoBertModel:()=>be,NeoBertPreTrainedModel:()=>We,NomicBertModel:()=>rs,NomicBertPreTrainedModel:()=>Or,OPTForCausalLM:()=>gp,OPTModel:()=>_p,OPTPreTrainedModel:()=>wl,Olmo2ForCausalLM:()=>Ud,Olmo2Model:()=>Vd,Olmo2PreTrainedModel:()=>il,OlmoForCausalLM:()=>jd,OlmoModel:()=>Nd,OlmoPreTrainedModel:()=>nl,OpenELMForCausalLM:()=>tp,OpenELMModel:()=>ep,OpenELMPreTrainedModel:()=>dl,OwlViTForObjectDetection:()=>jp,OwlViTModel:()=>Np,OwlViTPreTrainedModel:()=>Pl,Owlv2ForObjectDetection:()=>Up,Owlv2Model:()=>Vp,Owlv2PreTrainedModel:()=>Cl,PaliGemmaForConditionalGeneration:()=>jo,PaliGemmaPreTrainedModel:()=>No,PatchTSMixerForPrediction:()=>Sf,PatchTSMixerModel:()=>Cf,PatchTSMixerPreTrainedModel:()=>ac,PatchTSTForPrediction:()=>Pf,PatchTSTModel:()=>Ef,PatchTSTPreTrainedModel:()=>oc,Phi3ForCausalLM:()=>dp,Phi3Model:()=>up,Phi3PreTrainedModel:()=>fl,Phi3VForCausalLM:()=>Jn,Phi3VPreTrainedModel:()=>Yn,PhiForCausalLM:()=>cp,PhiModel:()=>lp,PhiPreTrainedModel:()=>ml,PreTrainedModel:()=>W,PretrainedMixin:()=>jt,PvtForImageClassification:()=>Ep,PvtModel:()=>Tp,PvtPreTrainedModel:()=>Ml,PyAnnoteForAudioFrameClassification:()=>hm,PyAnnoteModel:()=>pm,PyAnnotePreTrainedModel:()=>Xl,QuestionAnsweringModelOutput:()=>Dr,Qwen2ForCausalLM:()=>sp,Qwen2Model:()=>rp,Qwen2PreTrainedModel:()=>pl,Qwen2VLForConditionalGeneration:()=>ap,Qwen2VLPreTrainedModel:()=>op,Qwen3ForCausalLM:()=>ip,Qwen3Model:()=>np,Qwen3PreTrainedModel:()=>hl,RFDetrForObjectDetection:()=>th,RFDetrModel:()=>eh,RFDetrObjectDetectionOutput:()=>rh,RFDetrPreTrainedModel:()=>Fl,RTDetrForObjectDetection:()=>Xp,RTDetrModel:()=>Qp,RTDetrObjectDetectionOutput:()=>Gi,RTDetrPreTrainedModel:()=>Il,RTDetrV2ForObjectDetection:()=>Jp,RTDetrV2Model:()=>Yp,RTDetrV2ObjectDetectionOutput:()=>Zp,RTDetrV2PreTrainedModel:()=>Al,ResNetForImageClassification:()=>hh,ResNetModel:()=>ph,ResNetPreTrainedModel:()=>Bl,RoFormerForMaskedLM:()=>Js,RoFormerForQuestionAnswering:()=>Vs,RoFormerForSequenceClassification:()=>Zs,RoFormerForTokenClassification:()=>js,RoFormerModel:()=>Ir,RoFormerPreTrainedModel:()=>Kt,RobertaForMaskedLM:()=>To,RobertaForQuestionAnswering:()=>Co,RobertaForSequenceClassification:()=>Eo,RobertaForTokenClassification:()=>Po,RobertaModel:()=>xo,RobertaPreTrainedModel:()=>Ks,SamImageSegmentationOutput:()=>sm,SamModel:()=>rm,SamPreTrainedModel:()=>tm,SapiensForDepthEstimation:()=>Th,SapiensForNormalEstimation:()=>Eh,SapiensForSemanticSegmentation:()=>xh,SapiensPreTrainedModel:()=>Xo,SegformerForImageClassification:()=>Zm,SegformerForSemanticSegmentation:()=>ef,SegformerModel:()=>Ax,SegformerPreTrainedModel:()=>ta,Seq2SeqLMOutput:()=>bT,SequenceClassifierOutput:()=>bt,SiglipModel:()=>Li,SiglipPreTrainedModel:()=>Zn,SiglipTextModel:()=>wn,SiglipVisionModel:()=>ut,SmolLM3ForCausalLM:()=>Id,SmolLM3Model:()=>kd,SmolLM3PreTrainedModel:()=>Za,SmolVLMForConditionalGeneration:()=>gn,SnacDecoderModel:()=>Uf,SnacEncoderModel:()=>Vf,SnacModel:()=>jf,SnacPreTrainedModel:()=>la,SpeechT5ForSpeechToText:()=>Lm,SpeechT5ForTextToSpeech:()=>zm,SpeechT5HifiGan:()=>Bm,SpeechT5Model:()=>Ix,SpeechT5PreTrainedModel:()=>Zo,SqueezeBertForMaskedLM:()=>se,SqueezeBertForQuestionAnswering:()=>Ce,SqueezeBertForSequenceClassification:()=>me,SqueezeBertModel:()=>ee,SqueezeBertPreTrainedModel:()=>U,StableLmForCausalLM:()=>rf,StableLmModel:()=>tf,StableLmPreTrainedModel:()=>rc,Starcoder2ForCausalLM:()=>Km,Starcoder2Model:()=>Gm,Starcoder2PreTrainedModel:()=>Zl,StyleTextToSpeech2Model:()=>Om,StyleTextToSpeech2PreTrainedModel:()=>Dm,Swin2SRForImageSuperResolution:()=>wh,Swin2SRModel:()=>gh,Swin2SRPreTrainedModel:()=>Rl,SwinForImageClassification:()=>fh,SwinForSemanticSegmentation:()=>_h,SwinModel:()=>mh,SwinPreTrainedModel:()=>Qo,T5ForConditionalGeneration:()=>xr,T5Model:()=>rr,T5PreTrainedModel:()=>wt,TableTransformerForObjectDetection:()=>oh,TableTransformerModel:()=>ih,TableTransformerObjectDetectionOutput:()=>ah,TableTransformerPreTrainedModel:()=>Ol,TokenClassifierOutput:()=>Pr,TrOCRForCausalLM:()=>Nm,TrOCRPreTrainedModel:()=>Rm,UltravoxModel:()=>lc,UltravoxPreTrainedModel:()=>$f,UniSpeechForCTC:()=>gm,UniSpeechForSequenceClassification:()=>wm,UniSpeechModel:()=>_m,UniSpeechPreTrainedModel:()=>Yo,UniSpeechSatForAudioFrameClassification:()=>vm,UniSpeechSatForCTC:()=>bm,UniSpeechSatForSequenceClassification:()=>Mm,UniSpeechSatModel:()=>ym,UniSpeechSatPreTrainedModel:()=>Ki,ViTForImageClassification:()=>yp,ViTMAEModel:()=>Cp,ViTMAEPreTrainedModel:()=>Pp,ViTMSNForImageClassification:()=>$p,ViTMSNModel:()=>Sp,ViTMSNPreTrainedModel:()=>vl,ViTModel:()=>wp,ViTPreTrainedModel:()=>yl,VisionEncoderDecoderModel:()=>Ai,VitMatteForImageMatting:()=>Op,VitMattePreTrainedModel:()=>Dp,VitPoseForPoseEstimation:()=>xp,VitPosePreTrainedModel:()=>vp,VitsModel:()=>tc,VitsModelOutput:()=>w_,VitsPreTrainedModel:()=>Jm,VoxtralForConditionalGeneration:()=>kf,Wav2Vec2BertForCTC:()=>Tm,Wav2Vec2BertForSequenceClassification:()=>Em,Wav2Vec2BertModel:()=>xm,Wav2Vec2BertPreTrainedModel:()=>Jo,Wav2Vec2ForAudioFrameClassification:()=>dm,Wav2Vec2ForCTC:()=>cm,Wav2Vec2ForSequenceClassification:()=>um,Wav2Vec2Model:()=>lm,Wav2Vec2PreTrainedModel:()=>on,WavLMForAudioFrameClassification:()=>Fm,WavLMForCTC:()=>km,WavLMForSequenceClassification:()=>Im,WavLMForXVector:()=>Am,WavLMModel:()=>$m,WavLMPreTrainedModel:()=>oi,WeSpeakerResNetModel:()=>fm,WeSpeakerResNetPreTrainedModel:()=>mm,WhisperForConditionalGeneration:()=>Si,WhisperModel:()=>Ci,WhisperPreTrainedModel:()=>Pi,XLMForQuestionAnswering:()=>Ao,XLMForSequenceClassification:()=>ko,XLMForTokenClassification:()=>Io,XLMModel:()=>So,XLMPreTrainedModel:()=>tn,XLMRobertaForMaskedLM:()=>xi,XLMRobertaForQuestionAnswering:()=>Do,XLMRobertaForSequenceClassification:()=>Ti,XLMRobertaForTokenClassification:()=>Fo,XLMRobertaModel:()=>vi,XLMRobertaPreTrainedModel:()=>rn,XLMWithLMHeadModel:()=>$o,XVectorOutput:()=>__,YolosForObjectDetection:()=>Zh,YolosModel:()=>Jh,YolosObjectDetectionOutput:()=>em,YolosPreTrainedModel:()=>ql});var s=t("./src/configs.js"),n=t("./src/backends/onnx.js"),i=t("./src/utils/dtypes.js"),o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/hub.js"),c=t("./src/utils/constants.js"),p=t("./src/generation/logits_process.js"),d=t("./src/generation/configuration_utils.js"),u=t("./src/utils/tensor.js"),_=t("./src/utils/image.js"),f=t("./src/utils/maths.js"),w=t("./src/generation/stopping_criteria.js"),I=t("./src/generation/logits_sampler.js"),M=t("./src/env.js"),y=t("./src/models/whisper/generation_whisper.js"),$=t("./src/models/whisper/common_whisper.js");const v={EncoderOnly:0,EncoderDecoder:1,Seq2Seq:2,Vision2Seq:3,DecoderOnly:4,MaskGeneration:5,ImageTextToText:6,Musicgen:7,MultiModality:8,Phi3V:9,AudioTextToText:10,AutoEncoder:11,ImageAudioTextToText:12},T=new Map,E=new Map,x=new Map;async function S(g,b,R){let ie=R.config?.["transformers.js_config"]??{},pe=R.device??ie.device;pe&&typeof pe!="string"&&(pe.hasOwnProperty(b)?pe=pe[b]:(console.warn(`device not specified for "${b}". Using the default device.`),pe=null));const fe=pe??(M.apis.IS_NODE_ENV?"cpu":"wasm"),$e=(0,n.deviceToExecutionProviders)(fe),ze=ie.device_config??{};ze.hasOwnProperty(fe)&&(ie={...ie,...ze[fe]});let Ve=R.dtype??ie.dtype;if(typeof Ve!="string"&&(Ve&&Ve.hasOwnProperty(b)?Ve=Ve[b]:(Ve=i.DEFAULT_DEVICE_DTYPE_MAPPING[fe]??i.DATA_TYPES.fp32,console.warn(`dtype not specified for "${b}". Using the default dtype (${Ve}) for this device (${fe}).`))),Ve===i.DATA_TYPES.auto){let It=ie.dtype;typeof It!="string"&&(It=It?.[b]),It&&It!==i.DATA_TYPES.auto&&i.DATA_TYPES.hasOwnProperty(It)?Ve=It:Ve=i.DEFAULT_DEVICE_DTYPE_MAPPING[fe]??i.DATA_TYPES.fp32}const nt=Ve;if(i.DEFAULT_DTYPE_SUFFIX_MAPPING.hasOwnProperty(nt)){if(nt===i.DATA_TYPES.fp16&&fe==="webgpu"&&!await(0,i.isWebGpuFp16Supported)())throw new Error(`The device (${fe}) does not support fp16.`)}else throw new Error(`Invalid dtype: ${nt}. Should be one of: ${Object.keys(i.DATA_TYPES).join(", ")}`);const Mt=ie.kv_cache_dtype,xt=Mt?typeof Mt=="string"?Mt:Mt[nt]??"float32":void 0;if(xt&&!["float32","float16"].includes(xt))throw new Error(`Invalid kv_cache_dtype: ${xt}. Should be one of: float32, float16`);const Pt={dtype:nt,kv_cache_dtype:xt,device:fe},mt=i.DEFAULT_DTYPE_SUFFIX_MAPPING[nt],Vt=`${b}${mt}.onnx`,_t=`${R.subfolder??""}/${Vt}`,pt={...R.session_options};pt.executionProviders??=$e;const Ot=ie.free_dimension_overrides;Ot?pt.freeDimensionOverrides??=Ot:fe.startsWith("webnn")&&!pt.freeDimensionOverrides&&console.warn(`WebNN does not currently support dynamic shapes and requires 'free_dimension_overrides' to be set in config.json, preferably as a field within config["transformers.js_config"]["device_config"]["${fe}"]. When 'free_dimension_overrides' is not set, you may experience significant performance degradation.`);const Ht=M.apis.IS_NODE_ENV&&M.env.useFSCache,ir=(0,l.getModelFile)(g,_t,!0,R,Ht),yr=R.use_external_data_format??ie.use_external_data_format;let br=[];if(yr){let It;typeof yr=="object"?yr.hasOwnProperty(Vt)?It=yr[Vt]:yr.hasOwnProperty(b)?It=yr[b]:It=!1:It=yr;const or=+It;if(or>l.MAX_EXTERNAL_DATA_CHUNKS)throw new Error(`The number of external data chunks (${or}) exceeds the maximum allowed value (${l.MAX_EXTERNAL_DATA_CHUNKS}).`);for(let $r=0;$r<or;++$r){const Pn=`${Vt}_data${$r===0?"":"_"+$r}`,Ur=`${R.subfolder??""}/${Pn}`;br.push(new Promise(async(_s,li)=>{const ci=await(0,l.getModelFile)(g,Ur,!0,R,Ht);_s(ci instanceof Uint8Array?{path:Pn,data:ci}:Pn)}))}}else pt.externalData!==void 0&&(br=pt.externalData.map(async It=>{if(typeof It.data=="string"){const or=await(0,l.getModelFile)(g,It.data,!0,R);return{...It,data:or}}return It}));if(br.length>0){const It=await Promise.all(br);M.apis.IS_NODE_ENV||(pt.externalData=It)}if(fe==="webgpu"){const It=(0,s.getCacheShapes)(R.config,{prefix:"present"});if(Object.keys(It).length>0&&!(0,n.isONNXProxy)()){const or={};for(const $r in It)or[$r]="gpu-buffer";pt.preferredOutputLocation=or}}return{buffer_or_path:await ir,session_options:pt,session_config:Pt}}async function z(g,b,R){return Object.fromEntries(await Promise.all(Object.keys(b).map(async ie=>{const{buffer_or_path:pe,session_options:fe,session_config:$e}=await S(g,b[ie],R),ze=await(0,n.createInferenceSession)(pe,fe,$e);return[ie,ze]})))}async function D(g,b,R){return Object.fromEntries(await Promise.all(Object.keys(b).map(async ie=>{const pe=await(0,l.getModelJSON)(g,b[ie],!1,R);return[ie,pe]})))}function K(g,b){const R=Object.create(null),ie=[];for(const $e of g.inputNames){const ze=b[$e];if(!(ze instanceof u.Tensor)){ie.push($e);continue}R[$e]=(0,n.isONNXProxy)()?ze.clone():ze}if(ie.length>0)throw new Error(`An error occurred during model execution: "Missing the following inputs: ${ie.join(", ")}.`);const pe=Object.keys(b).length,fe=g.inputNames.length;if(pe>fe){let $e=Object.keys(b).filter(ze=>!g.inputNames.includes(ze));console.warn(`WARNING: Too many inputs were provided (${pe} > ${fe}). The following inputs will be ignored: "${$e.join(", ")}".`)}return R}let q=Promise.resolve();async function O(g,b){const R=K(g,b);try{const ie=Object.fromEntries(Object.entries(R).map(([$e,ze])=>[$e,ze.ort_tensor])),pe=()=>g.run(ie),fe=await(M.apis.IS_BROWSER_ENV||M.apis.IS_WEBWORKER_ENV?q=q.then(pe):pe());return Z(fe)}catch(ie){const pe=Object.fromEntries(Object.entries(R).map(([fe,$e])=>{const ze={type:$e.type,dims:$e.dims,location:$e.location};return ze.location!=="gpu-buffer"&&(ze.data=$e.data),[fe,ze]}));throw console.error(`An error occurred during model execution: "${ie}".`),console.error("Inputs given to model:",pe),ie}}function Z(g){for(let b in g)(0,n.isONNXTensor)(g[b])?g[b]=new u.Tensor(g[b]):typeof g[b]=="object"&&Z(g[b]);return g}function Q(g){if(g instanceof u.Tensor)return g;if(g.length===0)throw Error("items must be non-empty");if(Array.isArray(g[0])){if(g.some(b=>b.length!==g[0].length))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=True' and/or 'truncation=True' to have batched tensors with the same length.");return new u.Tensor("int64",BigInt64Array.from(g.flat().map(b=>BigInt(b))),[g.length,g[0].length])}else return new u.Tensor("int64",BigInt64Array.from(g.map(b=>BigInt(b))),[1,g.length])}function J(g){return new u.Tensor("bool",[g],[1])}async function re(g,b){let{encoder_outputs:R,input_ids:ie,decoder_input_ids:pe,...fe}=b;if(!R){const ze=(0,a.pick)(b,g.sessions.model.inputNames);R=(await te(g,ze)).last_hidden_state}return fe.input_ids=pe,fe.encoder_hidden_states=R,g.sessions.decoder_model_merged.inputNames.includes("encoder_attention_mask")&&(fe.encoder_attention_mask=b.attention_mask),await ue(g,fe,!0)}async function te(g,b){const R=g.sessions.model,ie=(0,a.pick)(b,R.inputNames);if(R.inputNames.includes("inputs_embeds")&&!ie.inputs_embeds){if(!b.input_ids)throw new Error("Both `input_ids` and `inputs_embeds` are missing in the model inputs.");ie.inputs_embeds=await g.encode_text({input_ids:b.input_ids})}if(R.inputNames.includes("token_type_ids")&&!ie.token_type_ids){if(!ie.input_ids)throw new Error("Both `input_ids` and `token_type_ids` are missing in the model inputs.");ie.token_type_ids=(0,u.zeros_like)(ie.input_ids)}if(R.inputNames.includes("pixel_mask")&&!ie.pixel_mask){if(!ie.pixel_values)throw new Error("Both `pixel_values` and `pixel_mask` are missing in the model inputs.");const pe=ie.pixel_values.dims;ie.pixel_mask=(0,u.ones)([pe[0],pe[2],pe[3]])}return await O(R,ie)}async function ce(g,b){const R=await g.encode(b);return await g.decode(R)}async function ue(g,b,R=!1){const ie=g.sessions[R?"decoder_model_merged":"model"],{past_key_values:pe,...fe}=b;if(ie.inputNames.includes("use_cache_branch")&&(fe.use_cache_branch=J(!!pe)),ie.inputNames.includes("position_ids")&&fe.attention_mask&&!fe.position_ids){const ze=["paligemma","gemma3_text","gemma3"].includes(g.config.model_type)?1:0;fe.position_ids=Fe(fe,pe,ze)}g.addPastKeyValues(fe,pe);const $e=(0,a.pick)(fe,ie.inputNames);return await O(ie,$e)}function B({modality_token_id:g,inputs_embeds:b,modality_features:R,input_ids:ie,attention_mask:pe}){const fe=ie.tolist().map(nt=>nt.reduce((Mt,xt,Pt)=>(xt==g&&Mt.push(Pt),Mt),[])),$e=fe.reduce((nt,Mt)=>nt+Mt.length,0),ze=R.dims[0];if($e!==ze)throw new Error(`Number of tokens and features do not match: tokens: ${$e}, features ${ze}`);let Ve=0;for(let nt=0;nt<fe.length;++nt){const Mt=fe[nt],xt=b[nt];for(let Pt=0;Pt<Mt.length;++Pt)xt[Mt[Pt]].data.set(R[Ve++].data)}return{inputs_embeds:b,attention_mask:pe}}function F({image_token_id:g,inputs_embeds:b,image_features:R,input_ids:ie,attention_mask:pe}){return B({modality_token_id:g,inputs_embeds:b,modality_features:R,input_ids:ie,attention_mask:pe})}function G({audio_token_id:g,inputs_embeds:b,audio_features:R,input_ids:ie,attention_mask:pe}){return B({modality_token_id:g,inputs_embeds:b,modality_features:R,input_ids:ie,attention_mask:pe})}async function N(g,{encode_function:b,merge_function:R,modality_input_name:ie,modality_output_name:pe,input_ids:fe=null,attention_mask:$e=null,position_ids:ze=null,inputs_embeds:Ve=null,past_key_values:nt=null,generation_config:Mt=null,logits_processor:xt=null,...Pt}){const mt=Pt[ie];if(!Ve){if(Ve=await g.encode_text({input_ids:fe,...Pt}),mt&&fe.dims[1]!==1){const _t=await b({[ie]:mt,...Pt});({inputs_embeds:Ve,attention_mask:$e}=R({[pe]:_t,inputs_embeds:Ve,input_ids:fe,attention_mask:$e}))}else if(nt&&mt&&fe.dims[1]===1){const _t=fe.dims[1],pt=Object.values(nt)[0].dims.at(-2);$e=(0,u.cat)([(0,u.ones)([fe.dims[0],pt]),$e.slice(null,[$e.dims[1]-_t,$e.dims[1]])],1)}}if(!ze&&g.config.model_type==="qwen2_vl"){const{image_grid_thw:_t,video_grid_thw:pt}=Pt;[ze]=g.get_rope_index(fe,_t,pt,$e)}return await ue(g,{inputs_embeds:Ve,past_key_values:nt,attention_mask:$e,position_ids:ze,generation_config:Mt,logits_processor:xt},!0)}async function ae(g,b){return await N(g,{...b,modality_input_name:"audio_values",modality_output_name:"audio_features",encode_function:g.encode_audio.bind(g),merge_function:g._merge_input_ids_with_audio_features.bind(g)})}async function ke(g,b){return await N(g,{...b,modality_input_name:"pixel_values",modality_output_name:"image_features",encode_function:g.encode_image.bind(g),merge_function:g._merge_input_ids_with_image_features.bind(g)})}function ve(g,b=0){const[R,ie]=g.dims,pe=g.data,fe=new BigInt64Array(pe.length);for(let $e=0;$e<R;++$e){const ze=$e*ie;let Ve=BigInt(b);for(let nt=0;nt<ie;++nt){const Mt=ze+nt;pe[Mt]===0n?fe[Mt]=BigInt(1):(fe[Mt]=Ve,Ve+=pe[Mt])}}return{data:fe,dims:g.dims}}function Fe(g,b=null,R=0){const{input_ids:ie,inputs_embeds:pe,attention_mask:fe}=g,{data:$e,dims:ze}=ve(fe,R);let Ve=new u.Tensor("int64",$e,ze);if(b){const nt=-(ie??pe).dims.at(1);Ve=Ve.slice(null,[nt,null])}return Ve}function Qe(g,b,R,ie){const pe=R.past_key_values?Object.values(R.past_key_values)[0].dims.at(-2):0;if(!R.attention_mask){let fe;for(const $e of["input_ids","inputs_embeds","position_ids"])if(R[$e]){fe=R[$e].dims;break}if(!fe)throw new Error("attention_mask is not provided, and unable to infer its shape from model inputs.");R.attention_mask=(0,u.ones)([fe[0],pe+fe[1]])}if(R.past_key_values){const{input_ids:fe,attention_mask:$e}=R;$e&&$e.dims[1]>fe.dims[1]||pe<fe.dims[1]&&(R.input_ids=fe.slice(null,[pe,null]))}return R}function xe(g,b,R,ie){return R.past_key_values&&(b=b.map(pe=>[pe.at(-1)])),{...R,decoder_input_ids:Q(b)}}function H(g,...b){return g.config.is_encoder_decoder?xe(g,...b):Qe(g,...b)}function de(g,b,R,ie){const pe=!!R.past_key_values;return ie.guidance_scale!==null&&ie.guidance_scale>1&&(pe?R.input_ids=(0,u.cat)([R.input_ids,R.input_ids],0):(R.input_ids=(0,u.cat)([R.input_ids,(0,u.full_like)(R.input_ids,BigInt(ie.pad_token_id))],0),R.attention_mask=(0,u.cat)([R.attention_mask,(0,u.full_like)(R.attention_mask,0n)],0))),(pe||!R.pixel_values)&&(R.pixel_values=(0,u.full)([0,0,3,384,384],1)),pe&&(R.images_seq_mask=new u.Tensor("bool",new Array(1).fill(!0).fill(!1,0,1),[1,1]),R.images_emb_mask=new u.Tensor("bool",new Array(0).fill(!1),[1,1,0])),R}class W extends o.Callable{main_input_name="input_ids";forward_params=["input_ids","attention_mask"];constructor(b,R,ie){super(),this.config=b,this.sessions=R,this.configs=ie;const pe=x.get(this.constructor),fe=T.get(pe);switch(this.can_generate=!1,this._forward=null,this._prepare_inputs_for_generation=null,fe){case v.DecoderOnly:this.can_generate=!0,this._forward=ue,this._prepare_inputs_for_generation=Qe;break;case v.Seq2Seq:case v.Vision2Seq:case v.Musicgen:this.can_generate=!0,this._forward=re,this._prepare_inputs_for_generation=xe;break;case v.EncoderDecoder:this._forward=re;break;case v.ImageTextToText:this.can_generate=!0,this._forward=ke,this._prepare_inputs_for_generation=H;break;case v.AudioTextToText:this.can_generate=!0,this._forward=ae,this._prepare_inputs_for_generation=H;break;case v.Phi3V:case v.ImageAudioTextToText:this.can_generate=!0,this._prepare_inputs_for_generation=H;break;case v.MultiModality:this.can_generate=!0,this._prepare_inputs_for_generation=de;break;case v.AutoEncoder:this._forward=ce;break;default:this._forward=te;break}this.can_generate&&this.forward_params.push("past_key_values"),this.custom_config=this.config["transformers.js_config"]??{}}async dispose(){const b=[];for(const R of Object.values(this.sessions))R?.handler?.dispose&&b.push(R.handler.dispose());return await Promise.all(b)}static async from_pretrained(b,{progress_callback:R=null,config:ie=null,cache_dir:pe=null,local_files_only:fe=!1,revision:$e="main",model_file_name:ze=null,subfolder:Ve="onnx",device:nt=null,dtype:Mt=null,use_external_data_format:xt=null,session_options:Pt={}}={}){let mt={progress_callback:R,config:ie,cache_dir:pe,local_files_only:fe,revision:$e,model_file_name:ze,subfolder:Ve,device:nt,dtype:Mt,use_external_data_format:xt,session_options:Pt};const Vt=x.get(this),_t=T.get(Vt);ie=mt.config=await s.AutoConfig.from_pretrained(b,mt);let pt;if(_t===v.DecoderOnly)pt=await Promise.all([z(b,{model:mt.model_file_name??"model"},mt),D(b,{generation_config:"generation_config.json"},mt)]);else if(_t===v.Seq2Seq||_t===v.Vision2Seq)pt=await Promise.all([z(b,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},mt),D(b,{generation_config:"generation_config.json"},mt)]);else if(_t===v.MaskGeneration)pt=await Promise.all([z(b,{model:"vision_encoder",prompt_encoder_mask_decoder:"prompt_encoder_mask_decoder"},mt)]);else if(_t===v.EncoderDecoder)pt=await Promise.all([z(b,{model:"encoder_model",decoder_model_merged:"decoder_model_merged"},mt)]);else if(_t===v.ImageTextToText){const Ot={embed_tokens:"embed_tokens",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};ie.is_encoder_decoder&&(Ot.model="encoder_model"),pt=await Promise.all([z(b,Ot,mt),D(b,{generation_config:"generation_config.json"},mt)])}else if(_t===v.AudioTextToText){const Ot={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",decoder_model_merged:"decoder_model_merged"};pt=await Promise.all([z(b,Ot,mt),D(b,{generation_config:"generation_config.json"},mt)])}else if(_t===v.ImageAudioTextToText){const Ot={embed_tokens:"embed_tokens",audio_encoder:"audio_encoder",vision_encoder:"vision_encoder",decoder_model_merged:"decoder_model_merged"};pt=await Promise.all([z(b,Ot,mt),D(b,{generation_config:"generation_config.json"},mt)])}else if(_t===v.Musicgen)pt=await Promise.all([z(b,{model:"text_encoder",decoder_model_merged:"decoder_model_merged",encodec_decode:"encodec_decode"},mt),D(b,{generation_config:"generation_config.json"},mt)]);else if(_t===v.MultiModality)pt=await Promise.all([z(b,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"language_model",lm_head:"lm_head",gen_head:"gen_head",gen_img_embeds:"gen_img_embeds",image_decode:"image_decode"},mt),D(b,{generation_config:"generation_config.json"},mt)]);else if(_t===v.Phi3V)pt=await Promise.all([z(b,{prepare_inputs_embeds:"prepare_inputs_embeds",model:"model",vision_encoder:"vision_encoder"},mt),D(b,{generation_config:"generation_config.json"},mt)]);else if(_t===v.AutoEncoder)pt=await Promise.all([z(b,{encoder_model:"encoder_model",decoder_model:"decoder_model"},mt)]);else{if(_t!==v.EncoderOnly){const Ot=Vt??ie?.model_type;Ot!=="custom"&&console.warn(`Model type for '${Ot}' not found, assuming encoder-only architecture. Please report this at ${c.GITHUB_ISSUE_URL}.`)}pt=await Promise.all([z(b,{model:mt.model_file_name??"model"},mt)])}return new this(ie,...pt)}async _call(b){return await this.forward(b)}async forward(b){return await this._forward(this,b)}get generation_config(){return this.configs?.generation_config??null}_get_logits_warper(b){const R=new p.LogitsProcessorList;return b.temperature!==null&&b.temperature!==1&&R.push(new p.TemperatureLogitsWarper(b.temperature)),b.top_k!==null&&b.top_k!==0&&R.push(new p.TopKLogitsWarper(b.top_k)),b.top_p!==null&&b.top_p<1&&R.push(new p.TopPLogitsWarper(b.top_p)),R}_get_logits_processor(b,R,ie=null){const pe=new p.LogitsProcessorList;if(b.repetition_penalty!==null&&b.repetition_penalty!==1&&pe.push(new p.RepetitionPenaltyLogitsProcessor(b.repetition_penalty)),b.no_repeat_ngram_size!==null&&b.no_repeat_ngram_size>0&&pe.push(new p.NoRepeatNGramLogitsProcessor(b.no_repeat_ngram_size)),b.bad_words_ids!==null&&pe.push(new p.NoBadWordsLogitsProcessor(b.bad_words_ids,b.eos_token_id)),b.min_length!==null&&b.eos_token_id!==null&&b.min_length>0&&pe.push(new p.MinLengthLogitsProcessor(b.min_length,b.eos_token_id)),b.min_new_tokens!==null&&b.eos_token_id!==null&&b.min_new_tokens>0&&pe.push(new p.MinNewTokensLengthLogitsProcessor(R,b.min_new_tokens,b.eos_token_id)),b.forced_bos_token_id!==null&&pe.push(new p.ForcedBOSTokenLogitsProcessor(b.forced_bos_token_id)),b.forced_eos_token_id!==null&&pe.push(new p.ForcedEOSTokenLogitsProcessor(b.max_length,b.forced_eos_token_id)),b.begin_suppress_tokens!==null){const fe=R>1||b.forced_bos_token_id===null?R:R+1;pe.push(new p.SuppressTokensAtBeginLogitsProcessor(b.begin_suppress_tokens,fe))}return b.guidance_scale!==null&&b.guidance_scale>1&&pe.push(new p.ClassifierFreeGuidanceLogitsProcessor(b.guidance_scale)),ie!==null&&pe.extend(ie),pe}_prepare_generation_config(b,R,ie=d.GenerationConfig){const pe={...this.config};for(const $e of["decoder","generator","text_config"])$e in pe&&Object.assign(pe,pe[$e]);const fe=new ie(pe);return Object.assign(fe,this.generation_config??{}),b&&Object.assign(fe,b),R&&Object.assign(fe,(0,a.pick)(R,Object.getOwnPropertyNames(fe))),fe}_get_stopping_criteria(b,R=null){const ie=new w.StoppingCriteriaList;return b.max_length!==null&&ie.push(new w.MaxLengthCriteria(b.max_length,this.config.max_position_embeddings??null)),b.eos_token_id!==null&&ie.push(new w.EosTokenCriteria(b.eos_token_id)),R&&ie.extend(R),ie}_validate_model_class(){if(!this.can_generate){const b=[dc,pc,uc,cc],R=x.get(this.constructor),ie=new Set,pe=this.config.model_type;for(const $e of b){const ze=$e.get(pe);ze&&ie.add(ze[0])}let fe=`The current model class (${R}) is not compatible with \`.generate()\`, as it doesn't have a language model head.`;throw ie.size>0&&(fe+=` Please use the following class instead: ${[...ie].join(", ")}`),Error(fe)}}prepare_inputs_for_generation(...b){return this._prepare_inputs_for_generation(this,...b)}_update_model_kwargs_for_generation({generated_input_ids:b,outputs:R,model_inputs:ie,is_encoder_decoder:pe}){return ie.past_key_values=this.getPastKeyValues(R,ie.past_key_values),ie.input_ids=new u.Tensor("int64",b.flat(),[b.length,1]),pe||(ie.attention_mask=(0,u.cat)([ie.attention_mask,(0,u.ones)([ie.attention_mask.dims[0],1])],1)),ie.position_ids=null,ie}_prepare_model_inputs({inputs:b,bos_token_id:R,model_kwargs:ie}){const pe=(0,a.pick)(ie,this.forward_params),fe=this.main_input_name;if(fe in pe){if(b)throw new Error("`inputs`: {inputs}` were passed alongside {input_name} which is not allowed. Make sure to either pass {inputs} or {input_name}=...")}else pe[fe]=b;return{inputs_tensor:pe[fe],model_inputs:pe,model_input_name:fe}}async _prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:b,model_inputs:R,model_input_name:ie,generation_config:pe}){if(this.sessions.model.inputNames.includes("inputs_embeds")&&!R.inputs_embeds&&"_prepare_inputs_embeds"in this){const{input_ids:$e,pixel_values:ze,attention_mask:Ve,...nt}=R,Mt=await this._prepare_inputs_embeds(R);R={...nt,...(0,a.pick)(Mt,["inputs_embeds","attention_mask"])}}let{last_hidden_state:fe}=await te(this,R);if(pe.guidance_scale!==null&&pe.guidance_scale>1)fe=(0,u.cat)([fe,(0,u.full_like)(fe,0)],0),"attention_mask"in R&&(R.attention_mask=(0,u.cat)([R.attention_mask,(0,u.zeros_like)(R.attention_mask)],0));else if(R.decoder_input_ids){const $e=Q(R.decoder_input_ids).dims[0];if($e!==fe.dims[0]){if(fe.dims[0]!==1)throw new Error(`The encoder outputs have a different batch size (${fe.dims[0]}) than the decoder inputs (${$e}).`);fe=(0,u.cat)(Array.from({length:$e},()=>fe),0)}}return R.encoder_outputs=fe,R}_prepare_decoder_input_ids_for_generation({batch_size:b,model_input_name:R,model_kwargs:ie,decoder_start_token_id:pe,bos_token_id:fe,generation_config:$e}){let{decoder_input_ids:ze,...Ve}=ie;if(!(ze instanceof u.Tensor)){if(ze)Array.isArray(ze[0])||(ze=Array.from({length:b},()=>ze));else if(pe??=fe,this.config.model_type==="musicgen")ze=Array.from({length:b*this.config.decoder.num_codebooks},()=>[pe]);else if(Array.isArray(pe)){if(pe.length!==b)throw new Error(`\`decoder_start_token_id\` expcted to have length ${b} but got ${pe.length}`);ze=pe}else ze=Array.from({length:b},()=>[pe]);ze=Q(ze)}return ie.decoder_attention_mask=(0,u.ones_like)(ze),{input_ids:ze,model_inputs:Ve}}async generate({inputs:b=null,generation_config:R=null,logits_processor:ie=null,stopping_criteria:pe=null,streamer:fe=null,...$e}){this._validate_model_class(),R=this._prepare_generation_config(R,$e);let{inputs_tensor:ze,model_inputs:Ve,model_input_name:nt}=this._prepare_model_inputs({inputs:b,model_kwargs:$e});const Mt=this.config.is_encoder_decoder;Mt&&("encoder_outputs"in Ve||(Ve=await this._prepare_encoder_decoder_kwargs_for_generation({inputs_tensor:ze,model_inputs:Ve,model_input_name:nt,generation_config:R})));let xt;Mt?{input_ids:xt,model_inputs:Ve}=this._prepare_decoder_input_ids_for_generation({batch_size:Ve[nt].dims.at(0),model_input_name:nt,model_kwargs:Ve,decoder_start_token_id:R.decoder_start_token_id,bos_token_id:R.bos_token_id,generation_config:R}):xt=Ve[nt];let Pt=xt.dims.at(-1);R.max_new_tokens!==null&&(R.max_length=Pt+R.max_new_tokens);const mt=this._get_logits_processor(R,Pt,ie),Vt=this._get_stopping_criteria(R,pe),_t=Ve[nt].dims.at(0),pt=I.LogitsSampler.getSampler(R),Ot=new Array(_t).fill(0),Ht=xt.tolist();fe&&fe.put(Ht);let ir,yr={};for(;;){if(Ve=this.prepare_inputs_for_generation(Ht,Ve,R),ir=await this.forward(Ve),R.output_attentions&&R.return_dict_in_generate){const Ur=this.getAttentions(ir);for(const _s in Ur)_s in yr||(yr[_s]=[]),yr[_s].push(Ur[_s])}const It=ir.logits.slice(null,-1,null),or=mt(Ht,It),$r=[];for(let Ur=0;Ur<or.dims.at(0);++Ur){const _s=or[Ur],li=await pt(_s);for(const[ci,ca]of li){const qi=BigInt(ci);Ot[Ur]+=ca,Ht[Ur].push(qi),$r.push([qi]);break}}if(fe&&fe.put($r),Vt(Ht).every(Ur=>Ur))break;Ve=this._update_model_kwargs_for_generation({generated_input_ids:$r,outputs:ir,model_inputs:Ve,is_encoder_decoder:Mt})}fe&&fe.end();const br=this.getPastKeyValues(ir,Ve.past_key_values,!0),fr=new u.Tensor("int64",Ht.flat(),[Ht.length,Ht[0].length]);if(R.return_dict_in_generate)return{sequences:fr,past_key_values:br,...yr};for(const It of Object.values(ir))It.location==="gpu-buffer"&&It.dispose();return fr}getPastKeyValues(b,R,ie=!1){const pe=Object.create(null);for(const fe in b)if(fe.startsWith("present")){const $e=fe.replace("present_conv","past_conv").replace("present","past_key_values"),ze=fe.includes("encoder");if(ze&&R?pe[$e]=R[$e]:pe[$e]=b[fe],R&&(!ze||ie)){const Ve=R[$e];Ve.location==="gpu-buffer"&&Ve.dispose()}}return pe}getAttentions(b){const R={};for(const ie of["cross_attentions","encoder_attentions","decoder_attentions"])for(const pe in b)pe.startsWith(ie)&&(ie in R||(R[ie]=[]),R[ie].push(b[pe]));return R}addPastKeyValues(b,R){if(R)Object.assign(b,R);else{const ie=this.sessions.decoder_model_merged??this.sessions.model,pe=(b[this.main_input_name]??b.attention_mask)?.dims?.[0]??1,fe=ie?.config?.kv_cache_dtype??"float32",$e=fe==="float16"?u.DataTypeMap.float16:u.DataTypeMap.float32,ze=(0,s.getCacheShapes)(this.config,{batch_size:pe});for(const Ve in ze){const nt=ze[Ve].reduce((Mt,xt)=>Mt*xt,1);b[Ve]=new u.Tensor(fe,new $e(nt),ze[Ve])}}}async encode_image({pixel_values:b}){return(await O(this.sessions.vision_encoder,{pixel_values:b})).image_features}async encode_text({input_ids:b}){return(await O(this.sessions.embed_tokens,{input_ids:b})).inputs_embeds}async encode_audio({audio_values:b}){return(await O(this.sessions.audio_encoder,{audio_values:b})).audio_features}}class _e{}class Ie extends _e{constructor({last_hidden_state:b,hidden_states:R=null,attentions:ie=null}){super(),this.last_hidden_state=b,this.hidden_states=R,this.attentions=ie}}class Me extends W{}class ge extends Me{}class Ee extends Me{async _call(b){return new Sr(await super._call(b))}}class we extends Me{async _call(b){return new bt(await super._call(b))}}class Ae extends Me{async _call(b){return new Pr(await super._call(b))}}class De extends Me{async _call(b){return new Dr(await super._call(b))}}class We extends W{}class be extends We{}class st extends We{async _call(b){return new Sr(await super._call(b))}}class je extends We{async _call(b){return new bt(await super._call(b))}}class Ne extends We{async _call(b){return new Pr(await super._call(b))}}class et extends We{async _call(b){return new Dr(await super._call(b))}}class He extends W{}class Je extends He{}class Ze extends He{async _call(b){return new Sr(await super._call(b))}}class Ct extends He{async _call(b){return new bt(await super._call(b))}}class At extends He{async _call(b){return new Pr(await super._call(b))}}class ft extends W{}class Mr extends ft{}class Gr extends ft{}class Or extends W{}class rs extends Or{}class Kt extends W{}class Ir extends Kt{}class Js extends Kt{async _call(b){return new Sr(await super._call(b))}}class Zs extends Kt{async _call(b){return new bt(await super._call(b))}}class js extends Kt{async _call(b){return new Pr(await super._call(b))}}class Vs extends Kt{async _call(b){return new Dr(await super._call(b))}}class dt extends W{}class ks extends dt{}class Wt extends dt{async _call(b){return new Sr(await super._call(b))}}class Et extends dt{async _call(b){return new bt(await super._call(b))}}class Is extends dt{async _call(b){return new Pr(await super._call(b))}}class C extends dt{async _call(b){return new Dr(await super._call(b))}}class X extends W{}class j extends X{}class Y extends X{async _call(b){return new Sr(await super._call(b))}}class ne extends X{async _call(b){return new bt(await super._call(b))}}class he extends X{async _call(b){return new Pr(await super._call(b))}}class Se extends X{async _call(b){return new Dr(await super._call(b))}}class tt extends W{}class lt extends tt{}class Ge extends tt{async _call(b){return new Sr(await super._call(b))}}class St extends tt{async _call(b){return new bt(await super._call(b))}}class kt extends tt{async _call(b){return new Pr(await super._call(b))}}class _r extends tt{async _call(b){return new Dr(await super._call(b))}}class Rt extends W{}class ur extends Rt{}class Kr extends Rt{async _call(b){return new Sr(await super._call(b))}}class Xt extends Rt{async _call(b){return new bt(await super._call(b))}}class gr extends Rt{async _call(b){return new Pr(await super._call(b))}}class ss extends Rt{async _call(b){return new Dr(await super._call(b))}}class dr extends W{}class ds extends dr{}class ps extends dr{async _call(b){return new Sr(await super._call(b))}}class Lr extends dr{async _call(b){return new bt(await super._call(b))}}class As extends dr{async _call(b){return new Pr(await super._call(b))}}class hs extends dr{async _call(b){return new Dr(await super._call(b))}}class nr extends W{}class qr extends nr{}class pr extends nr{async _call(b){return new bt(await super._call(b))}}class vr extends nr{async _call(b){return new Pr(await super._call(b))}}class ns extends nr{async _call(b){return new Dr(await super._call(b))}}class Fs extends nr{async _call(b){return new Sr(await super._call(b))}}class Qr extends W{}class Us extends Qr{}class zr extends Qr{async _call(b){return new Sr(await super._call(b))}}class Le extends Qr{async _call(b){return new bt(await super._call(b))}}class Re extends Qr{async _call(b){return new Pr(await super._call(b))}}class rt extends W{}class Yt extends rt{}class Ws extends rt{async _call(b){return new Sr(await super._call(b))}}class Ds extends rt{async _call(b){return new bt(await super._call(b))}}class Gs extends rt{async _call(b){return new Dr(await super._call(b))}}class ms extends W{}class mn extends ms{}class fn extends ms{async _call(b){return new Sr(await super._call(b))}}class Gn extends ms{async _call(b){return new bt(await super._call(b))}}class le extends ms{async _call(b){return new Pr(await super._call(b))}}class k extends ms{async _call(b){return new Dr(await super._call(b))}}class U extends W{}class ee extends U{}class se extends U{async _call(b){return new Sr(await super._call(b))}}class me extends U{async _call(b){return new bt(await super._call(b))}}class Ce extends U{async _call(b){return new Dr(await super._call(b))}}class Ke extends W{}class Xe extends Ke{}class Ye extends Ke{async _call(b){return new bt(await super._call(b))}}class Ue extends Ke{async _call(b){return new Dr(await super._call(b))}}class $t extends Ke{async _call(b){return new Sr(await super._call(b))}}class wt extends W{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"]}class rr extends wt{}class xr extends wt{}class qt extends W{}class sr extends qt{}class Gt extends qt{}class Vr extends W{}class is extends Vr{}class Ar extends Vr{}class Xr extends W{}class er extends Xr{}class hr extends Xr{}class Br extends Xr{async _call(b){return new bt(await super._call(b))}}class Rr extends W{}class fs extends Rr{}class wr extends Rr{}class os extends Rr{async _call(b){return new bt(await super._call(b))}}class Tr extends Rr{}class Jt extends W{}class mr extends Jt{}class lr extends Jt{}class Nr extends W{}class en extends Nr{}class Kn extends Nr{}class Ks extends W{}class xo extends Ks{}class To extends Ks{async _call(b){return new Sr(await super._call(b))}}class Eo extends Ks{async _call(b){return new bt(await super._call(b))}}class Po extends Ks{async _call(b){return new Pr(await super._call(b))}}class Co extends Ks{async _call(b){return new Dr(await super._call(b))}}class tn extends W{}class So extends tn{}class $o extends tn{async _call(b){return new Sr(await super._call(b))}}class ko extends tn{async _call(b){return new bt(await super._call(b))}}class Io extends tn{async _call(b){return new Pr(await super._call(b))}}class Ao extends tn{async _call(b){return new Dr(await super._call(b))}}class rn extends W{}class vi extends rn{}class xi extends rn{async _call(b){return new Sr(await super._call(b))}}class Ti extends rn{async _call(b){return new bt(await super._call(b))}}class Fo extends rn{async _call(b){return new Pr(await super._call(b))}}class Do extends rn{async _call(b){return new Dr(await super._call(b))}}class qn extends W{}class Ei extends qn{}class sn extends qn{}class Pi extends W{requires_attention_mask=!1;main_input_name="input_features";forward_params=["input_features","attention_mask","decoder_input_ids","decoder_attention_mask","past_key_values"]}class Ci extends Pi{}class Si extends Pi{_prepare_generation_config(b,R){return super._prepare_generation_config(b,R,y.WhisperGenerationConfig)}_retrieve_init_tokens(b){const R=[b.decoder_start_token_id];let ie=b.language;const pe=b.task;if(b.is_multilingual){ie||(console.warn("No language specified - defaulting to English (en)."),ie="en");const $e=`<|${(0,$.whisper_language_to_code)(ie)}|>`;R.push(b.lang_to_id[$e]),R.push(b.task_to_id[pe??"transcribe"])}else if(ie||pe)throw new Error("Cannot specify `task` or `language` for an English-only model. If the model is intended to be multilingual, pass `is_multilingual=true` to generate, or update the generation config.");return!b.return_timestamps&&b.no_timestamps_token_id&&R.at(-1)!==b.no_timestamps_token_id?R.push(b.no_timestamps_token_id):b.return_timestamps&&R.at(-1)===b.no_timestamps_token_id&&(console.warn("<|notimestamps|> prompt token is removed from generation_config since `return_timestamps` is set to `true`."),R.pop()),R.filter(fe=>fe!=null)}async generate({inputs:b=null,generation_config:R=null,logits_processor:ie=null,stopping_criteria:pe=null,...fe}){R=this._prepare_generation_config(R,fe);const $e=fe.decoder_input_ids??this._retrieve_init_tokens(R);if(R.return_timestamps&&(ie??=new p.LogitsProcessorList,ie.push(new p.WhisperTimeStampLogitsProcessor(R,$e))),R.begin_suppress_tokens&&(ie??=new p.LogitsProcessorList,ie.push(new p.SuppressTokensAtBeginLogitsProcessor(R.begin_suppress_tokens,$e.length))),R.return_token_timestamps){if(!R.alignment_heads)throw new Error("Model generation config has no `alignment_heads`, token-level timestamps not available. See https://gist.github.com/hollance/42e32852f24243b748ae6bc1f985b13a on how to add this property to the generation config.");R.task==="translate"&&console.warn("Token-level timestamps may not be reliable for task 'translate'."),R.output_attentions=!0,R.return_dict_in_generate=!0}const ze=await super.generate({inputs:b,generation_config:R,logits_processor:ie,decoder_input_ids:$e,...fe});return R.return_token_timestamps&&(ze.token_timestamps=this._extract_token_timestamps(ze,R.alignment_heads,R.num_frames)),ze}_extract_token_timestamps(b,R,ie=null,pe=.02){if(!b.cross_attentions)throw new Error("Model outputs must contain cross attentions to extract timestamps. This is most likely because the model was not exported with `output_attentions=True`.");ie==null&&console.warn("`num_frames` has not been set, meaning the entire audio will be analyzed. This may lead to inaccurate token-level timestamps for short audios (< 30 seconds).");let fe=this.config.median_filter_width;fe===void 0&&(console.warn("Model config has no `median_filter_width`, using default value of 7."),fe=7);const $e=b.cross_attentions,ze=Array.from({length:this.config.decoder_layers},(_t,pt)=>(0,u.cat)($e.map(Ot=>Ot[pt]),2)),Ve=(0,u.stack)(R.map(([_t,pt])=>{if(_t>=ze.length)throw new Error(`Layer index ${_t} is out of bounds for cross attentions (length ${ze.length}).`);return ie?ze[_t].slice(null,pt,null,[0,ie]):ze[_t].slice(null,pt)})).transpose(1,0,2,3),[nt,Mt]=(0,u.std_mean)(Ve,-2,0,!0),xt=Ve.clone();for(let _t=0;_t<xt.dims[0];++_t){const pt=xt[_t];for(let Ot=0;Ot<pt.dims[0];++Ot){const Ht=pt[Ot],ir=nt[_t][Ot][0].data,yr=Mt[_t][Ot][0].data;for(let br=0;br<Ht.dims[0];++br){let fr=Ht[br].data;for(let It=0;It<fr.length;++It)fr[It]=(fr[It]-yr[It])/ir[It];fr.set((0,f.medianFilter)(fr,fe))}}}const Pt=[(0,u.mean)(xt,1)],mt=b.sequences.dims,Vt=new u.Tensor("float32",new Float32Array(mt[0]*mt[1]),mt);for(let _t=0;_t<mt[0];++_t){const pt=Pt[_t].neg().squeeze_(0),[Ot,Ht]=(0,f.dynamic_time_warping)(pt.tolist()),ir=Array.from({length:Ot.length-1},(fr,It)=>Ot[It+1]-Ot[It]),yr=(0,a.mergeArrays)([1],ir).map(fr=>!!fr),br=[];for(let fr=0;fr<yr.length;++fr)yr[fr]&&br.push(Ht[fr]*pe);Vt[_t].data.set(br,1)}return Vt}}class Oo extends Si{}class $i extends W{requires_attention_mask=!1;main_input_name="input_values";forward_params=["input_values","decoder_input_ids","past_key_values"]}class ki extends $i{}class Ii extends $i{}class Ai extends W{main_input_name="pixel_values";forward_params=["pixel_values","decoder_input_ids","encoder_hidden_states","past_key_values"]}class Fi extends W{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class Hn extends Fi{_merge_input_ids_with_image_features(b){const R=b.image_features.dims.at(-1),ie=b.image_features.view(-1,R);return F({image_token_id:this.config.image_token_index,...b,image_features:ie})}}class Lo extends Hn{}class zo extends Hn{}class Bo extends W{forward_params=["input_ids","inputs_embeds","attention_mask","pixel_values","encoder_outputs","decoder_input_ids","decoder_inputs_embeds","decoder_attention_mask","past_key_values"];main_input_name="inputs_embeds"}class Ro extends Bo{_merge_input_ids_with_image_features({inputs_embeds:b,image_features:R,input_ids:ie,attention_mask:pe}){return{inputs_embeds:(0,u.cat)([R,b],1),attention_mask:(0,u.cat)([(0,u.ones)(R.dims.slice(0,2)),pe],1)}}async _prepare_inputs_embeds({input_ids:b,pixel_values:R,inputs_embeds:ie,attention_mask:pe}){if(!b&&!R)throw new Error("Either `input_ids` or `pixel_values` should be provided.");let fe,$e;return b&&(fe=await this.encode_text({input_ids:b})),R&&($e=await this.encode_image({pixel_values:R})),fe&&$e?{inputs_embeds:ie,attention_mask:pe}=this._merge_input_ids_with_image_features({inputs_embeds:fe,image_features:$e,input_ids:b,attention_mask:pe}):ie=fe||$e,{inputs_embeds:ie,attention_mask:pe}}async forward({input_ids:b,pixel_values:R,attention_mask:ie,decoder_input_ids:pe,decoder_attention_mask:fe,encoder_outputs:$e,past_key_values:ze,inputs_embeds:Ve,decoder_inputs_embeds:nt}){if(Ve||({inputs_embeds:Ve,attention_mask:ie}=await this._prepare_inputs_embeds({input_ids:b,pixel_values:R,inputs_embeds:Ve,attention_mask:ie})),!$e){let{last_hidden_state:Pt}=await te(this,{inputs_embeds:Ve,attention_mask:ie});$e=Pt}if(!nt){if(!pe)throw new Error("Either `decoder_input_ids` or `decoder_inputs_embeds` should be provided.");nt=await this.encode_text({input_ids:pe})}return await ue(this,{inputs_embeds:nt,attention_mask:fe,encoder_attention_mask:ie,encoder_hidden_states:$e,past_key_values:ze},!0)}}class No extends W{forward_params=["input_ids","attention_mask","pixel_values","position_ids","past_key_values"]}class jo extends No{_merge_input_ids_with_image_features(b){const R=b.image_features.dims.at(-1),ie=b.image_features.view(-1,R);return F({image_token_id:this.config.image_token_index,...b,image_features:ie})}}class _n extends Fi{_merge_input_ids_with_image_features(b){const R=b.image_features.dims.at(-1),ie=b.image_features.view(-1,R);return F({image_token_id:this.config.image_token_index,...b,image_features:ie})}}class nn extends W{forward_params=["input_ids","attention_mask","inputs_embeds","per_layer_inputs","position_ids","pixel_values","input_features","input_features_mask","past_key_values"]}class Qn extends nn{async forward({input_ids:b=null,attention_mask:R=null,pixel_values:ie=null,input_features:pe=null,input_features_mask:fe=null,position_ids:$e=null,inputs_embeds:ze=null,per_layer_inputs:Ve=null,past_key_values:nt=null,generation_config:Mt=null,logits_processor:xt=null,...Pt}){if((!ze||!Ve)&&({inputs_embeds:ze,per_layer_inputs:Ve}=await O(this.sessions.embed_tokens,{input_ids:b}),b.dims[1]!==1)){if(ie){const{image_features:Vt}=await O(this.sessions.vision_encoder,{pixel_values:ie});({inputs_embeds:ze,attention_mask:R}=this._merge_input_ids_with_image_features({image_features:Vt,inputs_embeds:ze,input_ids:b,attention_mask:R}))}if(pe){const{audio_features:Vt}=await O(this.sessions.audio_encoder,{input_features:pe,input_features_mask:fe});({inputs_embeds:ze,attention_mask:R}=this._merge_input_ids_with_audio_features({audio_features:Vt,inputs_embeds:ze,input_ids:b,attention_mask:R}))}}return await ue(this,{inputs_embeds:ze,per_layer_inputs:Ve,past_key_values:nt,attention_mask:R,position_ids:$e,generation_config:Mt,logits_processor:xt},!0)}_merge_input_ids_with_image_features(b){const R=b.image_features.dims.at(-1),ie=b.image_features.view(-1,R);return F({image_token_id:this.config.image_token_id,...b,image_features:ie})}_merge_input_ids_with_audio_features(b){const R=b.audio_features.dims.at(-1),ie=b.audio_features.view(-1,R);return G({audio_token_id:this.config.audio_token_id,...b,audio_features:ie})}}class Vo extends W{forward_params=["input_ids","attention_mask","pixel_values","pixel_attention_mask","position_ids","past_key_values"]}class Xn extends Vo{async encode_image({pixel_values:b,pixel_attention_mask:R}){return(await O(this.sessions.vision_encoder,{pixel_values:b,pixel_attention_mask:R})).image_features}_merge_input_ids_with_image_features(b){const R=b.image_features.dims.at(-1),ie=b.image_features.view(-1,R);return F({image_token_id:this.config.image_token_id,...b,image_features:ie})}}class gn extends Xn{}class Yn extends W{forward_params=["input_ids","inputs_embeds","attention_mask","position_ids","pixel_values","image_sizes","past_key_values"]}class Jn extends Yn{async forward({input_ids:b=null,attention_mask:R=null,pixel_values:ie=null,image_sizes:pe=null,position_ids:fe=null,inputs_embeds:$e=null,past_key_values:ze=null,generation_config:Ve=null,logits_processor:nt=null,...Mt}){if(!$e){let Pt;if(ie&&b.dims[1]!==1){if(!pe)throw new Error("`image_sizes` must be provided when `pixel_values` is provided.");({image_features:Pt}=await O(this.sessions.vision_encoder,{pixel_values:ie,image_sizes:pe}))}else{const mt=this.config.normalized_config.hidden_size;Pt=new u.Tensor("float32",[],[0,mt])}({inputs_embeds:$e}=await O(this.sessions.prepare_inputs_embeds,{input_ids:b,image_features:Pt}))}return await ue(this,{inputs_embeds:$e,past_key_values:ze,attention_mask:R,position_ids:fe,generation_config:Ve,logits_processor:nt},!1)}}class Os extends W{}class Di extends Os{}class Uo extends Os{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"text_model"})}}class Oi extends Os{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"text_model"})}}class Wo extends Os{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"vision_model"})}}class Go extends Os{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"vision_model"})}}class Zn extends W{}class Li extends Zn{}class wn extends Zn{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"text_model"})}}class ut extends Os{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"vision_model"})}}class Ko extends W{}class zi extends Ko{}class yn extends W{}class bn extends yn{async forward(b){const R=!b.input_ids,ie=!b.pixel_values;if(R&&ie)throw new Error("Either `input_ids` or `pixel_values` should be provided.");if(R&&(b.input_ids=(0,u.ones)([b.pixel_values.dims[0],1])),ie){const{image_size:nt}=this.config.vision_config;b.pixel_values=(0,u.full)([0,3,nt,nt],0)}const{text_embeddings:pe,image_embeddings:fe,l2norm_text_embeddings:$e,l2norm_image_embeddings:ze}=await super.forward(b),Ve={};return R||(Ve.text_embeddings=pe,Ve.l2norm_text_embeddings=$e),ie||(Ve.image_embeddings=fe,Ve.l2norm_image_embeddings=ze),Ve}}class Yr extends yn{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"text_model"})}}class Mn extends yn{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"vision_model"})}}class vn extends W{}class Bi extends vn{}class Ri extends vn{}class ei extends W{}class ti extends ei{}class Ni extends ei{}class ri extends W{}class ji extends ri{}class xn extends ri{}class Tn extends W{}class si extends Tn{}class Vi extends Tn{}class ni extends W{}class Ui extends ni{}class Wi extends ni{}class ii extends W{}class h extends ii{}class P extends ii{}class A extends W{}class L extends A{}class V extends A{}class oe extends W{}class Te extends oe{}class Oe extends oe{}class qe extends W{}class it extends qe{}class yt extends qe{}class Ft extends W{}class Nt extends Ft{}class Er extends Ft{}class Ls extends W{}class qo extends Ls{}class $d extends Ls{}class Za extends W{}class kd extends Za{}class Id extends Za{}class el extends W{}class Ad extends el{}class Fd extends el{}class tl extends W{}class Dd extends tl{}class Od extends tl{}class rl extends W{}class Ld extends rl{}class zd extends rl{}class sl extends W{}class Bd extends sl{}class Rd extends sl{}class nl extends W{}class Nd extends nl{}class jd extends nl{}class il extends W{}class Vd extends il{}class Ud extends il{}class ol extends W{}class Wd extends ol{}class Gd extends ol{}class al extends W{}class Kd extends al{}class qd extends al{}class ll extends W{}class Hd extends ll{}class Qd extends ll{}class cl extends W{}class Xd extends cl{}class Yd extends cl{}class ul extends W{}class Jd extends ul{}class Zd extends ul{}class dl extends W{}class ep extends dl{}class tp extends dl{}class pl extends W{}class rp extends pl{}class sp extends pl{}class hl extends W{}class np extends hl{}class ip extends hl{}class op extends W{forward_params=["input_ids","attention_mask","position_ids","past_key_values","pixel_values","image_grid_thw"]}class ap extends op{get_rope_index(b,R,ie,pe){const{vision_config:fe,image_token_id:$e,video_token_id:ze,vision_start_token_id:Ve}=this.config,nt=fe.spatial_merge_size??2,Mt=[];if(R||ie){let xt=b.tolist();pe||(pe=(0,u.ones_like)(b));const Pt=pe.tolist(),mt=Array.from({length:3},Ht=>Array.from({length:b.dims[0]},ir=>Array.from({length:b.dims[1]},yr=>1))),Vt=R?R.tolist():[],_t=ie?ie.tolist():[];let pt=0,Ot=0;for(let Ht=0;Ht<xt.length;++Ht){const ir=xt[Ht].filter((tr,Cr)=>Pt[Ht][Cr]==1),br=ir.reduce((tr,Cr,an)=>(Cr==Ve&&tr.push(an),tr),[]).map(tr=>ir[tr+1]),fr=br.filter(tr=>tr==$e).length,It=br.filter(tr=>tr==ze).length;let or=[],$r=0,Pn=fr,Ur=It;for(let tr=0;tr<br.length;++tr){const Cr=ir.findIndex((Sn,gs)=>gs>$r&&Sn==$e),an=ir.findIndex((Sn,gs)=>gs>$r&&Sn==ze),Cn=Pn>0&&Cr!==-1?Cr:ir.length+1,ui=Ur>0&&an!==-1?an:ir.length+1;let ua,hc,mc,fc;Cn<ui?([hc,mc,fc]=Vt[pt],++pt,--Pn,ua=Cn):([hc,mc,fc]=_t[Ot],++Ot,--Ur,ua=ui);const[xT,_c,da]=[Number(hc),Math.floor(Number(mc)/nt),Math.floor(Number(fc)/nt)],gc=ua-$r,y_=or.length>0?(0,f.max)(or.at(-1))[0]+1:0;or.push(Array.from({length:3*gc},(Sn,gs)=>y_+gs%gc));const wc=gc+y_,pa=xT*_c*da,TT=Array.from({length:pa},(Sn,gs)=>wc+Math.floor(gs/(_c*da))),ET=Array.from({length:pa},(Sn,gs)=>wc+Math.floor(gs/da)%_c),PT=Array.from({length:pa},(Sn,gs)=>wc+gs%da);or.push([TT,ET,PT].flat()),$r=ua+pa}if($r<ir.length){const tr=or.length>0?(0,f.max)(or.at(-1))[0]+1:0,Cr=ir.length-$r;or.push(Array.from({length:3*Cr},(an,Cn)=>tr+Cn%Cr))}const _s=or.reduce((tr,Cr)=>tr+Cr.length,0),li=new Array(_s);let ci=0;for(let tr=0;tr<3;++tr)for(let Cr=0;Cr<or.length;++Cr){const an=or[Cr],Cn=an.length/3;for(let ui=tr*Cn;ui<(tr+1)*Cn;++ui)li[ci++]=an[ui]}let ca=0;const qi=Pt[Ht];for(let tr=0;tr<qi.length;++tr)if(qi[tr]==1){for(let Cr=0;Cr<3;++Cr)mt[Cr][Ht][tr]=li[Cr*_s/3+ca];++ca}const vT=(0,f.max)(li)[0];Mt.push(vT+1-xt[Ht].length)}return[new u.Tensor("int64",mt.flat(1/0),[3,b.dims[0],b.dims[1]]),new u.Tensor("int64",Mt,[Mt.length,1])]}else if(pe){const{data:xt,dims:Pt}=ve(pe),mt=BigInt64Array.from({length:3*xt.length},(_t,pt)=>xt[pt%xt.length]),Vt=Array.from({length:Pt[0]},(_t,pt)=>(0,f.max)(xt.subarray(Pt[1]*pt,Pt[1]*(pt+1)))[0]+1n+BigInt(Pt[1]));return[new u.Tensor("int64",mt,[3,...Pt]),new u.Tensor("int64",Vt,[Vt.length,1])]}else{const[xt,Pt]=b.dims,mt=BigInt64Array.from({length:3*xt*Pt},(Vt,_t)=>BigInt(Math.floor(_t%Pt/xt)));return[new u.Tensor("int64",mt,[3,...b.dims]),(0,u.zeros)([xt,1])]}}async encode_image({pixel_values:b,image_grid_thw:R}){return(await O(this.sessions.vision_encoder,{pixel_values:b,grid_thw:R})).image_features}_merge_input_ids_with_image_features(b){return F({image_token_id:this.config.image_token_id,...b})}prepare_inputs_for_generation(b,R,ie){if(R.attention_mask&&!R.position_ids)if(!R.past_key_values)[R.position_ids,R.rope_deltas]=this.get_rope_index(R.input_ids,R.image_grid_thw,R.video_grid_thw,R.attention_mask);else{R.pixel_values=null;const pe=BigInt(Object.values(R.past_key_values)[0].dims.at(-2)),fe=R.rope_deltas.map($e=>pe+$e);R.position_ids=(0,u.stack)([fe,fe,fe],0)}return R}}class ml extends W{}class lp extends ml{}class cp extends ml{}class fl extends W{}class up extends fl{}class dp extends fl{}class _l extends W{}class pp extends _l{}class hp extends _l{}class gl extends W{}class mp extends gl{}class fp extends gl{}class wl extends W{}class _p extends wl{}class gp extends wl{}class yl extends W{}class wp extends yl{}class yp extends yl{async _call(b){return new bt(await super._call(b))}}class bl extends W{}class bp extends bl{}class Mp extends bl{async _call(b){return new bt(await super._call(b))}}class vp extends W{}class xp extends vp{}class Ml extends W{}class Tp extends Ml{}class Ep extends Ml{async _call(b){return new bt(await super._call(b))}}class Pp extends W{}class Cp extends Pp{}class vl extends W{}class Sp extends vl{}class $p extends vl{async _call(b){return new bt(await super._call(b))}}class kp extends W{}class Ip extends kp{}class xl extends W{}class Ap extends xl{}class Fp extends xl{async _call(b){return new bt(await super._call(b))}}class Dp extends W{}class Op extends Dp{async _call(b){return new g_(await super._call(b))}}class Tl extends W{}class Lp extends Tl{}class zp extends Tl{async _call(b){return new bt(await super._call(b))}}class El extends W{}class Bp extends El{}class Rp extends El{async _call(b){return new bt(await super._call(b))}}class Pl extends W{}class Np extends Pl{}class jp extends Pl{}class Cl extends W{}class Vp extends Cl{}class Up extends Cl{}class Sl extends W{}class Wp extends Sl{}class Gp extends Sl{async _call(b){return new bt(await super._call(b))}}class Ho extends W{}class Kp extends Ho{}class qp extends Ho{async _call(b){return new kl(await super._call(b))}}class $l extends Ho{async _call(b){return new Hp(await super._call(b))}}class kl extends _e{constructor({logits:b,pred_boxes:R}){super(),this.logits=b,this.pred_boxes=R}}class Hp extends _e{constructor({logits:b,pred_boxes:R,pred_masks:ie}){super(),this.logits=b,this.pred_boxes=R,this.pred_masks=ie}}class Il extends W{}class Qp extends Il{}class Xp extends Il{async _call(b){return new Gi(await super._call(b))}}class Gi extends _e{constructor({logits:b,pred_boxes:R}){super(),this.logits=b,this.pred_boxes=R}}class Al extends W{}class Yp extends Al{}class Jp extends Al{async _call(b){return new Zp(await super._call(b))}}class Zp extends Gi{}class Fl extends W{}class eh extends Fl{}class th extends Fl{async _call(b){return new rh(await super._call(b))}}class rh extends Gi{}class Dl extends W{}class sh extends Dl{}class nh extends Dl{async _call(b){return new Gi(await super._call(b))}}class Ol extends W{}class ih extends Ol{}class oh extends Ol{async _call(b){return new ah(await super._call(b))}}class ah extends kl{}class Ll extends W{}class lh extends Ll{}class ch extends Ll{async _call(b){return new bt(await super._call(b))}}class zl extends W{}class uh extends zl{}class dh extends zl{async _call(b){return new bt(await super._call(b))}}class Bl extends W{}class ph extends Bl{}class hh extends Bl{async _call(b){return new bt(await super._call(b))}}class Qo extends W{}class mh extends Qo{}class fh extends Qo{async _call(b){return new bt(await super._call(b))}}class _h extends Qo{}class Rl extends W{}class gh extends Rl{}class wh extends Rl{}class Nl extends W{}class yh extends Nl{}class bh extends Nl{}class Mh extends W{}class vh extends Mh{}class Xo extends W{}class xh extends Xo{}class Th extends Xo{}class Eh extends Xo{}class Ph extends W{}class Ch extends Ph{}class Sh extends W{}class $h extends Sh{}class kh extends W{}class Ih extends kh{}class jl extends W{}class Ah extends jl{}class Fh extends jl{}class Vl extends W{}class Dh extends Vl{}class Oh extends Vl{}class Lh extends W{}class zh extends Lh{}class Ul extends W{}class Bh extends Ul{}class Rh extends Ul{async _call(b){return new bt(await super._call(b))}}class Wl extends W{}class Nh extends Wl{}class jh extends Wl{async _call(b){return new bt(await super._call(b))}}class Gl extends W{}class Vh extends Gl{}class Uh extends Gl{async _call(b){return new bt(await super._call(b))}}class Kl extends W{}class Wh extends Kl{}class Gh extends Kl{async _call(b){return new bt(await super._call(b))}}class Kh extends W{}class qh extends Kh{}class Hh extends W{}class Qh extends Hh{}class Xh extends W{}class Yh extends Xh{}class ql extends W{}class Jh extends ql{}class Zh extends ql{async _call(b){return new em(await super._call(b))}}class em extends _e{constructor({logits:b,pred_boxes:R}){super(),this.logits=b,this.pred_boxes=R}}class tm extends W{}class rm extends tm{async get_image_embeddings({pixel_values:b}){return await te(this,{pixel_values:b})}async forward(b){if((!b.image_embeddings||!b.image_positional_embeddings)&&(b={...b,...await this.get_image_embeddings(b)}),!b.input_labels&&b.input_points){const ie=b.input_points.dims.slice(0,-1),pe=ie.reduce((fe,$e)=>fe*$e,1);b.input_labels=new u.Tensor("int64",new BigInt64Array(pe).fill(1n),ie)}const R={image_embeddings:b.image_embeddings,image_positional_embeddings:b.image_positional_embeddings};return b.input_points&&(R.input_points=b.input_points),b.input_labels&&(R.input_labels=b.input_labels),b.input_boxes&&(R.input_boxes=b.input_boxes),await O(this.sessions.prompt_encoder_mask_decoder,R)}async _call(b){return new sm(await super._call(b))}}class sm extends _e{constructor({iou_scores:b,pred_masks:R}){super(),this.iou_scores=b,this.pred_masks=R}}class Hl extends W{}class nm extends Hl{}class im extends Hl{}class Ql extends W{}class om extends Ql{}class am extends Ql{}class on extends W{}class lm extends on{}class cm extends on{async _call(b){return new En(await super._call(b))}}class um extends on{async _call(b){return new bt(await super._call(b))}}class dm extends on{async _call(b){return new Pr(await super._call(b))}}class Xl extends W{}class pm extends Xl{}class hm extends Xl{async _call(b){return new Pr(await super._call(b))}}class mm extends W{}class fm extends mm{}class Yo extends W{}class _m extends Yo{}class gm extends Yo{async _call(b){return new En(await super._call(b))}}class wm extends Yo{async _call(b){return new bt(await super._call(b))}}class Ki extends W{}class ym extends Ki{}class bm extends Ki{async _call(b){return new En(await super._call(b))}}class Mm extends Ki{async _call(b){return new bt(await super._call(b))}}class vm extends Ki{async _call(b){return new Pr(await super._call(b))}}class Jo extends W{}class xm extends Jo{}class Tm extends Jo{async _call(b){return new En(await super._call(b))}}class Em extends Jo{async _call(b){return new bt(await super._call(b))}}class kx extends W{}class Pm extends on{}class Cm extends on{async _call(b){return new En(await super._call(b))}}class Sm extends on{async _call(b){return new bt(await super._call(b))}}class oi extends W{}class $m extends oi{}class km extends oi{async _call(b){return new En(await super._call(b))}}class Im extends oi{async _call(b){return new bt(await super._call(b))}}class Am extends oi{async _call(b){return new __(await super._call(b))}}class Fm extends oi{async _call(b){return new Pr(await super._call(b))}}class Dm extends W{}class Om extends Dm{}class Zo extends W{}class Ix extends Zo{}class Lm extends Zo{}class zm extends Zo{async generate_speech(b,R,{threshold:ie=.5,minlenratio:pe=0,maxlenratio:fe=20,vocoder:$e=null}={}){const ze={input_ids:b},{encoder_outputs:Ve,encoder_attention_mask:nt}=await te(this,ze),Mt=Ve.dims[1]/this.config.reduction_factor,xt=Math.floor(Mt*fe),Pt=Math.floor(Mt*pe),mt=this.config.num_mel_bins;let Vt=[],_t=null,pt=null,Ot=0;for(;;){++Ot;const yr=J(!!pt);let br;pt?br=pt.output_sequence_out:br=new u.Tensor("float32",new Float32Array(mt),[1,1,mt]);let fr={use_cache_branch:yr,output_sequence:br,encoder_attention_mask:nt,speaker_embeddings:R,encoder_hidden_states:Ve};this.addPastKeyValues(fr,_t),pt=await O(this.sessions.decoder_model_merged,fr),_t=this.getPastKeyValues(pt,_t);const{prob:It,spectrum:or}=pt;if(Vt.push(or),Ot>=Pt&&(Array.from(It.data).filter($r=>$r>=ie).length>0||Ot>=xt))break}const Ht=(0,u.cat)(Vt),{waveform:ir}=await O($e.sessions.model,{spectrogram:Ht});return{spectrogram:Ht,waveform:ir}}}class Bm extends W{main_input_name="spectrogram"}class Rm extends W{}class Nm extends Rm{}class Yl extends W{}class jm extends Yl{}class Vm extends Yl{}class Jl extends W{}class Um extends Jl{}class Wm extends Jl{}class Zl extends W{}class Gm extends Zl{}class Km extends Zl{}class ec extends W{}class qm extends ec{}class Hm extends ec{}class ea extends W{}class Qm extends ea{}class Xm extends ea{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"text_model"})}}class Ym extends ea{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"audio_model"})}}class Jm extends W{}class tc extends Jm{async _call(b){return new w_(await super._call(b))}}class ta extends W{}class Ax extends ta{}class Zm extends ta{}class ef extends ta{}class rc extends W{}class tf extends rc{}class rf extends rc{}class sc extends W{}class sf extends sc{}class nf extends sc{async _call(b){return new bt(await super._call(b))}}class nc extends W{}class Fx extends nc{}class Dx extends nc{}class ic extends W{forward_params=["input_ids","attention_mask","encoder_outputs","decoder_input_ids","decoder_attention_mask","past_key_values"];_apply_and_filter_by_delay_pattern_mask(b){const[R,ie]=b.dims,pe=this.config.decoder.num_codebooks,fe=ie-pe;let $e=0;for(let nt=0;nt<b.size;++nt){if(b.data[nt]===this.config.decoder.pad_token_id)continue;const Mt=nt%ie,xt=Math.floor(nt/ie)%pe,Pt=Mt-xt;Pt>0&&Pt<=fe&&(b.data[$e++]=b.data[nt])}const ze=Math.floor(R/pe),Ve=$e/(ze*pe);return new u.Tensor(b.type,b.data.slice(0,$e),[ze,pe,Ve])}prepare_inputs_for_generation(b,R,ie){let pe=structuredClone(b);for(let $e=0;$e<pe.length;++$e)for(let ze=0;ze<pe[$e].length;++ze)$e%this.config.decoder.num_codebooks>=ze&&(pe[$e][ze]=BigInt(this.config.decoder.pad_token_id));return ie.guidance_scale!==null&&ie.guidance_scale>1&&(pe=pe.concat(pe)),super.prepare_inputs_for_generation(pe,R,ie)}async generate(b){const R=await super.generate(b),ie=this._apply_and_filter_by_delay_pattern_mask(R).unsqueeze_(0),{audio_values:pe}=await O(this.sessions.encodec_decode,{audio_codes:ie});return pe}}class ra extends W{}class of extends ra{}class af extends ra{async _call(b){return new bt(await super._call(b))}}class lf extends ra{}class sa extends W{}class cf extends sa{}class uf extends sa{async _call(b){return new bt(await super._call(b))}}class df extends sa{}class na extends W{}class pf extends na{}class hf extends na{async _call(b){return new bt(await super._call(b))}}class mf extends na{}class ia extends W{}class ff extends ia{}class _f extends ia{async _call(b){return new bt(await super._call(b))}}class gf extends ia{}class wf extends W{}class yf extends wf{}class bf extends W{}class Mf extends bf{forward_params=["input_ids","pixel_values","images_seq_mask","images_emb_mask","attention_mask","position_ids","past_key_values"];constructor(...b){super(...b),this._generation_mode="text"}async forward(b){const R=this._generation_mode??"text";let ie;if(R==="text"||!b.past_key_values){const Ve=this.sessions.prepare_inputs_embeds,nt=(0,a.pick)(b,Ve.inputNames);ie=await O(Ve,nt)}else{const Ve=this.sessions.gen_img_embeds,nt=(0,a.pick)({image_ids:b.input_ids},Ve.inputNames);ie=await O(Ve,nt)}const pe={...b,...ie},fe=await ue(this,pe),$e=this.sessions[R==="text"?"lm_head":"gen_head"];if(!$e)throw new Error(`Unable to find "${$e}" generation head`);const ze=await O($e,(0,a.pick)(fe,$e.inputNames));return{...ie,...fe,...ze}}async generate(b){return this._generation_mode="text",super.generate(b)}async generate_images(b){this._generation_mode="image";const R=(b.inputs??b[this.main_input_name]).dims[1],pe=(await super.generate(b)).slice(null,[R,null]),fe=this.sessions.image_decode,{decoded_image:$e}=await O(fe,{generated_tokens:pe}),ze=$e.add_(1).mul_(255/2).clamp_(0,255).to("uint8"),Ve=[];for(const nt of ze){const Mt=_.RawImage.fromTensor(nt);Ve.push(Mt)}return Ve}}class vf extends _e{constructor({char_logits:b,bpe_logits:R,wp_logits:ie}){super(),this.char_logits=b,this.bpe_logits=R,this.wp_logits=ie}get logits(){return[this.char_logits,this.bpe_logits,this.wp_logits]}}class xf extends W{}class Tf extends xf{async _call(b){return new vf(await super._call(b))}}class oc extends W{}class Ef extends oc{}class Pf extends oc{}class ac extends W{}class Cf extends ac{}class Sf extends ac{}class $f extends W{forward_params=["input_ids","attention_mask","position_ids","audio_values","past_key_values"]}class lc extends $f{_merge_input_ids_with_audio_features(b){const R=b.audio_features.dims.at(-1),ie=b.audio_features.view(-1,R);return G({audio_token_id:this.config.ignore_index??this.config.audio_token_id,...b,audio_features:ie})}}class kf extends lc{}class oa extends W{main_input_name="input_values";forward_params=["input_values"]}class If extends _e{constructor({audio_codes:b}){super(),this.audio_codes=b}}class Af extends _e{constructor({audio_values:b}){super(),this.audio_values=b}}class Ff extends oa{async encode(b){return new If(await O(this.sessions.encoder_model,b))}async decode(b){return new Af(await O(this.sessions.decoder_model,b))}}class Df extends oa{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"encoder_model"})}}class Of extends oa{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"decoder_model"})}}class aa extends W{main_input_name="input_values";forward_params=["input_values"]}class Lf extends _e{constructor({audio_codes:b}){super(),this.audio_codes=b}}class zf extends _e{constructor({audio_values:b}){super(),this.audio_values=b}}class Bf extends aa{async encode(b){return new Lf(await O(this.sessions.encoder_model,b))}async decode(b){return new zf(await O(this.sessions.decoder_model,b))}}class Rf extends aa{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"encoder_model"})}}class Nf extends aa{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"decoder_model"})}}class la extends W{main_input_name="input_values";forward_params=["input_values"]}class jf extends la{async encode(b){return await O(this.sessions.encoder_model,b)}async decode(b){return await O(this.sessions.decoder_model,b)}}class Vf extends la{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"encoder_model"})}}class Uf extends la{static async from_pretrained(b,R={}){return super.from_pretrained(b,{...R,model_file_name:R.model_file_name??"decoder_model"})}}class jt{static MODEL_CLASS_MAPPINGS=null;static BASE_IF_FAIL=!1;static async from_pretrained(b,{progress_callback:R=null,config:ie=null,cache_dir:pe=null,local_files_only:fe=!1,revision:$e="main",model_file_name:ze=null,subfolder:Ve="onnx",device:nt=null,dtype:Mt=null,use_external_data_format:xt=null,session_options:Pt={}}={}){const mt={progress_callback:R,config:ie,cache_dir:pe,local_files_only:fe,revision:$e,model_file_name:ze,subfolder:Ve,device:nt,dtype:Mt,use_external_data_format:xt,session_options:Pt};if(mt.config=await s.AutoConfig.from_pretrained(b,mt),!this.MODEL_CLASS_MAPPINGS)throw new Error("`MODEL_CLASS_MAPPINGS` not implemented for this type of `AutoClass`: "+this.name);const Vt=mt.config.model_type;for(const _t of this.MODEL_CLASS_MAPPINGS){let pt=_t.get(Vt);if(!pt){for(const Ot of _t.values())if(Ot[0]===Vt){pt=Ot;break}if(!pt)continue}return await pt[1].from_pretrained(b,mt)}if(this.BASE_IF_FAIL)return f_.has(Vt)||console.warn(`Unknown model class "${Vt}", attempting to construct from base class.`),await W.from_pretrained(b,mt);throw Error(`Unsupported model type: ${Vt}`)}}const Ox=new Map([["bert",["BertModel",ge]],["neobert",["NeoBertModel",be]],["modernbert",["ModernBertModel",Je]],["nomic_bert",["NomicBertModel",rs]],["roformer",["RoFormerModel",Ir]],["electra",["ElectraModel",j]],["esm",["EsmModel",Us]],["convbert",["ConvBertModel",ks]],["camembert",["CamembertModel",lt]],["deberta",["DebertaModel",ur]],["deberta-v2",["DebertaV2Model",ds]],["mpnet",["MPNetModel",mn]],["albert",["AlbertModel",Xe]],["distilbert",["DistilBertModel",qr]],["roberta",["RobertaModel",xo]],["xlm",["XLMModel",So]],["xlm-roberta",["XLMRobertaModel",vi]],["clap",["ClapModel",Qm]],["clip",["CLIPModel",Di]],["clipseg",["CLIPSegModel",Bi]],["chinese_clip",["ChineseCLIPModel",zi]],["siglip",["SiglipModel",Li]],["jina_clip",["JinaCLIPModel",bn]],["mobilebert",["MobileBertModel",Yt]],["squeezebert",["SqueezeBertModel",ee]],["wav2vec2",["Wav2Vec2Model",lm]],["wav2vec2-bert",["Wav2Vec2BertModel",xm]],["unispeech",["UniSpeechModel",_m]],["unispeech-sat",["UniSpeechSatModel",ym]],["hubert",["HubertModel",Pm]],["wavlm",["WavLMModel",$m]],["audio-spectrogram-transformer",["ASTModel",Ei]],["vits",["VitsModel",tc]],["pyannote",["PyAnnoteModel",pm]],["wespeaker-resnet",["WeSpeakerResNetModel",fm]],["detr",["DetrModel",Kp]],["rt_detr",["RTDetrModel",Qp]],["rt_detr_v2",["RTDetrV2Model",Yp]],["rf_detr",["RFDetrModel",eh]],["d_fine",["DFineModel",sh]],["table-transformer",["TableTransformerModel",ih]],["vit",["ViTModel",wp]],["ijepa",["IJepaModel",bp]],["pvt",["PvtModel",Tp]],["vit_msn",["ViTMSNModel",Sp]],["vit_mae",["ViTMAEModel",Cp]],["groupvit",["GroupViTModel",Ip]],["fastvit",["FastViTModel",Ap]],["mobilevit",["MobileViTModel",Lp]],["mobilevitv2",["MobileViTV2Model",Bp]],["owlvit",["OwlViTModel",Np]],["owlv2",["Owlv2Model",Vp]],["beit",["BeitModel",Wp]],["deit",["DeiTModel",lh]],["hiera",["HieraModel",uh]],["convnext",["ConvNextModel",Bh]],["convnextv2",["ConvNextV2Model",Nh]],["dinov2",["Dinov2Model",Vh]],["dinov2_with_registers",["Dinov2WithRegistersModel",Wh]],["dinov3_vit",["DINOv3ViTModel",qh]],["dinov3_convnext",["DINOv3ConvNextModel",Qh]],["resnet",["ResNetModel",ph]],["swin",["SwinModel",mh]],["swin2sr",["Swin2SRModel",gh]],["donut-swin",["DonutSwinModel",zh]],["yolos",["YolosModel",Jh]],["dpt",["DPTModel",yh]],["glpn",["GLPNModel",Dh]],["hifigan",["SpeechT5HifiGan",Bm]],["efficientnet",["EfficientNetModel",sf]],["decision_transformer",["DecisionTransformerModel",yf]],["patchtst",["PatchTSTForPrediction",Ef]],["patchtsmixer",["PatchTSMixerForPrediction",Cf]],["mobilenet_v1",["MobileNetV1Model",of]],["mobilenet_v2",["MobileNetV2Model",cf]],["mobilenet_v3",["MobileNetV3Model",pf]],["mobilenet_v4",["MobileNetV4Model",ff]],["maskformer",["MaskFormerModel",Ah]],["mgp-str",["MgpstrForSceneTextRecognition",Tf]],["style_text_to_speech_2",["StyleTextToSpeech2Model",Om]]]),Lx=new Map([["t5",["T5Model",rr]],["longt5",["LongT5Model",sr]],["mt5",["MT5Model",is]],["bart",["BartModel",er]],["mbart",["MBartModel",fs]],["marian",["MarianModel",nm]],["whisper",["WhisperModel",Ci]],["m2m_100",["M2M100Model",om]],["blenderbot",["BlenderbotModel",mr]],["blenderbot-small",["BlenderbotSmallModel",en]]]),zx=new Map([["mimi",["MimiModel",Ff]],["dac",["DacModel",Bf]],["snac",["SnacModel",jf]]]),Bx=new Map([["bloom",["BloomModel",pp]],["jais",["JAISModel",ji]],["gpt2",["GPT2Model",ti]],["gptj",["GPTJModel",h]],["gpt_bigcode",["GPTBigCodeModel",L]],["gpt_neo",["GPTNeoModel",si]],["gpt_neox",["GPTNeoXModel",Ui]],["codegen",["CodeGenModel",Te]],["llama",["LlamaModel",it]],["arcee",["ArceeModel",Nt]],["lfm2",["Lfm2Model",qo]],["smollm3",["SmolLM3Model",kd]],["exaone",["ExaoneModel",Ld]],["olmo",["OlmoModel",Nd]],["olmo2",["Olmo2Model",Vd]],["mobilellm",["MobileLLMModel",Bd]],["granite",["GraniteModel",Wd]],["cohere",["CohereModel",Kd]],["gemma",["GemmaModel",Hd]],["gemma2",["Gemma2Model",Xd]],["gemma3_text",["Gemma3Model",Jd]],["helium",["HeliumModel",Ad]],["glm",["GlmModel",Dd]],["openelm",["OpenELMModel",ep]],["qwen2",["Qwen2Model",rp]],["qwen3",["Qwen3Model",np]],["phi",["PhiModel",lp]],["phi3",["Phi3Model",up]],["mpt",["MptModel",mp]],["opt",["OPTModel",_p]],["mistral",["MistralModel",jm]],["ernie4_5",["Ernie4_5_Model",Um]],["starcoder2",["Starcoder2Model",Gm]],["falcon",["FalconModel",qm]],["stablelm",["StableLmModel",tf]],["modernbert-decoder",["ModernBertDecoderModel",Mr]]]),cc=new Map([["speecht5",["SpeechT5ForSpeechToText",Lm]],["whisper",["WhisperForConditionalGeneration",Si]],["lite-whisper",["LiteWhisperForConditionalGeneration",Oo]],["moonshine",["MoonshineForConditionalGeneration",Ii]]]),Wf=new Map([["speecht5",["SpeechT5ForTextToSpeech",zm]]]),Gf=new Map([["vits",["VitsModel",tc]],["musicgen",["MusicgenForConditionalGeneration",ic]]]),Kf=new Map([["bert",["BertForSequenceClassification",we]],["neobert",["NeoBertForSequenceClassification",je]],["modernbert",["ModernBertForSequenceClassification",Ct]],["roformer",["RoFormerForSequenceClassification",Zs]],["electra",["ElectraForSequenceClassification",ne]],["esm",["EsmForSequenceClassification",Le]],["convbert",["ConvBertForSequenceClassification",Et]],["camembert",["CamembertForSequenceClassification",St]],["deberta",["DebertaForSequenceClassification",Xt]],["deberta-v2",["DebertaV2ForSequenceClassification",Lr]],["mpnet",["MPNetForSequenceClassification",Gn]],["albert",["AlbertForSequenceClassification",Ye]],["distilbert",["DistilBertForSequenceClassification",pr]],["roberta",["RobertaForSequenceClassification",Eo]],["xlm",["XLMForSequenceClassification",ko]],["xlm-roberta",["XLMRobertaForSequenceClassification",Ti]],["bart",["BartForSequenceClassification",Br]],["mbart",["MBartForSequenceClassification",os]],["mobilebert",["MobileBertForSequenceClassification",Ds]],["squeezebert",["SqueezeBertForSequenceClassification",me]]]),qf=new Map([["bert",["BertForTokenClassification",Ae]],["neobert",["NeoBertForTokenClassification",Ne]],["modernbert",["ModernBertForTokenClassification",At]],["roformer",["RoFormerForTokenClassification",js]],["electra",["ElectraForTokenClassification",he]],["esm",["EsmForTokenClassification",Re]],["convbert",["ConvBertForTokenClassification",Is]],["camembert",["CamembertForTokenClassification",kt]],["deberta",["DebertaForTokenClassification",gr]],["deberta-v2",["DebertaV2ForTokenClassification",As]],["mpnet",["MPNetForTokenClassification",le]],["distilbert",["DistilBertForTokenClassification",vr]],["roberta",["RobertaForTokenClassification",Po]],["xlm",["XLMForTokenClassification",Io]],["xlm-roberta",["XLMRobertaForTokenClassification",Fo]]]),uc=new Map([["t5",["T5ForConditionalGeneration",xr]],["longt5",["LongT5ForConditionalGeneration",Gt]],["mt5",["MT5ForConditionalGeneration",Ar]],["bart",["BartForConditionalGeneration",hr]],["mbart",["MBartForConditionalGeneration",wr]],["marian",["MarianMTModel",im]],["m2m_100",["M2M100ForConditionalGeneration",am]],["blenderbot",["BlenderbotForConditionalGeneration",lr]],["blenderbot-small",["BlenderbotSmallForConditionalGeneration",Kn]]]),dc=new Map([["bloom",["BloomForCausalLM",hp]],["gpt2",["GPT2LMHeadModel",Ni]],["jais",["JAISLMHeadModel",xn]],["gptj",["GPTJForCausalLM",P]],["gpt_bigcode",["GPTBigCodeForCausalLM",V]],["gpt_neo",["GPTNeoForCausalLM",Vi]],["gpt_neox",["GPTNeoXForCausalLM",Wi]],["codegen",["CodeGenForCausalLM",Oe]],["llama",["LlamaForCausalLM",yt]],["arcee",["ArceeForCausalLM",Er]],["lfm2",["Lfm2ForCausalLM",$d]],["smollm3",["SmolLM3ForCausalLM",Id]],["exaone",["ExaoneForCausalLM",zd]],["olmo",["OlmoForCausalLM",jd]],["olmo2",["Olmo2ForCausalLM",Ud]],["mobilellm",["MobileLLMForCausalLM",Rd]],["granite",["GraniteForCausalLM",Gd]],["cohere",["CohereForCausalLM",qd]],["gemma",["GemmaForCausalLM",Qd]],["gemma2",["Gemma2ForCausalLM",Yd]],["gemma3_text",["Gemma3ForCausalLM",Zd]],["helium",["HeliumForCausalLM",Fd]],["glm",["GlmForCausalLM",Od]],["openelm",["OpenELMForCausalLM",tp]],["qwen2",["Qwen2ForCausalLM",sp]],["qwen3",["Qwen3ForCausalLM",ip]],["phi",["PhiForCausalLM",cp]],["phi3",["Phi3ForCausalLM",dp]],["mpt",["MptForCausalLM",fp]],["opt",["OPTForCausalLM",gp]],["mbart",["MBartForCausalLM",Tr]],["mistral",["MistralForCausalLM",Vm]],["ernie4_5",["Ernie4_5_ForCausalLM",Wm]],["starcoder2",["Starcoder2ForCausalLM",Km]],["falcon",["FalconForCausalLM",Hm]],["trocr",["TrOCRForCausalLM",Nm]],["stablelm",["StableLmForCausalLM",rf]],["modernbert-decoder",["ModernBertDecoderForCausalLM",Gr]],["phi3_v",["Phi3VForCausalLM",Jn]]]),Rx=new Map([["multi_modality",["MultiModalityCausalLM",Mf]]]),Hf=new Map([["bert",["BertForMaskedLM",Ee]],["neobert",["NeoBertForMaskedLM",st]],["modernbert",["ModernBertForMaskedLM",Ze]],["roformer",["RoFormerForMaskedLM",Js]],["electra",["ElectraForMaskedLM",Y]],["esm",["EsmForMaskedLM",zr]],["convbert",["ConvBertForMaskedLM",Wt]],["camembert",["CamembertForMaskedLM",Ge]],["deberta",["DebertaForMaskedLM",Kr]],["deberta-v2",["DebertaV2ForMaskedLM",ps]],["mpnet",["MPNetForMaskedLM",fn]],["albert",["AlbertForMaskedLM",$t]],["distilbert",["DistilBertForMaskedLM",Fs]],["roberta",["RobertaForMaskedLM",To]],["xlm",["XLMWithLMHeadModel",$o]],["xlm-roberta",["XLMRobertaForMaskedLM",xi]],["mobilebert",["MobileBertForMaskedLM",Ws]],["squeezebert",["SqueezeBertForMaskedLM",se]]]),Qf=new Map([["bert",["BertForQuestionAnswering",De]],["neobert",["NeoBertForQuestionAnswering",et]],["roformer",["RoFormerForQuestionAnswering",Vs]],["electra",["ElectraForQuestionAnswering",Se]],["convbert",["ConvBertForQuestionAnswering",C]],["camembert",["CamembertForQuestionAnswering",_r]],["deberta",["DebertaForQuestionAnswering",ss]],["deberta-v2",["DebertaV2ForQuestionAnswering",hs]],["mpnet",["MPNetForQuestionAnswering",k]],["albert",["AlbertForQuestionAnswering",Ue]],["distilbert",["DistilBertForQuestionAnswering",ns]],["roberta",["RobertaForQuestionAnswering",Co]],["xlm",["XLMForQuestionAnswering",Ao]],["xlm-roberta",["XLMRobertaForQuestionAnswering",Do]],["mobilebert",["MobileBertForQuestionAnswering",Gs]],["squeezebert",["SqueezeBertForQuestionAnswering",Ce]]]),pc=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ai]],["idefics3",["Idefics3ForConditionalGeneration",Xn]],["smolvlm",["SmolVLMForConditionalGeneration",gn]]]),Xf=new Map([["llava",["LlavaForConditionalGeneration",Hn]],["llava_onevision",["LlavaOnevisionForConditionalGeneration",Lo]],["moondream1",["Moondream1ForConditionalGeneration",zo]],["florence2",["Florence2ForConditionalGeneration",Ro]],["qwen2-vl",["Qwen2VLForConditionalGeneration",ap]],["idefics3",["Idefics3ForConditionalGeneration",Xn]],["smolvlm",["SmolVLMForConditionalGeneration",gn]],["paligemma",["PaliGemmaForConditionalGeneration",jo]],["llava_qwen2",["LlavaQwen2ForCausalLM",_n]],["gemma3n",["Gemma3nForConditionalGeneration",Qn]]]),Yf=new Map([["ultravox",["UltravoxModel",lc]],["voxtral",["VoxtralForConditionalGeneration",kf]]]),Nx=new Map([["vision-encoder-decoder",["VisionEncoderDecoderModel",Ai]]]),Jf=new Map([["vit",["ViTForImageClassification",yp]],["ijepa",["IJepaForImageClassification",Mp]],["pvt",["PvtForImageClassification",Ep]],["vit_msn",["ViTMSNForImageClassification",$p]],["fastvit",["FastViTForImageClassification",Fp]],["mobilevit",["MobileViTForImageClassification",zp]],["mobilevitv2",["MobileViTV2ForImageClassification",Rp]],["beit",["BeitForImageClassification",Gp]],["deit",["DeiTForImageClassification",ch]],["hiera",["HieraForImageClassification",dh]],["convnext",["ConvNextForImageClassification",Rh]],["convnextv2",["ConvNextV2ForImageClassification",jh]],["dinov2",["Dinov2ForImageClassification",Uh]],["dinov2_with_registers",["Dinov2WithRegistersForImageClassification",Gh]],["resnet",["ResNetForImageClassification",hh]],["swin",["SwinForImageClassification",fh]],["segformer",["SegformerForImageClassification",Zm]],["efficientnet",["EfficientNetForImageClassification",nf]],["mobilenet_v1",["MobileNetV1ForImageClassification",af]],["mobilenet_v2",["MobileNetV2ForImageClassification",uf]],["mobilenet_v3",["MobileNetV3ForImageClassification",hf]],["mobilenet_v4",["MobileNetV4ForImageClassification",_f]]]),Zf=new Map([["detr",["DetrForObjectDetection",qp]],["rt_detr",["RTDetrForObjectDetection",Xp]],["rt_detr_v2",["RTDetrV2ForObjectDetection",Jp]],["rf_detr",["RFDetrForObjectDetection",th]],["d_fine",["DFineForObjectDetection",nh]],["table-transformer",["TableTransformerForObjectDetection",oh]],["yolos",["YolosForObjectDetection",Zh]]]),e_=new Map([["owlvit",["OwlViTForObjectDetection",jp]],["owlv2",["Owlv2ForObjectDetection",Up]],["grounding-dino",["GroundingDinoForObjectDetection",Yh]]]),ai=new Map([["detr",["DetrForSegmentation",$l]],["clipseg",["CLIPSegForImageSegmentation",Ri]]]),t_=new Map([["segformer",["SegformerForSemanticSegmentation",ef]],["sapiens",["SapiensForSemanticSegmentation",xh]],["swin",["SwinForSemanticSegmentation",_h]],["mobilenet_v1",["MobileNetV1ForSemanticSegmentation",lf]],["mobilenet_v2",["MobileNetV2ForSemanticSegmentation",df]],["mobilenet_v3",["MobileNetV3ForSemanticSegmentation",mf]],["mobilenet_v4",["MobileNetV4ForSemanticSegmentation",gf]]]),r_=new Map([["detr",["DetrForSegmentation",$l]],["maskformer",["MaskFormerForInstanceSegmentation",Fh]]]),s_=new Map([["sam",["SamModel",rm]]]),n_=new Map([["wav2vec2",["Wav2Vec2ForCTC",cm]],["wav2vec2-bert",["Wav2Vec2BertForCTC",Tm]],["unispeech",["UniSpeechForCTC",gm]],["unispeech-sat",["UniSpeechSatForCTC",bm]],["wavlm",["WavLMForCTC",km]],["hubert",["HubertForCTC",Cm]]]),i_=new Map([["wav2vec2",["Wav2Vec2ForSequenceClassification",um]],["wav2vec2-bert",["Wav2Vec2BertForSequenceClassification",Em]],["unispeech",["UniSpeechForSequenceClassification",wm]],["unispeech-sat",["UniSpeechSatForSequenceClassification",Mm]],["wavlm",["WavLMForSequenceClassification",Im]],["hubert",["HubertForSequenceClassification",Sm]],["audio-spectrogram-transformer",["ASTForAudioClassification",sn]]]),o_=new Map([["wavlm",["WavLMForXVector",Am]]]),a_=new Map([["unispeech-sat",["UniSpeechSatForAudioFrameClassification",vm]],["wavlm",["WavLMForAudioFrameClassification",Fm]],["wav2vec2",["Wav2Vec2ForAudioFrameClassification",dm]],["pyannote",["PyAnnoteForAudioFrameClassification",hm]]]),l_=new Map([["vitmatte",["VitMatteForImageMatting",Op]]]),jx=new Map([["patchtst",["PatchTSTForPrediction",Pf]],["patchtsmixer",["PatchTSMixerForPrediction",Sf]]]),c_=new Map([["swin2sr",["Swin2SRForImageSuperResolution",wh]]]),u_=new Map([["dpt",["DPTForDepthEstimation",bh]],["depth_anything",["DepthAnythingForDepthEstimation",vh]],["glpn",["GLPNForDepthEstimation",Oh]],["sapiens",["SapiensForDepthEstimation",Th]],["depth_pro",["DepthProForDepthEstimation",Ch]],["metric3d",["Metric3DForDepthEstimation",$h]],["metric3dv2",["Metric3Dv2ForDepthEstimation",Ih]]]),d_=new Map([["sapiens",["SapiensForNormalEstimation",Eh]]]),p_=new Map([["vitpose",["VitPoseForPoseEstimation",xp]]]),h_=new Map([["clip",["CLIPVisionModelWithProjection",Go]],["siglip",["SiglipVisionModel",ut]],["jina_clip",["JinaCLIPVisionModel",Mn]]]),m_=[[Ox,v.EncoderOnly],[Lx,v.EncoderDecoder],[Bx,v.DecoderOnly],[zx,v.AutoEncoder],[Kf,v.EncoderOnly],[qf,v.EncoderOnly],[uc,v.Seq2Seq],[cc,v.Seq2Seq],[dc,v.DecoderOnly],[Rx,v.MultiModality],[Hf,v.EncoderOnly],[Qf,v.EncoderOnly],[pc,v.Vision2Seq],[Xf,v.ImageTextToText],[Yf,v.AudioTextToText],[Jf,v.EncoderOnly],[ai,v.EncoderOnly],[r_,v.EncoderOnly],[t_,v.EncoderOnly],[l_,v.EncoderOnly],[jx,v.EncoderOnly],[c_,v.EncoderOnly],[u_,v.EncoderOnly],[d_,v.EncoderOnly],[p_,v.EncoderOnly],[Zf,v.EncoderOnly],[e_,v.EncoderOnly],[s_,v.MaskGeneration],[n_,v.EncoderOnly],[i_,v.EncoderOnly],[Wf,v.Seq2Seq],[Gf,v.EncoderOnly],[o_,v.EncoderOnly],[a_,v.EncoderOnly],[h_,v.EncoderOnly]];for(const[g,b]of m_)for(const[R,ie]of g.values())T.set(R,b),x.set(ie,R),E.set(R,ie);const Vx=[["MusicgenForConditionalGeneration",ic,v.Musicgen],["Phi3VForCausalLM",Jn,v.Phi3V],["CLIPTextModelWithProjection",Oi,v.EncoderOnly],["SiglipTextModel",wn,v.EncoderOnly],["JinaCLIPTextModel",Yr,v.EncoderOnly],["ClapTextModelWithProjection",Xm,v.EncoderOnly],["ClapAudioModelWithProjection",Ym,v.EncoderOnly],["DacEncoderModel",Rf,v.EncoderOnly],["DacDecoderModel",Nf,v.EncoderOnly],["MimiEncoderModel",Df,v.EncoderOnly],["MimiDecoderModel",Of,v.EncoderOnly],["SnacEncoderModel",Vf,v.EncoderOnly],["SnacDecoderModel",Uf,v.EncoderOnly],["Gemma3nForConditionalGeneration",Qn,v.ImageAudioTextToText]];for(const[g,b,R]of Vx)T.set(g,R),x.set(b,g),E.set(g,b);const f_=new Map([["modnet",ai],["birefnet",ai],["isnet",ai],["ben",ai]]);for(const[g,b]of f_.entries())b.set(g,["PreTrainedModel",W]),T.set(g,v.EncoderOnly),x.set(W,g),E.set(g,W);class Ux extends jt{static MODEL_CLASS_MAPPINGS=m_.map(b=>b[0]);static BASE_IF_FAIL=!0}class Wx extends jt{static MODEL_CLASS_MAPPINGS=[Kf]}class Gx extends jt{static MODEL_CLASS_MAPPINGS=[qf]}class Kx extends jt{static MODEL_CLASS_MAPPINGS=[uc]}class qx extends jt{static MODEL_CLASS_MAPPINGS=[cc]}class Hx extends jt{static MODEL_CLASS_MAPPINGS=[Wf]}class Qx extends jt{static MODEL_CLASS_MAPPINGS=[Gf]}class Xx extends jt{static MODEL_CLASS_MAPPINGS=[dc]}class Yx extends jt{static MODEL_CLASS_MAPPINGS=[Hf]}class Jx extends jt{static MODEL_CLASS_MAPPINGS=[Qf]}class Zx extends jt{static MODEL_CLASS_MAPPINGS=[pc]}class eT extends jt{static MODEL_CLASS_MAPPINGS=[Jf]}class tT extends jt{static MODEL_CLASS_MAPPINGS=[ai]}class rT extends jt{static MODEL_CLASS_MAPPINGS=[t_]}class sT extends jt{static MODEL_CLASS_MAPPINGS=[r_]}class nT extends jt{static MODEL_CLASS_MAPPINGS=[Zf]}class iT extends jt{static MODEL_CLASS_MAPPINGS=[e_]}class oT extends jt{static MODEL_CLASS_MAPPINGS=[s_]}class aT extends jt{static MODEL_CLASS_MAPPINGS=[n_]}class lT extends jt{static MODEL_CLASS_MAPPINGS=[i_]}class cT extends jt{static MODEL_CLASS_MAPPINGS=[o_]}class uT extends jt{static MODEL_CLASS_MAPPINGS=[a_]}class dT extends jt{static MODEL_CLASS_MAPPINGS=[Nx]}class pT extends jt{static MODEL_CLASS_MAPPINGS=[l_]}class hT extends jt{static MODEL_CLASS_MAPPINGS=[c_]}class mT extends jt{static MODEL_CLASS_MAPPINGS=[u_]}class fT extends jt{static MODEL_CLASS_MAPPINGS=[d_]}class _T extends jt{static MODEL_CLASS_MAPPINGS=[p_]}class gT extends jt{static MODEL_CLASS_MAPPINGS=[h_]}class wT extends jt{static MODEL_CLASS_MAPPINGS=[Xf]}class yT extends jt{static MODEL_CLASS_MAPPINGS=[Yf]}class bT extends _e{constructor({logits:b,past_key_values:R,encoder_outputs:ie,decoder_attentions:pe=null,cross_attentions:fe=null}){super(),this.logits=b,this.past_key_values=R,this.encoder_outputs=ie,this.decoder_attentions=pe,this.cross_attentions=fe}}class bt extends _e{constructor({logits:b,...R}){super(),this.logits=b;const ie=Object.values(R);ie.length>0&&(this.attentions=ie)}}class __ extends _e{constructor({logits:b,embeddings:R}){super(),this.logits=b,this.embeddings=R}}class Pr extends _e{constructor({logits:b}){super(),this.logits=b}}class Sr extends _e{constructor({logits:b}){super(),this.logits=b}}class Dr extends _e{constructor({start_logits:b,end_logits:R}){super(),this.start_logits=b,this.end_logits=R}}class En extends _e{constructor({logits:b}){super(),this.logits=b}}class MT extends _e{constructor({logits:b,past_key_values:R}){super(),this.logits=b,this.past_key_values=R}}class g_ extends _e{constructor({alphas:b}){super(),this.alphas=b}}class w_ extends _e{constructor({waveform:b,spectrogram:R}){super(),this.waveform=b,this.spectrogram=R}}}),"./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js":((e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,n.window_function)(400,"hann",{periodic:!1}),this.mean=this.config.mean,this.std=this.config.std}async _extract_fbank_features(a,l){return(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:l,transpose:!0})}async _call(a){(0,s.validate_audio_inputs)(a,"ASTFeatureExtractor");const l=await this._extract_fbank_features(a,this.config.max_length);if(this.config.do_normalize){const c=this.std*2,p=l.data;for(let d=0;d<p.length;++d)p[d]=(p[d]-this.mean)/c}return{input_values:l.unsqueeze_(0)}}}}),"./src/models/auto/feature_extraction_auto.js":((e,r,t)=>{t.r(r),t.d(r,{AutoFeatureExtractor:()=>o});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js");t("./src/base/feature_extraction_utils.js");var i=t("./src/models/feature_extractors.js");class o{static async from_pretrained(l,c={}){const p=await(0,n.getModelJSON)(l,s.FEATURE_EXTRACTOR_NAME,!0,c),d=p.feature_extractor_type,u=i[d];if(!u)throw new Error(`Unknown feature_extractor_type: '${d}'. Please report this at ${s.GITHUB_ISSUE_URL}.`);return new u(p)}}}),"./src/models/auto/image_processing_auto.js":((e,r,t)=>{t.r(r),t.d(r,{AutoImageProcessor:()=>a});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),i=t("./src/base/image_processors_utils.js"),o=t("./src/models/image_processors.js");class a{static async from_pretrained(c,p={}){const d=await(0,n.getModelJSON)(c,s.IMAGE_PROCESSOR_NAME,!0,p),u=d.image_processor_type??d.feature_extractor_type;let _=o[u?.replace(/Fast$/,"")];return _||(u!==void 0&&console.warn(`Image processor type '${u}' not found, assuming base ImageProcessor. Please report this at ${s.GITHUB_ISSUE_URL}.`),_=i.ImageProcessor),new _(d)}}}),"./src/models/auto/processing_auto.js":((e,r,t)=>{t.r(r),t.d(r,{AutoProcessor:()=>c});var s=t("./src/utils/constants.js"),n=t("./src/utils/hub.js"),i=t("./src/base/processing_utils.js"),o=t("./src/models/processors.js"),a=t("./src/models/image_processors.js"),l=t("./src/models/feature_extractors.js");class c{static async from_pretrained(d,u={}){const _=await(0,n.getModelJSON)(d,s.IMAGE_PROCESSOR_NAME,!0,u),{image_processor_type:f,feature_extractor_type:w,processor_class:I}=_;if(I&&o[I])return o[I].from_pretrained(d,u);if(!f&&!w)throw new Error("No `image_processor_type` or `feature_extractor_type` found in the config.");const M={};if(f){const $=a[f.replace(/Fast$/,"")];if(!$)throw new Error(`Unknown image_processor_type: '${f}'.`);M.image_processor=new $(_)}if(w){const $=a[w];if($)M.image_processor=new $(_);else{const v=l[w];if(!v)throw new Error(`Unknown feature_extractor_type: '${w}'.`);M.feature_extractor=new v(_)}}const y={};return new i.Processor(y,M,null)}}}),"./src/models/beit/image_processing_beit.js":((e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/bit/image_processing_bit.js":((e,r,t)=>{t.r(r),t.d(r,{BitImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/chinese_clip/image_processing_chinese_clip.js":((e,r,t)=>{t.r(r),t.d(r,{ChineseCLIPFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/clap/feature_extraction_clap.js":((e,r,t)=>{t.r(r),t.d(r,{ClapFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(a){super(a),this.mel_filters=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,null,"htk"),this.mel_filters_slaney=(0,n.mel_filter_bank)(this.config.nb_frequency_bins,this.config.feature_size,this.config.frequency_min,this.config.frequency_max,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.fft_window_size,"hann")}async _get_input_mel(a,l,c,p){let d;const u=a.length-l;if(u>0)if(c==="rand_trunc"){const _=Math.floor(Math.random()*(u+1));a=a.subarray(_,_+l),d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}else throw new Error(`Truncation strategy "${c}" not implemented`);else{if(u<0){let _=new Float64Array(l);if(_.set(a),p==="repeat")for(let f=a.length;f<l;f+=a.length)_.set(a.subarray(0,Math.min(a.length,l-f)),f);else if(p==="repeatpad")for(let f=a.length;f<-u;f+=a.length)_.set(a,f);a=_}if(c==="fusion")throw new Error(`Truncation strategy "${c}" not implemented`);d=await this._extract_fbank_features(a,this.mel_filters_slaney,this.config.nb_max_samples)}return d.unsqueeze_(0)}async _extract_fbank_features(a,l,c=null){return(0,n.spectrogram)(a,this.window,this.config.fft_window_size,this.config.hop_length,{power:2,mel_filters:l,log_mel:"dB",max_num_frames:c,do_pad:!1,transpose:!0})}async _call(a,{max_length:l=null}={}){return(0,s.validate_audio_inputs)(a,"ClapFeatureExtractor"),{input_features:(await this._get_input_mel(a,l??this.config.nb_max_samples,this.config.truncation,this.config.padding)).unsqueeze_(0)}}}}),"./src/models/clip/image_processing_clip.js":((e,r,t)=>{t.r(r),t.d(r,{CLIPFeatureExtractor:()=>i,CLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/convnext/image_processing_convnext.js":((e,r,t)=>{t.r(r),t.d(r,{ConvNextFeatureExtractor:()=>i,ConvNextImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(a){super(a),this.crop_pct=this.config.crop_pct??224/256}async resize(a){const l=this.size?.shortest_edge;if(l===void 0)throw new Error("Size dictionary must contain 'shortest_edge' key.");if(l<384){const c=Math.floor(l/this.crop_pct),[p,d]=this.get_resize_output_image_size(a,{shortest_edge:c});a=await a.resize(p,d,{resample:this.resample}),a=await a.center_crop(l,l)}else a=await a.resize(l,l,{resample:this.resample});return a}}class i extends n{}}),"./src/models/dac/feature_extraction_dac.js":((e,r,t)=>{t.r(r),t.d(r,{DacFeatureExtractor:()=>n});var s=t("./src/models/encodec/feature_extraction_encodec.js");class n extends s.EncodecFeatureExtractor{}}),"./src/models/deit/image_processing_deit.js":((e,r,t)=>{t.r(r),t.d(r,{DeiTFeatureExtractor:()=>i,DeiTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/detr/image_processing_detr.js":((e,r,t)=>{t.r(r),t.d(r,{DetrFeatureExtractor:()=>o,DetrImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(l){const c=await super._call(l),p=[c.pixel_values.dims[0],64,64],d=(0,n.full)(p,1n);return{...c,pixel_mask:d}}post_process_object_detection(...l){return(0,s.post_process_object_detection)(...l)}post_process_panoptic_segmentation(...l){return(0,s.post_process_panoptic_segmentation)(...l)}post_process_instance_segmentation(...l){return(0,s.post_process_instance_segmentation)(...l)}}class o extends i{}}),"./src/models/dinov3_vit/image_processing_dinov3_vit.js":((e,r,t)=>{t.r(r),t.d(r,{DINOv3ViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/donut/image_processing_donut.js":((e,r,t)=>{t.r(r),t.d(r,{DonutFeatureExtractor:()=>i,DonutImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(a,l,c,p={}){const[d,u,_]=l;let f=this.image_mean;Array.isArray(this.image_mean)||(f=new Array(_).fill(f));let w=this.image_std;Array.isArray(w)||(w=new Array(_).fill(f));const I=f.map((M,y)=>-M/w[y]);return super.pad_image(a,l,c,{center:!0,constant_values:I,...p})}}class i extends n{}}),"./src/models/dpt/image_processing_dpt.js":((e,r,t)=>{t.r(r),t.d(r,{DPTFeatureExtractor:()=>i,DPTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/efficientnet/image_processing_efficientnet.js":((e,r,t)=>{t.r(r),t.d(r,{EfficientNetImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(o){super(o),this.include_top=this.config.include_top??!0,this.include_top&&(this.image_std=this.image_std.map(a=>a*a))}}}),"./src/models/encodec/feature_extraction_encodec.js":((e,r,t)=>{t.r(r),t.d(r,{EncodecFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"EncodecFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=this.config.feature_size;if(a.length%l!==0)throw new Error(`The length of the audio data must be a multiple of the number of channels (${l}).`);const c=[1,l,a.length/l];return{input_values:new n.Tensor("float32",a,c)}}}}),"./src/models/feature_extractors.js":((e,r,t)=>{t.r(r),t.d(r,{ASTFeatureExtractor:()=>s.ASTFeatureExtractor,ClapFeatureExtractor:()=>i.ClapFeatureExtractor,DacFeatureExtractor:()=>o.DacFeatureExtractor,EncodecFeatureExtractor:()=>n.EncodecFeatureExtractor,Gemma3nAudioFeatureExtractor:()=>a.Gemma3nAudioFeatureExtractor,ImageFeatureExtractor:()=>I.ImageProcessor,MoonshineFeatureExtractor:()=>l.MoonshineFeatureExtractor,PyAnnoteFeatureExtractor:()=>c.PyAnnoteFeatureExtractor,SeamlessM4TFeatureExtractor:()=>p.SeamlessM4TFeatureExtractor,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SpeechT5FeatureExtractor:()=>u.SpeechT5FeatureExtractor,Wav2Vec2FeatureExtractor:()=>_.Wav2Vec2FeatureExtractor,WeSpeakerFeatureExtractor:()=>f.WeSpeakerFeatureExtractor,WhisperFeatureExtractor:()=>w.WhisperFeatureExtractor});var s=t("./src/models/audio_spectrogram_transformer/feature_extraction_audio_spectrogram_transformer.js"),n=t("./src/models/encodec/feature_extraction_encodec.js"),i=t("./src/models/clap/feature_extraction_clap.js"),o=t("./src/models/dac/feature_extraction_dac.js"),a=t("./src/models/gemma3n/feature_extraction_gemma3n.js"),l=t("./src/models/moonshine/feature_extraction_moonshine.js"),c=t("./src/models/pyannote/feature_extraction_pyannote.js"),p=t("./src/models/seamless_m4t/feature_extraction_seamless_m4t.js"),d=t("./src/models/snac/feature_extraction_snac.js"),u=t("./src/models/speecht5/feature_extraction_speecht5.js"),_=t("./src/models/wav2vec2/feature_extraction_wav2vec2.js"),f=t("./src/models/wespeaker/feature_extraction_wespeaker.js"),w=t("./src/models/whisper/feature_extraction_whisper.js"),I=t("./src/base/image_processors_utils.js")}),"./src/models/florence2/processing_florence2.js":((e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;constructor(l,c,p){super(l,c,p);const{tasks_answer_post_processing_type:d,task_prompts_without_inputs:u,task_prompts_with_input:_}=this.image_processor.config;this.tasks_answer_post_processing_type=new Map(Object.entries(d??{})),this.task_prompts_without_inputs=new Map(Object.entries(u??{})),this.task_prompts_with_input=new Map(Object.entries(_??{})),this.regexes={quad_boxes:/(.+?)<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm,bboxes:/([^<]+)?<loc_(\d+)><loc_(\d+)><loc_(\d+)><loc_(\d+)>/gm},this.size_per_bin=1e3}construct_prompts(l){typeof l=="string"&&(l=[l]);const c=[];for(const p of l)if(this.task_prompts_without_inputs.has(p))c.push(this.task_prompts_without_inputs.get(p));else{for(const[d,u]of this.task_prompts_with_input)if(p.includes(d)){c.push(u.replaceAll("{input}",p).replaceAll(d,""));break}c.length!==l.length&&c.push(p)}return c}post_process_generation(l,c,p){const d=this.tasks_answer_post_processing_type.get(c)??"pure_text";l=l.replaceAll("<s>","").replaceAll("</s>","");let u;switch(d){case"pure_text":u=l;break;case"description_with_bboxes":case"bboxes":case"phrase_grounding":case"ocr":const _=d==="ocr"?"quad_boxes":"bboxes",f=l.matchAll(this.regexes[_]),w=[],I=[];for(const[M,y,...$]of f)w.push(y?y.trim():w.at(-1)??""),I.push($.map((v,T)=>(Number(v)+.5)/this.size_per_bin*p[T%2]));u={labels:w,[_]:I};break;default:throw new Error(`Task "${c}" (of type "${d}") not yet implemented.`)}return{[c]:u}}async _call(l,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=await this.image_processor(l,p),u=c?this.tokenizer(this.construct_prompts(c),p):{};return{...d,...u}}}}),"./src/models/gemma3n/feature_extraction_gemma3n.js":((e,r,t)=>{t.r(r),t.d(r,{Gemma3nAudioFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const{fft_length:c,feature_size:p,min_frequency:d,max_frequency:u,sampling_rate:_,frame_length:f}=this.config,w=(0,i.mel_filter_bank)(Math.floor(1+c/2),p,d,u,_,null,"htk",!1);this.mel_filters=w,this.window=(0,i.window_function)(f,"hann")}async _extract_fbank_features(l,c){return(0,i.spectrogram)(l,this.window,this.config.frame_length,this.config.hop_length,{fft_length:this.config.fft_length,center:!1,onesided:!0,preemphasis:this.config.preemphasis,preemphasis_htk_flavor:this.config.preemphasis_htk_flavor,mel_filters:this.mel_filters,log_mel:"log",mel_floor:this.config.mel_floor,remove_dc_offset:!1,transpose:!0})}async _call(l,{max_length:c=48e4,truncation:p=!0,padding:d=!0,pad_to_multiple_of:u=128}={}){if((0,s.validate_audio_inputs)(l,"Gemma3nAudioFeatureExtractor"),p&&l.length>c&&(l=l.slice(0,c)),d&&l.length%u!==0){const w=u-l.length%u,I=new Float64Array(l.length+w);I.set(l),this.config.padding_value!==0&&I.fill(this.config.padding_value,l.length),l=I}const _=await this._extract_fbank_features(l,this.config.max_length),f=(0,n.full)([1,_.dims[0]],!0);return{input_features:_.unsqueeze_(0),input_features_mask:f}}}}),"./src/models/gemma3n/processing_gemma3n.js":((e,r,t)=>{t.r(r),t.d(r,{Gemma3nProcessor:()=>a});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/models/auto/feature_extraction_auto.js"),o=t("./src/tokenizers.js");t("./src/utils/image.js"),t("./src/utils/audio.js");class a extends s.Processor{static image_processor_class=n.AutoImageProcessor;static feature_extractor_class=i.AutoFeatureExtractor;static tokenizer_class=o.AutoTokenizer;static uses_processor_config=!0;static uses_chat_template_file=!0;constructor(c,p,d){super(c,p,d),this.audio_seq_length=this.config.audio_seq_length,this.image_seq_length=this.config.image_seq_length;const{audio_token_id:u,boa_token:_,audio_token:f,eoa_token:w,image_token_id:I,boi_token:M,image_token:y,eoi_token:$}=this.tokenizer.config;this.audio_token_id=u,this.boa_token=_,this.audio_token=f;const v=f.repeat(this.audio_seq_length);this.full_audio_sequence=`

${_}${v}${w}

`,this.image_token_id=I,this.boi_token=M,this.image_token=y;const T=y.repeat(this.image_seq_length);this.full_image_sequence=`

${M}${T}${$}

`}async _call(c,p=null,d=null,u={}){typeof c=="string"&&(c=[c]);let _;d&&(_=await this.feature_extractor(d,u),c=c.map(I=>I.replaceAll(this.audio_token,this.full_audio_sequence)));let f;return p&&(f=await this.image_processor(p,u),c=c.map(I=>I.replaceAll(this.image_token,this.full_image_sequence))),{...this.tokenizer(c,u),...f,..._}}}}),"./src/models/glpn/image_processing_glpn.js":((e,r,t)=>{t.r(r),t.d(r,{GLPNFeatureExtractor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/grounding_dino/image_processing_grounding_dino.js":((e,r,t)=>{t.r(r),t.d(r,{GroundingDinoImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(a){const l=await super._call(a),c=l.pixel_values.dims,p=(0,n.ones)([c[0],c[2],c[3]]);return{...l,pixel_mask:p}}}}),"./src/models/grounding_dino/processing_grounding_dino.js":((e,r,t)=>{t.r(r),t.d(r,{GroundingDinoProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),o=t("./src/base/image_processors_utils.js");function a(c,p){const u=c.dims.at(-1)-1,_=c.tolist();_.fill(!1,0,1),_.fill(!1,u);const f=p.tolist();return _.map((w,I)=>w?I:null).filter(w=>w!==null).map(w=>f[w])}class l extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;async _call(p,d,u={}){const _=p?await this.image_processor(p,u):{};return{...d?this.tokenizer(d,u):{},..._}}post_process_grounded_object_detection(p,d,{box_threshold:u=.25,text_threshold:_=.25,target_sizes:f=null}={}){const{logits:w,pred_boxes:I}=p,M=w.dims[0];if(f!==null&&f.length!==M)throw Error("Make sure that you pass in as many target sizes as the batch dimension of the logits");const y=w.dims.at(1),$=w.sigmoid(),v=$.max(-1).tolist(),T=I.tolist().map(x=>x.map(S=>(0,o.center_to_corners_format)(S))),E=[];for(let x=0;x<M;++x){const S=f!==null?f[x]:null;S!==null&&(T[x]=T[x].map(O=>O.map((Z,Q)=>Z*S[(Q+1)%2])));const z=v[x],D=[],K=[],q=[];for(let O=0;O<y;++O){const Z=z[O];if(Z<=u)continue;const Q=T[x][O],J=$[x][O];D.push(Z),q.push(Q);const re=a(J.gt(_),d[x]);K.push(re)}E.push({scores:D,boxes:q,labels:this.batch_decode(K)})}return E}}}),"./src/models/idefics3/image_processing_idefics3.js":((e,r,t)=>{t.r(r),t.d(r,{Idefics3ImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{constructor(a){super(a),this.do_image_splitting=a.do_image_splitting??!0,this.max_image_size=a.max_image_size}get_resize_for_vision_encoder(a,l){let[c,p]=a.dims.slice(-2);const d=p/c;return p>=c?(p=Math.ceil(p/l)*l,c=Math.floor(p/d),c=Math.ceil(c/l)*l):(c=Math.ceil(c/l)*l,p=Math.floor(c*d),p=Math.ceil(p/l)*l),{height:c,width:p}}async _call(a,{do_image_splitting:l=null,return_row_col_info:c=!1}={}){let p;if(!Array.isArray(a))p=[[a]];else{if(a.length===0||!a[0])throw new Error("No images provided.");Array.isArray(a[0])?p=a:p=[a]}let d=[],u=[],_=[];const f=[],w=[];for(const x of p){let S=await Promise.all(x.map(K=>this.preprocess(K)));f.push(...S.map(K=>K.original_size)),w.push(...S.map(K=>K.reshaped_input_size)),S.forEach(K=>K.pixel_values.unsqueeze_(0));const{longest_edge:z}=this.max_image_size;let D;if(l??this.do_image_splitting){let K=new Array(S.length),q=new Array(S.length);D=await Promise.all(S.map(async(O,Z)=>{const Q=this.get_resize_for_vision_encoder(O.pixel_values,z),J=await(0,n.interpolate_4d)(O.pixel_values,{size:[Q.height,Q.width]}),{frames:re,num_splits_h:te,num_splits_w:ce}=await this.split_image(J,this.max_image_size);return K[Z]=te,q[Z]=ce,(0,n.cat)(re,0)})),u.push(K),_.push(q)}else{const K=[z,z];D=await Promise.all(S.map(q=>(0,n.interpolate_4d)(q.pixel_values,{size:K}))),u.push(new Array(S.length).fill(0)),_.push(new Array(S.length).fill(0))}d.push((0,n.cat)(D,0))}const I=d.length,[M,y,$,v]=d[0].dims;let T,E;if(I===1)T=d[0].unsqueeze_(0),E=(0,n.full)([I,M,$,v],!0);else{const x=Math.max(...d.map(D=>D.dims.at(0)));E=(0,n.full)([I,x,$,v],!0);const S=E.data,z=x*$*v;for(let D=0;D<I;++D){const K=d[D].dims[0];if(K<x){d[D]=(0,n.cat)([d[D],(0,n.full)([x-K,y,$,v],0)],0);const q=D*z+K*$*v,O=(D+1)*z;S.fill(!1,q,O)}}T=(0,n.stack)(d,0)}return{pixel_values:T,pixel_attention_mask:E,original_sizes:f,reshaped_input_sizes:w,...c?{rows:u,cols:_}:{}}}async split_image(a,{longest_edge:l}){const c=l,p=l,d=[],[u,_]=a.dims.slice(-2);let f=0,w=0;if(u>c||_>p){f=Math.ceil(u/c),w=Math.ceil(_/p);const I=Math.ceil(u/f),M=Math.ceil(_/w);for(let v=0;v<f;++v)for(let T=0;T<w;++T){let E,x,S,z;v===f-1?(x=u-I,z=u):(x=v*I,z=(v+1)*I),T===w-1?(E=_-M,S=_):(E=T*M,S=(T+1)*M);const D=[x,E],K=[z,S],q=await(0,n.slice)(a,D,K,[2,3]);d.push(q)}const y=c,$=p;(u!==y||_!==$)&&(a=await(0,n.interpolate_4d)(a,{size:[y,$]}))}return d.push(a),{frames:d,num_splits_h:f,num_splits_w:w}}}}),"./src/models/idefics3/processing_idefics3.js":((e,r,t)=>{t.r(r),t.d(r,{Idefics3Processor:()=>p});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");var o=t("./src/utils/core.js");function a(d,u,_,f,w,I){let M="";for(let y=0;y<u;++y){for(let $=0;$<_;++$)M+=f+`<row_${y+1}_col_${$+1}>`+w.repeat(d);M+=`
`}return M+=`
${f}${I}`+w.repeat(d)+`${f}`,M}function l(d,u,_,f){return`${u}${f}`+_.repeat(d)+`${u}`}function c(d,u,_,f,w,I){return d===0&&u===0?l(_,f,w,I):a(_,d,u,f,w,I)}class p extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;static uses_processor_config=!0;fake_image_token="<fake_token_around_image>";image_token="<image>";global_img_token="<global-img>";async _call(u,_=null,f={}){f.return_row_col_info??=!0;let w;_&&(w=await this.image_processor(_,f)),Array.isArray(u)||(u=[u]);const I=w.rows??[new Array(u.length).fill(0)],M=w.cols??[new Array(u.length).fill(0)],y=this.config.image_seq_len,$=[],v=[];for(let E=0;E<u.length;++E){const x=u[E],S=I[E],z=M[E];$.push((0,o.count)(x,this.image_token));const D=S.map((O,Z)=>c(O,z[Z],y,this.fake_image_token,this.image_token,this.global_img_token)),K=x.split(this.image_token);if(K.length===0)throw new Error("The image token should be present in the text.");let q=K[0];for(let O=0;O<D.length;++O)q+=D[O]+K[O+1];v.push(q)}return{...this.tokenizer(v),...w}}}}),"./src/models/image_processors.js":((e,r,t)=>{t.r(r),t.d(r,{BeitFeatureExtractor:()=>s.BeitFeatureExtractor,BitImageProcessor:()=>n.BitImageProcessor,CLIPFeatureExtractor:()=>o.CLIPFeatureExtractor,CLIPImageProcessor:()=>o.CLIPImageProcessor,ChineseCLIPFeatureExtractor:()=>i.ChineseCLIPFeatureExtractor,ConvNextFeatureExtractor:()=>a.ConvNextFeatureExtractor,ConvNextImageProcessor:()=>a.ConvNextImageProcessor,DINOv3ViTImageProcessor:()=>p.DINOv3ViTImageProcessor,DPTFeatureExtractor:()=>u.DPTFeatureExtractor,DPTImageProcessor:()=>u.DPTImageProcessor,DeiTFeatureExtractor:()=>l.DeiTFeatureExtractor,DeiTImageProcessor:()=>l.DeiTImageProcessor,DetrFeatureExtractor:()=>c.DetrFeatureExtractor,DetrImageProcessor:()=>c.DetrImageProcessor,DonutFeatureExtractor:()=>d.DonutFeatureExtractor,DonutImageProcessor:()=>d.DonutImageProcessor,EfficientNetImageProcessor:()=>_.EfficientNetImageProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GroundingDinoImageProcessor:()=>w.GroundingDinoImageProcessor,Idefics3ImageProcessor:()=>I.Idefics3ImageProcessor,JinaCLIPImageProcessor:()=>y.JinaCLIPImageProcessor,LlavaOnevisionImageProcessor:()=>$.LlavaOnevisionImageProcessor,Mask2FormerImageProcessor:()=>v.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>T.MaskFormerFeatureExtractor,MaskFormerImageProcessor:()=>T.MaskFormerImageProcessor,MobileNetV1FeatureExtractor:()=>E.MobileNetV1FeatureExtractor,MobileNetV1ImageProcessor:()=>E.MobileNetV1ImageProcessor,MobileNetV2FeatureExtractor:()=>x.MobileNetV2FeatureExtractor,MobileNetV2ImageProcessor:()=>x.MobileNetV2ImageProcessor,MobileNetV3FeatureExtractor:()=>S.MobileNetV3FeatureExtractor,MobileNetV3ImageProcessor:()=>S.MobileNetV3ImageProcessor,MobileNetV4FeatureExtractor:()=>z.MobileNetV4FeatureExtractor,MobileNetV4ImageProcessor:()=>z.MobileNetV4ImageProcessor,MobileViTFeatureExtractor:()=>D.MobileViTFeatureExtractor,MobileViTImageProcessor:()=>D.MobileViTImageProcessor,NougatImageProcessor:()=>K.NougatImageProcessor,OwlViTFeatureExtractor:()=>O.OwlViTFeatureExtractor,OwlViTImageProcessor:()=>O.OwlViTImageProcessor,Owlv2ImageProcessor:()=>q.Owlv2ImageProcessor,Phi3VImageProcessor:()=>Z.Phi3VImageProcessor,PvtImageProcessor:()=>Q.PvtImageProcessor,Qwen2VLImageProcessor:()=>J.Qwen2VLImageProcessor,RTDetrImageProcessor:()=>re.RTDetrImageProcessor,SamImageProcessor:()=>te.SamImageProcessor,SegformerFeatureExtractor:()=>ce.SegformerFeatureExtractor,SegformerImageProcessor:()=>ce.SegformerImageProcessor,SiglipImageProcessor:()=>ue.SiglipImageProcessor,SmolVLMImageProcessor:()=>B.SmolVLMImageProcessor,Swin2SRImageProcessor:()=>F.Swin2SRImageProcessor,VLMImageProcessor:()=>M.VLMImageProcessor,ViTFeatureExtractor:()=>G.ViTFeatureExtractor,ViTImageProcessor:()=>G.ViTImageProcessor,VitMatteImageProcessor:()=>N.VitMatteImageProcessor,VitPoseImageProcessor:()=>ae.VitPoseImageProcessor,YolosFeatureExtractor:()=>ke.YolosFeatureExtractor,YolosImageProcessor:()=>ke.YolosImageProcessor});var s=t("./src/models/beit/image_processing_beit.js"),n=t("./src/models/bit/image_processing_bit.js"),i=t("./src/models/chinese_clip/image_processing_chinese_clip.js"),o=t("./src/models/clip/image_processing_clip.js"),a=t("./src/models/convnext/image_processing_convnext.js"),l=t("./src/models/deit/image_processing_deit.js"),c=t("./src/models/detr/image_processing_detr.js"),p=t("./src/models/dinov3_vit/image_processing_dinov3_vit.js"),d=t("./src/models/donut/image_processing_donut.js"),u=t("./src/models/dpt/image_processing_dpt.js"),_=t("./src/models/efficientnet/image_processing_efficientnet.js"),f=t("./src/models/glpn/image_processing_glpn.js"),w=t("./src/models/grounding_dino/image_processing_grounding_dino.js"),I=t("./src/models/idefics3/image_processing_idefics3.js"),M=t("./src/models/janus/image_processing_janus.js"),y=t("./src/models/jina_clip/image_processing_jina_clip.js"),$=t("./src/models/llava_onevision/image_processing_llava_onevision.js"),v=t("./src/models/mask2former/image_processing_mask2former.js"),T=t("./src/models/maskformer/image_processing_maskformer.js"),E=t("./src/models/mobilenet_v1/image_processing_mobilenet_v1.js"),x=t("./src/models/mobilenet_v2/image_processing_mobilenet_v2.js"),S=t("./src/models/mobilenet_v3/image_processing_mobilenet_v3.js"),z=t("./src/models/mobilenet_v4/image_processing_mobilenet_v4.js"),D=t("./src/models/mobilevit/image_processing_mobilevit.js"),K=t("./src/models/nougat/image_processing_nougat.js"),q=t("./src/models/owlv2/image_processing_owlv2.js"),O=t("./src/models/owlvit/image_processing_owlvit.js"),Z=t("./src/models/phi3_v/image_processing_phi3_v.js"),Q=t("./src/models/pvt/image_processing_pvt.js"),J=t("./src/models/qwen2_vl/image_processing_qwen2_vl.js"),re=t("./src/models/rt_detr/image_processing_rt_detr.js"),te=t("./src/models/sam/image_processing_sam.js"),ce=t("./src/models/segformer/image_processing_segformer.js"),ue=t("./src/models/siglip/image_processing_siglip.js"),B=t("./src/models/smolvlm/image_processing_smolvlm.js"),F=t("./src/models/swin2sr/image_processing_swin2sr.js"),G=t("./src/models/vit/image_processing_vit.js"),N=t("./src/models/vitmatte/image_processing_vitmatte.js"),ae=t("./src/models/vitpose/image_processing_vitpose.js"),ke=t("./src/models/yolos/image_processing_yolos.js")}),"./src/models/janus/image_processing_janus.js":((e,r,t)=>{t.r(r),t.d(r,{VLMImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(o){super({do_pad:!0,pad_size:{width:o.image_size,height:o.image_size},...o}),this.constant_values=this.config.background_color.map(a=>a*this.rescale_factor)}pad_image(o,a,l,c){return super.pad_image(o,a,l,{constant_values:this.constant_values,center:!0,...c})}}}),"./src/models/janus/processing_janus.js":((e,r,t)=>{t.r(r),t.d(r,{VLChatProcessor:()=>c});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),o=t("./src/utils/core.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/image.js");class c extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;static uses_processor_config=!0;constructor(d,u,_){super(d,u,_),this.image_tag=this.config.image_tag,this.image_start_tag=this.config.image_start_tag,this.image_end_tag=this.config.image_end_tag,this.num_image_tokens=this.config.num_image_tokens}async _call(d,{images:u=null,chat_template:_="default"}={}){u?Array.isArray(u)||(u=[u]):u=await Promise.all(d.filter(D=>D.images).flatMap(D=>D.images).map(D=>l.RawImage.read(D)));const f=this.tokenizer,w=f.apply_chat_template(d,{tokenize:!1,add_generation_prompt:!0,chat_template:_}),I=D=>f.encode(D,{add_special_tokens:!1}),M=w.split(this.image_tag),y=M.length-1;if(u.length!==y)throw new Error(`Number of images provided (${u.length}) does not match number of "${this.image_tag}" image tags (${y})`);const[$,v,T]=f.model.convert_tokens_to_ids([this.image_tag,this.image_start_tag,this.image_end_tag]);let E=I(M[0]),x=new Array(E.length).fill(!1);for(let D=1;D<M.length;++D){const K=new Array(this.num_image_tokens).fill($),q=I(M[D]);E=(0,o.mergeArrays)(E,[v],K,[T],q);const O=new Array(this.num_image_tokens).fill(!0);x=(0,o.mergeArrays)(x,[!1],O,[!1],new Array(q.length).fill(!1))}const S=[1,E.length],z={input_ids:new a.Tensor("int64",E,S),attention_mask:new a.Tensor("int64",new Array(E.length).fill(1),S),images_seq_mask:new a.Tensor("bool",x,S),images_emb_mask:new a.Tensor("bool",new Array(y*this.num_image_tokens).fill(!0),[1,y,this.num_image_tokens])};if(u&&u.length>0){const D=await this.image_processor(u);return D.pixel_values.unsqueeze_(0),{...z,...D}}return z}}}),"./src/models/jina_clip/image_processing_jina_clip.js":((e,r,t)=>{t.r(r),t.d(r,{JinaCLIPImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{constructor(o){const{resize_mode:a,fill_color:l,interpolation:c,size:p,...d}=o,u=a==="squash"?{width:p,height:p}:a==="shortest"?{shortest_edge:p}:{longest_edge:p},_=c==="bicubic"?3:2;super({...d,size:u,resample:_,do_center_crop:!0,crop_size:p,do_normalize:!0})}}}),"./src/models/jina_clip/processing_jina_clip.js":((e,r,t)=>{t.r(r),t.d(r,{JinaCLIPProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;async _call(l=null,c=null,p={}){if(!l&&!c)throw new Error("Either text or images must be provided");const d=l?this.tokenizer(l,p):{},u=c?await this.image_processor(c,p):{};return{...d,...u}}}}),"./src/models/llava/processing_llava.js":((e,r,t)=>{t.r(r),t.d(r,{LlavaProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;static uses_processor_config=!0;async _call(l,c=null,p={}){const d=await this.image_processor(l,p);if(c){const[_,f]=d.pixel_values.dims.slice(-2),{image_token:w,patch_size:I,num_additional_image_tokens:M}=this.config,y=Math.floor(_/I)*Math.floor(f/I)+M;c=structuredClone(c),Array.isArray(c)||(c=[c]);for(let $=0;$<c.length;++$)c[$]=c[$].replace(w,w.repeat(y))}const u=c?this.tokenizer(c,p):{};return{...d,...u}}}}),"./src/models/llava_onevision/image_processing_llava_onevision.js":((e,r,t)=>{t.r(r),t.d(r,{LlavaOnevisionImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/mask2former/image_processing_mask2former.js":((e,r,t)=>{t.r(r),t.d(r,{Mask2FormerImageProcessor:()=>n});var s=t("./src/models/maskformer/image_processing_maskformer.js");class n extends s.MaskFormerImageProcessor{}}),"./src/models/maskformer/image_processing_maskformer.js":((e,r,t)=>{t.r(r),t.d(r,{MaskFormerFeatureExtractor:()=>i,MaskFormerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_panoptic_segmentation(...a){return(0,s.post_process_panoptic_segmentation)(...a)}post_process_instance_segmentation(...a){return(0,s.post_process_instance_segmentation)(...a)}}class i extends n{}}),"./src/models/mgp_str/processing_mgp_str.js":((e,r,t)=>{t.r(r),t.d(r,{MgpstrProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js"),o=t("./src/utils/maths.js");const a={char:["char_decode",1],bpe:["bpe_decode",2],wp:["wp_decode",102]};class l extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;get char_tokenizer(){return this.components.char_tokenizer}get bpe_tokenizer(){return this.components.bpe_tokenizer}get wp_tokenizer(){return this.components.wp_tokenizer}_decode_helper(p,d){if(!a.hasOwnProperty(d))throw new Error(`Format ${d} is not supported.`);const[u,_]=a[d],f=this[u].bind(this),[w,I]=p.dims,M=[],y=[],$=p.tolist();for(let T=0;T<w;++T){const E=$[T],x=[],S=[];for(let D=1;D<I;++D){const[K,q]=(0,o.max)((0,o.softmax)(E[D]));if(S.push(K),q==_)break;x.push(q)}const z=S.length>0?S.reduce((D,K)=>D*K,1):0;y.push(x),M.push(z)}return[f(y),M]}char_decode(p){return this.char_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}bpe_decode(p){return this.bpe_tokenizer.batch_decode(p)}wp_decode(p){return this.wp_tokenizer.batch_decode(p).map(d=>d.replaceAll(" ",""))}batch_decode([p,d,u]){const[_,f]=this._decode_helper(p,"char"),[w,I]=this._decode_helper(d,"bpe"),[M,y]=this._decode_helper(u,"wp"),$=[],v=[];for(let T=0;T<_.length;++T){const[E,x]=(0,o.max)([f[T],I[T],y[T]]);$.push([_[T],w[T],M[T]][x]),v.push(E)}return{generated_text:$,scores:v,char_preds:_,bpe_preds:w,wp_preds:M}}static async from_pretrained(...p){const d=await super.from_pretrained(...p),u=await i.AutoTokenizer.from_pretrained("Xenova/gpt2"),_=await i.AutoTokenizer.from_pretrained("Xenova/bert-base-uncased");return d.components={image_processor:d.image_processor,char_tokenizer:d.tokenizer,bpe_tokenizer:u,wp_tokenizer:_},d}async _call(p,d=null){const u=await this.image_processor(p);return d&&(u.labels=this.tokenizer(d).input_ids),u}}}),"./src/models/mobilenet_v1/image_processing_mobilenet_v1.js":((e,r,t)=>{t.r(r),t.d(r,{MobileNetV1FeatureExtractor:()=>i,MobileNetV1ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/mobilenet_v2/image_processing_mobilenet_v2.js":((e,r,t)=>{t.r(r),t.d(r,{MobileNetV2FeatureExtractor:()=>i,MobileNetV2ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/mobilenet_v3/image_processing_mobilenet_v3.js":((e,r,t)=>{t.r(r),t.d(r,{MobileNetV3FeatureExtractor:()=>i,MobileNetV3ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/mobilenet_v4/image_processing_mobilenet_v4.js":((e,r,t)=>{t.r(r),t.d(r,{MobileNetV4FeatureExtractor:()=>i,MobileNetV4ImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/mobilevit/image_processing_mobilevit.js":((e,r,t)=>{t.r(r),t.d(r,{MobileViTFeatureExtractor:()=>i,MobileViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/moonshine/feature_extraction_moonshine.js":((e,r,t)=>{t.r(r),t.d(r,{MoonshineFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends s.FeatureExtractor{async _call(a){(0,s.validate_audio_inputs)(a,"MoonshineFeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));const l=[1,a.length];return{input_values:new n.Tensor("float32",a,l)}}}}),"./src/models/moonshine/processing_moonshine.js":((e,r,t)=>{t.r(r),t.d(r,{MoonshineProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}}),"./src/models/nougat/image_processing_nougat.js":((e,r,t)=>{t.r(r),t.d(r,{NougatImageProcessor:()=>n});var s=t("./src/models/donut/image_processing_donut.js");class n extends s.DonutImageProcessor{}}),"./src/models/owlv2/image_processing_owlv2.js":((e,r,t)=>{t.r(r),t.d(r,{Owlv2ImageProcessor:()=>n});var s=t("./src/models/owlvit/image_processing_owlvit.js");class n extends s.OwlViTImageProcessor{}}),"./src/models/owlvit/image_processing_owlvit.js":((e,r,t)=>{t.r(r),t.d(r,{OwlViTFeatureExtractor:()=>i,OwlViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class i extends n{}}),"./src/models/owlvit/processing_owlvit.js":((e,r,t)=>{t.r(r),t.d(r,{OwlViTProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");class o extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor}}),"./src/models/paligemma/processing_paligemma.js":((e,r,t)=>{t.r(r),t.d(r,{PaliGemmaProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");const o="<image>";function a(c,p,d,u,_){return`${u.repeat(d*_)}${p}${c}
`}class l extends s.Processor{static tokenizer_class=i.AutoTokenizer;static image_processor_class=n.AutoImageProcessor;static uses_processor_config=!1;async _call(p,d=null,u={}){d||(console.warn("You are using PaliGemma without a text prefix. It will perform as a picture-captioning model."),d=""),Array.isArray(p)||(p=[p]),Array.isArray(d)||(d=[d]);const _=this.tokenizer.bos_token,f=this.image_processor.config.image_seq_length;let w;d.some(y=>y.includes(o))?w=d.map(y=>{const $=y.replaceAll(o,o.repeat(f)),v=$.lastIndexOf(o),T=v===-1?0:v+o.length;return $.slice(0,T)+_+$.slice(T)+`
`}):(console.warn("You are passing both `text` and `images` to `PaliGemmaProcessor`. The processor expects special image tokens in the text, as many tokens as there are images per each text. It is recommended to add `<image>` tokens in the very beginning of your text. For this call, we will infer how many images each text has and add special tokens."),w=d.map(y=>a(y,_,f,o,p.length)));const I=this.tokenizer(w,u);return{...await this.image_processor(p,u),...I}}}}),"./src/models/phi3_v/image_processing_phi3_v.js":((e,r,t)=>{t.r(r),t.d(r,{Phi3VImageProcessor:()=>p});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");const i=336,o=[2,3],{ceil:a,floor:l,sqrt:c}=Math;class p extends s.ImageProcessor{constructor(u){super({...u,do_normalize:!0,do_pad:!0,pad_size:"custom",do_convert_rgb:!0,do_resize:!0}),this._num_crops=u.num_crops}calc_num_image_tokens_from_image_size(u,_){const{num_img_tokens:f}=this.config;return l((l(_/i)*l(u/i)+1)*f+1+(l(_/i)+1)*c(f))}get_resize_output_image_size(u,_){const f=this._num_crops,[w,I]=u.size;let M=w/I,y=1;for(;y*Math.ceil(y/M)<=f;)y+=1;y-=1;const $=Math.floor(y*336),v=Math.floor($/M);return[$,v]}pad_image(u,_,f,w={}){const[I,M]=_,y=i*a(I/i),$=i*a(M/i),v=[1,1,1].map((T,E)=>(T-this.image_mean[E])/this.image_std[E]);return super.pad_image(u,_,{width:$,height:y},{center:!0,constant_values:v,...w})}async _call(u,{num_crops:_=null}={}){if(this._num_crops=_??=this.config.num_crops,_<4||c(_)%1!==0)throw new Error("num_crops must be a square number >= 4");Array.isArray(u)||(u=[u]);const f=u.length,w=await Promise.all(u.map(x=>this.preprocess(x))),I=w.map(x=>x.original_size),M=w.map(x=>x.reshaped_input_size),y=[];for(const{pixel_values:x}of w){x.unsqueeze_(0);const[S,z]=x.dims.slice(-2),D=await(0,n.interpolate_4d)(x,{size:[i,i],mode:"bicubic"});if(_>0){const K=[],q=c(_),O=l(z/q),Z=l(S/q);for(let J=0;J<q;++J)for(let re=0;re<q;++re){let te,ce,ue,B;J===q-1?(ce=S-Z,B=S):(ce=J*Z,B=(J+1)*Z),re===q-1?(te=z-O,ue=z):(te=re*O,ue=(re+1)*O);const F=[ce,te],G=[B,ue],N=await(0,n.slice)(x,F,G,o);K.push(N)}const Q=await(0,n.interpolate_4d)((0,n.cat)(K,0),{size:[i,i],mode:"bicubic"});y.push((0,n.cat)([D,Q],0))}else y.push(D)}const $=(0,n.stack)(y,0),v=M.map(x=>x.map(S=>i*a(S/i))),T=new n.Tensor("int64",v.flat(),[f,2]),E=v.map(([x,S])=>this.calc_num_image_tokens_from_image_size(S,x));return{pixel_values:$,original_sizes:I,reshaped_input_sizes:M,image_sizes:T,num_img_tokens:E}}}}),"./src/models/phi3_v/processing_phi3_v.js":((e,r,t)=>{t.r(r),t.d(r,{Phi3VProcessor:()=>l});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");const o="<|image|>",a=/<\|image_\d+\|>/g;class l extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;async _call(p,d=null,{padding:u=!0,truncation:_=!0,num_crops:f=null}={}){Array.isArray(p)||(p=[p]);let w,I;if(d){I=await this.image_processor(d,{num_crops:f});const{num_img_tokens:M}=I,y=p.map((v,T)=>v.split(a).join(o.repeat(M[T])));w=this.tokenizer(y,{padding:u,truncation:_});const $=this.tokenizer.model.convert_tokens_to_ids([o])[0];w.input_ids.map_(v=>v==$?-v:v)}else w=this.tokenizer(p);return{...w,...I}}}}),"./src/models/processors.js":((e,r,t)=>{t.r(r),t.d(r,{Florence2Processor:()=>s.Florence2Processor,Gemma3nProcessor:()=>n.Gemma3nProcessor,GroundingDinoProcessor:()=>i.GroundingDinoProcessor,Idefics3Processor:()=>o.Idefics3Processor,JinaCLIPProcessor:()=>l.JinaCLIPProcessor,LlavaProcessor:()=>c.LlavaProcessor,MgpstrProcessor:()=>p.MgpstrProcessor,MoonshineProcessor:()=>d.MoonshineProcessor,OwlViTProcessor:()=>u.OwlViTProcessor,PaliGemmaProcessor:()=>f.PaliGemmaProcessor,Phi3VProcessor:()=>_.Phi3VProcessor,PyAnnoteProcessor:()=>w.PyAnnoteProcessor,Qwen2VLProcessor:()=>I.Qwen2VLProcessor,SamProcessor:()=>M.SamProcessor,SmolVLMProcessor:()=>y.SmolVLMProcessor,SpeechT5Processor:()=>$.SpeechT5Processor,UltravoxProcessor:()=>v.UltravoxProcessor,VLChatProcessor:()=>a.VLChatProcessor,VoxtralProcessor:()=>T.VoxtralProcessor,Wav2Vec2Processor:()=>E.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>x.Wav2Vec2ProcessorWithLM,WhisperProcessor:()=>S.WhisperProcessor});var s=t("./src/models/florence2/processing_florence2.js"),n=t("./src/models/gemma3n/processing_gemma3n.js"),i=t("./src/models/grounding_dino/processing_grounding_dino.js"),o=t("./src/models/idefics3/processing_idefics3.js"),a=t("./src/models/janus/processing_janus.js"),l=t("./src/models/jina_clip/processing_jina_clip.js"),c=t("./src/models/llava/processing_llava.js"),p=t("./src/models/mgp_str/processing_mgp_str.js"),d=t("./src/models/moonshine/processing_moonshine.js"),u=t("./src/models/owlvit/processing_owlvit.js"),_=t("./src/models/phi3_v/processing_phi3_v.js"),f=t("./src/models/paligemma/processing_paligemma.js"),w=t("./src/models/pyannote/processing_pyannote.js"),I=t("./src/models/qwen2_vl/processing_qwen2_vl.js"),M=t("./src/models/sam/processing_sam.js"),y=t("./src/models/smolvlm/processing_smolvlm.js"),$=t("./src/models/speecht5/processing_speecht5.js"),v=t("./src/models/ultravox/processing_ultravox.js"),T=t("./src/models/voxtral/processing_voxtral.js"),E=t("./src/models/wav2vec2/processing_wav2vec2.js"),x=t("./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js"),S=t("./src/models/whisper/processing_whisper.js")}),"./src/models/pvt/image_processing_pvt.js":((e,r,t)=>{t.r(r),t.d(r,{PvtImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/pyannote/feature_extraction_pyannote.js":((e,r,t)=>{t.r(r),t.d(r,{PyAnnoteFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/maths.js");class o extends s.FeatureExtractor{async _call(l){(0,s.validate_audio_inputs)(l,"PyAnnoteFeatureExtractor"),l instanceof Float64Array&&(l=new Float32Array(l));const c=[1,1,l.length];return{input_values:new n.Tensor("float32",l,c)}}samples_to_frames(l){return(l-this.config.offset)/this.config.step}post_process_speaker_diarization(l,c){const p=c/this.samples_to_frames(c)/this.config.sampling_rate,d=[];for(const u of l.tolist()){const _=[];let f=-1;for(let w=0;w<u.length;++w){const I=(0,i.softmax)(u[w]),[M,y]=(0,i.max)(I),[$,v]=[w,w+1];y!==f?(f=y,_.push({id:y,start:$,end:v,score:M})):(_.at(-1).end=v,_.at(-1).score+=M)}d.push(_.map(({id:w,start:I,end:M,score:y})=>({id:w,start:I*p,end:M*p,confidence:y/(M-I)})))}return d}}}),"./src/models/pyannote/processing_pyannote.js":((e,r,t)=>{t.r(r),t.d(r,{PyAnnoteProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/pyannote/feature_extraction_pyannote.js");class i extends s.Processor{static feature_extractor_class=n.PyAnnoteFeatureExtractor;async _call(a){return await this.feature_extractor(a)}post_process_speaker_diarization(...a){return this.feature_extractor.post_process_speaker_diarization(...a)}get sampling_rate(){return this.feature_extractor.config.sampling_rate}}}),"./src/models/qwen2_vl/image_processing_qwen2_vl.js":((e,r,t)=>{t.r(r),t.d(r,{Qwen2VLImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(a,...l){const{pixel_values:c,original_sizes:p,reshaped_input_sizes:d}=await super._call(a,...l);let u=c;const{temporal_patch_size:_,merge_size:f,patch_size:w}=this.config;u.dims[0]===1&&(u=(0,n.cat)(Array.from({length:_},()=>u),0));const I=u.dims[0]/_,M=u.dims[1],y=Math.floor(u.dims[2]/w),$=Math.floor(u.dims[3]/w),v=u.view(I,_,M,Math.floor(y/f),f,w,Math.floor($/f),f,w).permute(0,3,6,4,7,2,1,5,8).view(I*y*$,M*_*w*w),T=new n.Tensor("int64",[I,y,$],[1,3]);return{pixel_values:v,image_grid_thw:T,original_sizes:p,reshaped_input_sizes:d}}}}),"./src/models/qwen2_vl/processing_qwen2_vl.js":((e,r,t)=>{t.r(r),t.d(r,{Qwen2VLProcessor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js"),i=t("./src/tokenizers.js");t("./src/utils/image.js");class o extends s.Processor{static image_processor_class=n.AutoImageProcessor;static tokenizer_class=i.AutoTokenizer;async _call(l,c=null,...p){Array.isArray(l)||(l=[l]);let d,u;if(c&&(d=await this.image_processor(c),u=d.image_grid_thw),u){let f=this.image_processor.config.merge_size**2,w=0;const I=u.tolist();l=l.map(M=>{for(;M.includes("<|image_pad|>");){const y=Number(I[w++].reduce(($,v)=>$*v,1n));M=M.replace("<|image_pad|>","<|placeholder|>".repeat(Math.floor(y/f)))}return M.replaceAll("<|placeholder|>","<|image_pad|>")})}return{...this.tokenizer(l),...d}}}}),"./src/models/rt_detr/image_processing_rt_detr.js":((e,r,t)=>{t.r(r),t.d(r,{RTDetrImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...o){return(0,s.post_process_object_detection)(...o)}}}),"./src/models/sam/image_processing_sam.js":((e,r,t)=>{t.r(r),t.d(r,{SamImageProcessor:()=>o});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/core.js"),i=t("./src/utils/tensor.js");class o extends s.ImageProcessor{reshape_input_points(l,c,p,d=!1){l=structuredClone(l);let u=(0,n.calculateDimensions)(l);if(u.length===3)d||(u=[1,...u]),l=[l];else if(u.length!==4)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");for(let _=0;_<l.length;++_){let f=c[_],w=p[_],I=[w[0]/f[0],w[1]/f[1]];for(let M=0;M<l[_].length;++M)for(let y=0;y<l[_][M].length;++y)for(let $=0;$<l[_][M][y].length;++$)l[_][M][y][$]*=I[$%2]}return new i.Tensor("float32",Float32Array.from(l.flat(1/0)),u)}add_input_labels(l,c){let p=(0,n.calculateDimensions)(l);if(p.length===2)p=[1,...p],l=[l];else if(p.length!==3)throw Error("The input_points must be a 4D tensor of shape `batch_size`, `point_batch_size`, `nb_points_per_image`, `2`.");if(p.some((d,u)=>d!==c.dims[u]))throw Error(`The first ${p.length} dimensions of 'input_points' and 'input_labels' must be the same.`);return new i.Tensor("int64",l.flat(1/0).map(BigInt),p)}async _call(l,{input_points:c=null,input_labels:p=null,input_boxes:d=null}={}){const u=await super._call(l);if(c&&(u.input_points=this.reshape_input_points(c,u.original_sizes,u.reshaped_input_sizes)),p){if(!u.input_points)throw Error("`input_points` must be provided if `input_labels` are provided.");u.input_labels=this.add_input_labels(p,u.input_points)}return d&&(u.input_boxes=this.reshape_input_points(d,u.original_sizes,u.reshaped_input_sizes,!0)),u}async post_process_masks(l,c,p,{mask_threshold:d=0,binarize:u=!0,pad_size:_=null}={}){const f=[];_=_??this.pad_size;const w=[_.height,_.width];for(let I=0;I<c.length;++I){const M=c[I],y=p[I];let $=await(0,i.interpolate_4d)(l[I],{mode:"bilinear",size:w});if($=$.slice(null,null,[0,y[0]],[0,y[1]]),$=await(0,i.interpolate_4d)($,{mode:"bilinear",size:M}),u){const v=$.data,T=new Uint8Array(v.length);for(let E=0;E<v.length;++E)v[E]>d&&(T[E]=1);$=new i.Tensor("bool",T,$.dims)}f.push($)}return f}generate_crop_boxes(l,c,{crop_n_layers:p=0,overlap_ratio:d=512/1500,points_per_crop:u=32,crop_n_points_downscale_factor:_=1}={}){}}}),"./src/models/sam/processing_sam.js":((e,r,t)=>{t.r(r),t.d(r,{SamProcessor:()=>i});var s=t("./src/base/processing_utils.js"),n=t("./src/models/auto/image_processing_auto.js");class i extends s.Processor{static image_processor_class=n.AutoImageProcessor;async _call(...a){return await this.image_processor(...a)}post_process_masks(...a){return this.image_processor.post_process_masks(...a)}reshape_input_points(...a){return this.image_processor.reshape_input_points(...a)}}}),"./src/models/seamless_m4t/feature_extraction_seamless_m4t.js":((e,r,t)=>{t.r(r),t.d(r,{SeamlessM4TFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js"),i=t("./src/utils/audio.js");class o extends s.FeatureExtractor{constructor(l){super(l);const c=this.config.sampling_rate,p=(0,i.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(c/2),c,null,"kaldi",!0);this.mel_filters=p,this.window=(0,i.window_function)(400,"povey",{periodic:!1})}async _extract_fbank_features(l,c){return l=l.map(p=>p*32768),(0,i.spectrogram)(l,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,max_num_frames:c,transpose:!0})}async _call(l,{padding:c=!0,pad_to_multiple_of:p=2,do_normalize_per_mel_bins:d=!0,return_attention_mask:u=!0}={}){(0,s.validate_audio_inputs)(l,"SeamlessM4TFeatureExtractor");let _=await this._extract_fbank_features(l,this.config.max_length);if(d){const[T,E]=_.dims,x=_.data;for(let S=0;S<E;++S){let z=0;for(let O=0;O<T;++O)z+=x[O*E+S];const D=z/T;let K=0;for(let O=0;O<T;++O)K+=(x[O*E+S]-D)**2;K/=T-1;const q=Math.sqrt(K+1e-7);for(let O=0;O<T;++O){const Z=O*E+S;x[Z]=(x[Z]-D)/q}}}let f;if(c){const[T,E]=_.dims,x=_.data,S=T%p;if(S>0){const z=new Float32Array(E*(T+S));z.set(x),z.fill(this.config.padding_value,x.length);const D=T+S;_=new n.Tensor(_.type,z,[D,E]),u&&(f=new n.Tensor("int64",new BigInt64Array(D),[1,D]),f.data.fill(1n,0,T))}}const[w,I]=_.dims,M=this.config.stride;if(w%M!==0)throw new Error(`The number of frames (${w}) must be a multiple of the stride (${M}).`);const $=_.view(1,Math.floor(w/M),I*M),v={input_features:$};if(u){const T=$.dims[1],E=new BigInt64Array(T);if(f){const x=f.data;for(let S=1,z=0;S<w;S+=M,++z)E[z]=x[S]}else E.fill(1n);v.attention_mask=new n.Tensor("int64",E,[1,T])}return v}}}),"./src/models/segformer/image_processing_segformer.js":((e,r,t)=>{t.r(r),t.d(r,{SegformerFeatureExtractor:()=>i,SegformerImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_semantic_segmentation(...a){return(0,s.post_process_semantic_segmentation)(...a)}}class i extends n{}}),"./src/models/siglip/image_processing_siglip.js":((e,r,t)=>{t.r(r),t.d(r,{SiglipImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}}),"./src/models/smolvlm/image_processing_smolvlm.js":((e,r,t)=>{t.r(r),t.d(r,{SmolVLMImageProcessor:()=>s.Idefics3ImageProcessor});var s=t("./src/models/idefics3/image_processing_idefics3.js")}),"./src/models/smolvlm/processing_smolvlm.js":((e,r,t)=>{t.r(r),t.d(r,{SmolVLMProcessor:()=>s.Idefics3Processor});var s=t("./src/models/idefics3/processing_idefics3.js")}),"./src/models/snac/feature_extraction_snac.js":((e,r,t)=>{t.r(r),t.d(r,{SnacFeatureExtractor:()=>n});var s=t("./src/models/dac/feature_extraction_dac.js");class n extends s.DacFeatureExtractor{}}),"./src/models/speecht5/feature_extraction_speecht5.js":((e,r,t)=>{t.r(r),t.d(r,{SpeechT5FeatureExtractor:()=>n});var s=t("./src/base/feature_extraction_utils.js");class n extends s.FeatureExtractor{}}),"./src/models/speecht5/processing_speecht5.js":((e,r,t)=>{t.r(r),t.d(r,{SpeechT5Processor:()=>o});var s=t("./src/base/processing_utils.js"),n=t("./src/tokenizers.js"),i=t("./src/models/auto/feature_extraction_auto.js");class o extends s.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=i.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}}),"./src/models/swin2sr/image_processing_swin2sr.js":((e,r,t)=>{t.r(r),t.d(r,{Swin2SRImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{pad_image(o,a,l,c={}){const[p,d,u]=a;return super.pad_image(o,a,{width:d+(l-d%l)%l,height:p+(l-p%l)%l},{mode:"symmetric",center:!1,constant_values:-1,...c})}}}),"./src/models/ultravox/processing_ultravox.js":((e,r,t)=>{t.r(r),t.d(r,{UltravoxProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;static uses_processor_config=!0;async _call(l,c=null,p={}){if(Array.isArray(l))throw new Error("Batched inputs are not supported yet.");let d={};if(c){const _=c.length,{input_features:f}=await this.feature_extractor(c,{...p,max_length:_}),w=Math.round(_/this.config.encoder_ds_factor+1e-4),I=1+Math.ceil(w/this.config.stack_factor);d.audio_token_len=[I],d.audio_values=f;const M=this.config.audio_placeholder;if(!l.includes(M))throw new Error(`The input text does not contain the image token ${M}.`);l=l.replaceAll(M,M.repeat(I))}return{...this.tokenizer(l,{add_special_tokens:!1,...p}),...d}}}}),"./src/models/vit/image_processing_vit.js":((e,r,t)=>{t.r(r),t.d(r,{ViTFeatureExtractor:()=>i,ViTImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{}class i extends n{}}),"./src/models/vitmatte/image_processing_vitmatte.js":((e,r,t)=>{t.r(r),t.d(r,{VitMatteImageProcessor:()=>i});var s=t("./src/base/image_processors_utils.js"),n=t("./src/utils/tensor.js");class i extends s.ImageProcessor{async _call(a,l){Array.isArray(a)||(a=[a]),Array.isArray(l)||(l=[l]);const c=await Promise.all(a.map(u=>this.preprocess(u))),p=await Promise.all(l.map(u=>this.preprocess(u,{do_normalize:!1,do_convert_rgb:!1,do_convert_grayscale:!0})));return{pixel_values:(0,n.stack)(c.map((u,_)=>(0,n.cat)([u.pixel_values,p[_].pixel_values],0)),0),original_sizes:c.map(u=>u.original_size),reshaped_input_sizes:c.map(u=>u.reshaped_input_size)}}}}),"./src/models/vitpose/image_processing_vitpose.js":((e,r,t)=>{t.r(r),t.d(r,{VitPoseImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_pose_estimation(o,a,{threshold:l=null}={}){const c=o.tolist(),[p,d,u,_]=o.dims,f=[];for(let w=0;w<p;++w){const I=c[w],M=a[w],y=[];for(let $=0;$<M.length;++$){const v=M[$],T=[],E=[],x=[],S=v.at(-2)/_,z=v.at(-1)/u;for(let D=0;D<I.length;++D){let[K,q]=[0,0],O=0,Z=-1/0;const Q=I[D];for(let re=0;re<Q.length;++re){const te=Q[re];for(let ce=0;ce<te.length;++ce){const ue=te[ce];O+=ue,Z=Math.max(Z,ue),K+=(ce+.5)*ue,q+=re*ue}}if(l!=null&&Z<l)continue;const J=[S*K/O,z*q/O];T.push(J),x.push(D),E.push(Z)}y.push({bbox:v,scores:E,labels:x,keypoints:T})}f.push(y)}return f}}}),"./src/models/voxtral/processing_voxtral.js":((e,r,t)=>{t.r(r),t.d(r,{VoxtralProcessor:()=>d});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js"),o=t("./src/utils/tensor.js");const a="[AUDIO]",l="[BEGIN_AUDIO]",c=375;function p(u,_){const f=[];for(let w=0;w<u.length;w+=_)f.push(u.subarray(w,Math.min(w+_,u.length)));return f}class d extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;static uses_processor_config=!1;async _call(_,f=null,w={}){if(Array.isArray(_))throw new Error("Batched inputs are not supported yet.");const I={};if(f){if(!_.includes(a))throw new Error(`The input text does not contain the audio token ${a}.`);Array.isArray(f)||(f=[f]);const y=_.split(a),$=y.length-1;if($!==f.length)throw new Error(`The number of audio inputs (${f.length}) does not match the number of audio tokens in the text (${$}).`);const v=this.feature_extractor.config.n_samples,T=f.map(D=>p(D,v)),E=T.map(D=>D.length),x=T.flat(),S=(await Promise.all(x.map(D=>this.feature_extractor(D,w)))).map(D=>D.input_features);I.audio_values=S.length>1?(0,o.cat)(S,0):S[0];let z=y[0];for(let D=0;D<E.length;++D){z+=l;for(let K=0;K<E[D];++K)z+=a.repeat(c);z+=y[D+1]}_=z}return{...this.tokenizer(_,{add_special_tokens:!1,...w}),...I}}}}),"./src/models/wav2vec2/feature_extraction_wav2vec2.js":((e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2FeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js"),n=t("./src/utils/tensor.js");class i extends s.FeatureExtractor{_zero_mean_unit_var_norm(a){const c=a.reduce((d,u)=>d+u,0)/a.length,p=a.reduce((d,u)=>d+(u-c)**2,0)/a.length;return a.map(d=>(d-c)/Math.sqrt(p+1e-7))}async _call(a){(0,s.validate_audio_inputs)(a,"Wav2Vec2FeatureExtractor"),a instanceof Float64Array&&(a=new Float32Array(a));let l=a;this.config.do_normalize&&(l=this._zero_mean_unit_var_norm(l));const c=[1,l.length];return{input_values:new n.Tensor("float32",l,c),attention_mask:new n.Tensor("int64",new BigInt64Array(l.length).fill(1n),c)}}}}),"./src/models/wav2vec2/processing_wav2vec2.js":((e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2Processor:()=>o});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}}),"./src/models/wav2vec2_with_lm/processing_wav2vec2_with_lm.js":((e,r,t)=>{t.r(r),t.d(r,{Wav2Vec2ProcessorWithLM:()=>o});var s=t("./src/tokenizers.js"),n=t("./src/models/auto/feature_extraction_auto.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=s.AutoTokenizer;static feature_extractor_class=n.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}}),"./src/models/wespeaker/feature_extraction_wespeaker.js":((e,r,t)=>{t.r(r),t.d(r,{WeSpeakerFeatureExtractor:()=>i});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js");class i extends s.FeatureExtractor{constructor(a){super(a);const l=this.config.sampling_rate,c=(0,n.mel_filter_bank)(257,this.config.num_mel_bins,20,Math.floor(l/2),l,null,"kaldi",!0);this.mel_filters=c,this.window=(0,n.window_function)(400,"hamming",{periodic:!1}),this.min_num_frames=this.config.min_num_frames}async _extract_fbank_features(a){return a=a.map(l=>l*32768),(0,n.spectrogram)(a,this.window,400,160,{fft_length:512,power:2,center:!1,preemphasis:.97,mel_filters:this.mel_filters,log_mel:"log",mel_floor:1192092955078125e-22,remove_dc_offset:!0,transpose:!0,min_num_frames:this.min_num_frames})}async _call(a){(0,s.validate_audio_inputs)(a,"WeSpeakerFeatureExtractor");const l=(await this._extract_fbank_features(a)).unsqueeze_(0);if(this.config.fbank_centering_span===null){const c=l.mean(1).data,p=l.data,[d,u,_]=l.dims;for(let f=0;f<d;++f){const w=f*u*_,I=f*_;for(let M=0;M<u;++M){const y=w+M*_;for(let $=0;$<_;++$)p[y+$]-=c[I+$]}}}return{input_features:l}}}}),"./src/models/whisper/common_whisper.js":((e,r,t)=>{t.r(r),t.d(r,{WHISPER_LANGUAGE_MAPPING:()=>n,WHISPER_TO_LANGUAGE_CODE_MAPPING:()=>i,whisper_language_to_code:()=>o});const s=[["en","english"],["zh","chinese"],["de","german"],["es","spanish"],["ru","russian"],["ko","korean"],["fr","french"],["ja","japanese"],["pt","portuguese"],["tr","turkish"],["pl","polish"],["ca","catalan"],["nl","dutch"],["ar","arabic"],["sv","swedish"],["it","italian"],["id","indonesian"],["hi","hindi"],["fi","finnish"],["vi","vietnamese"],["he","hebrew"],["uk","ukrainian"],["el","greek"],["ms","malay"],["cs","czech"],["ro","romanian"],["da","danish"],["hu","hungarian"],["ta","tamil"],["no","norwegian"],["th","thai"],["ur","urdu"],["hr","croatian"],["bg","bulgarian"],["lt","lithuanian"],["la","latin"],["mi","maori"],["ml","malayalam"],["cy","welsh"],["sk","slovak"],["te","telugu"],["fa","persian"],["lv","latvian"],["bn","bengali"],["sr","serbian"],["az","azerbaijani"],["sl","slovenian"],["kn","kannada"],["et","estonian"],["mk","macedonian"],["br","breton"],["eu","basque"],["is","icelandic"],["hy","armenian"],["ne","nepali"],["mn","mongolian"],["bs","bosnian"],["kk","kazakh"],["sq","albanian"],["sw","swahili"],["gl","galician"],["mr","marathi"],["pa","punjabi"],["si","sinhala"],["km","khmer"],["sn","shona"],["yo","yoruba"],["so","somali"],["af","afrikaans"],["oc","occitan"],["ka","georgian"],["be","belarusian"],["tg","tajik"],["sd","sindhi"],["gu","gujarati"],["am","amharic"],["yi","yiddish"],["lo","lao"],["uz","uzbek"],["fo","faroese"],["ht","haitian creole"],["ps","pashto"],["tk","turkmen"],["nn","nynorsk"],["mt","maltese"],["sa","sanskrit"],["lb","luxembourgish"],["my","myanmar"],["bo","tibetan"],["tl","tagalog"],["mg","malagasy"],["as","assamese"],["tt","tatar"],["haw","hawaiian"],["ln","lingala"],["ha","hausa"],["ba","bashkir"],["jw","javanese"],["su","sundanese"]],n=new Map(s),i=new Map([...s.map(([a,l])=>[l,a]),["burmese","my"],["valencian","ca"],["flemish","nl"],["haitian","ht"],["letzeburgesch","lb"],["pushto","ps"],["panjabi","pa"],["moldavian","ro"],["moldovan","ro"],["sinhalese","si"],["castilian","es"]]);function o(a){a=a.toLowerCase();let l=i.get(a);if(l===void 0){const c=a.match(/^<\|([a-z]{2})\|>$/);if(c&&(a=c[1]),n.has(a))l=a;else{const d=a.length===2?n.keys():n.values();throw new Error(`Language "${a}" is not supported. Must be one of: ${JSON.stringify(Array.from(d))}`)}}return l}}),"./src/models/whisper/feature_extraction_whisper.js":((e,r,t)=>{t.r(r),t.d(r,{WhisperFeatureExtractor:()=>o});var s=t("./src/base/feature_extraction_utils.js");t("./src/utils/tensor.js");var n=t("./src/utils/audio.js"),i=t("./src/utils/maths.js");class o extends s.FeatureExtractor{constructor(l){super(l),this.config.mel_filters??=(0,n.mel_filter_bank)(Math.floor(1+this.config.n_fft/2),this.config.feature_size,0,8e3,this.config.sampling_rate,"slaney","slaney"),this.window=(0,n.window_function)(this.config.n_fft,"hann")}async _extract_fbank_features(l){const c=await(0,n.spectrogram)(l,this.window,this.config.n_fft,this.config.hop_length,{power:2,mel_filters:this.config.mel_filters,log_mel:"log10",max_num_frames:Math.min(Math.floor(l.length/this.config.hop_length),this.config.nb_max_frames)}),p=c.data,d=(0,i.max)(p)[0];for(let u=0;u<p.length;++u)p[u]=(Math.max(p[u],d-8)+4)/4;return c}async _call(l,{max_length:c=null}={}){(0,s.validate_audio_inputs)(l,"WhisperFeatureExtractor");let p;const d=c??this.config.n_samples;return l.length>d?(l.length>this.config.n_samples&&console.warn("Attempting to extract features for audio longer than 30 seconds. If using a pipeline to extract transcript from a long audio clip, remember to specify `chunk_length_s` and/or `stride_length_s`."),p=l.slice(0,d)):(p=new Float32Array(d),p.set(l)),{input_features:(await this._extract_fbank_features(p)).unsqueeze_(0)}}}}),"./src/models/whisper/generation_whisper.js":((e,r,t)=>{t.r(r),t.d(r,{WhisperGenerationConfig:()=>n});var s=t("./src/generation/configuration_utils.js");class n extends s.GenerationConfig{return_timestamps=null;return_token_timestamps=null;num_frames=null;alignment_heads=null;task=null;language=null;no_timestamps_token_id=null;prompt_ids=null;is_multilingual=null;lang_to_id=null;task_to_id=null;max_initial_timestamp_index=1}}),"./src/models/whisper/processing_whisper.js":((e,r,t)=>{t.r(r),t.d(r,{WhisperProcessor:()=>o});var s=t("./src/models/auto/feature_extraction_auto.js"),n=t("./src/tokenizers.js"),i=t("./src/base/processing_utils.js");class o extends i.Processor{static tokenizer_class=n.AutoTokenizer;static feature_extractor_class=s.AutoFeatureExtractor;async _call(l){return await this.feature_extractor(l)}}}),"./src/models/yolos/image_processing_yolos.js":((e,r,t)=>{t.r(r),t.d(r,{YolosFeatureExtractor:()=>i,YolosImageProcessor:()=>n});var s=t("./src/base/image_processors_utils.js");class n extends s.ImageProcessor{post_process_object_detection(...a){return(0,s.post_process_object_detection)(...a)}}class i extends n{}}),"./src/ops/registry.js":((e,r,t)=>{t.r(r),t.d(r,{TensorOpRegistry:()=>l});var s=t("./src/backends/onnx.js"),n=t("./src/utils/tensor.js"),i=t("./src/env.js");const o=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV,a=async(c,p,d)=>{const u=await(0,s.createInferenceSession)(new Uint8Array(c),p);let _=Promise.resolve();return(async f=>{const w=(0,s.isONNXProxy)(),I=Object.fromEntries(Object.entries(f).map(([y,$])=>[y,(w?$.clone():$).ort_tensor])),M=await(_=o?_.then(()=>u.run(I)):u.run(I));return Array.isArray(d)?d.map(y=>new n.Tensor(M[y])):new n.Tensor(M[d])})};class l{static session_options={};static get nearest_interpolate_4d(){return this._nearest_interpolate_4d||(this._nearest_interpolate_4d=a([8,10,18,0,58,129,1,10,41,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,18,10,4,109,111,100,101,34,7,110,101,97,114,101,115,116,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,21],this.session_options,"y")),this._nearest_interpolate_4d}static get bilinear_interpolate_4d(){return this._bilinear_interpolate_4d||(this._bilinear_interpolate_4d=a([8,9,18,0,58,128,1,10,40,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,17,10,4,109,111,100,101,34,6,108,105,110,101,97,114,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bilinear_interpolate_4d}static get bicubic_interpolate_4d(){return this._bicubic_interpolate_4d||(this._bicubic_interpolate_4d=a([8,9,18,0,58,127,10,39,10,1,120,10,0,10,0,10,1,115,18,1,121,34,6,82,101,115,105,122,101,42,16,10,4,109,111,100,101,34,5,99,117,98,105,99,160,1,3,18,1,114,90,31,10,1,120,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,90,15,10,1,115,18,10,10,8,8,7,18,4,10,2,8,4,98,31,10,1,121,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,99,10,3,18,1,104,10,3,18,1,119,66,2,16,20],this.session_options,"y")),this._bicubic_interpolate_4d}static get matmul(){return this._matmul||(this._matmul=a([8,9,18,0,58,55,10,17,10,1,97,10,1,98,18,1,99,34,6,77,97,116,77,117,108,18,1,114,90,9,10,1,97,18,4,10,2,8,1,90,9,10,1,98,18,4,10,2,8,1,98,9,10,1,99,18,4,10,2,8,1,66,2,16,20],this.session_options,"c")),this._matmul}static get stft(){return this._stft||(this._stft=a([8,7,18,0,58,148,1,10,38,10,1,115,10,1,106,10,1,119,10,1,108,18,1,111,34,4,83,84,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,115,90,26,10,1,115,18,21,10,19,8,1,18,15,10,3,18,1,98,10,3,18,1,115,10,3,18,1,99,90,11,10,1,106,18,6,10,4,8,7,18,0,90,16,10,1,119,18,11,10,9,8,1,18,5,10,3,18,1,119,90,11,10,1,108,18,6,10,4,8,7,18,0,98,31,10,1,111,18,26,10,24,8,1,18,20,10,3,18,1,98,10,3,18,1,102,10,3,18,1,100,10,3,18,1,99,66,2,16,17],this.session_options,"o")),this._stft}static get rfft(){return this._rfft||(this._rfft=a([8,9,18,0,58,97,10,33,10,1,120,10,0,10,1,97,18,1,121,34,3,68,70,84,42,15,10,8,111,110,101,115,105,100,101,100,24,1,160,1,2,18,1,100,90,21,10,1,120,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,90,11,10,1,97,18,6,10,4,8,7,18,0,98,21,10,1,121,18,16,10,14,8,1,18,10,10,3,18,1,115,10,3,18,1,99,66,2,16,20],this.session_options,"y")),this._rfft}static get top_k(){return this._top_k||(this._top_k=a([8,10,18,0,58,73,10,18,10,1,120,10,1,107,18,1,118,18,1,105,34,4,84,111,112,75,18,1,116,90,9,10,1,120,18,4,10,2,8,1,90,15,10,1,107,18,10,10,8,8,7,18,4,10,2,8,1,98,9,10,1,118,18,4,10,2,8,1,98,9,10,1,105,18,4,10,2,8,7,66,2,16,21],this.session_options,["v","i"])),this._top_k}static get slice(){return this._slice||(this._slice=a([8,7,18,0,58,96,10,25,10,1,120,10,1,115,10,1,101,10,1,97,10,1,116,18,1,121,34,5,83,108,105,99,101,18,1,114,90,9,10,1,120,18,4,10,2,8,1,90,9,10,1,115,18,4,10,2,8,7,90,9,10,1,101,18,4,10,2,8,7,90,9,10,1,97,18,4,10,2,8,7,90,9,10,1,116,18,4,10,2,8,7,98,9,10,1,121,18,4,10,2,8,1,66,2,16,13],this.session_options,"y")),this._slice}}}),"./src/pipelines.js":((e,r,t)=>{t.r(r),t.d(r,{AudioClassificationPipeline:()=>q,AutomaticSpeechRecognitionPipeline:()=>Z,BackgroundRemovalPipeline:()=>te,DepthEstimationPipeline:()=>ae,DocumentQuestionAnsweringPipeline:()=>F,FeatureExtractionPipeline:()=>D,FillMaskPipeline:()=>$,ImageClassificationPipeline:()=>J,ImageFeatureExtractionPipeline:()=>K,ImageSegmentationPipeline:()=>re,ImageToImagePipeline:()=>N,ImageToTextPipeline:()=>Q,ObjectDetectionPipeline:()=>ue,Pipeline:()=>w,QuestionAnsweringPipeline:()=>y,SummarizationPipeline:()=>T,Text2TextGenerationPipeline:()=>v,TextClassificationPipeline:()=>I,TextGenerationPipeline:()=>S,TextToAudioPipeline:()=>G,TokenClassificationPipeline:()=>M,TranslationPipeline:()=>E,ZeroShotAudioClassificationPipeline:()=>O,ZeroShotClassificationPipeline:()=>z,ZeroShotImageClassificationPipeline:()=>ce,ZeroShotObjectDetectionPipeline:()=>B,pipeline:()=>Fe});var s=t("./src/tokenizers.js"),n=t("./src/models.js"),i=t("./src/models/auto/processing_auto.js");t("./src/base/processing_utils.js");var o=t("./src/utils/generic.js"),a=t("./src/utils/core.js"),l=t("./src/utils/maths.js"),c=t("./src/utils/audio.js"),p=t("./src/utils/tensor.js"),d=t("./src/utils/image.js");async function u(xe){return Array.isArray(xe)||(xe=[xe]),await Promise.all(xe.map(H=>d.RawImage.read(H)))}async function _(xe,H){return Array.isArray(xe)||(xe=[xe]),await Promise.all(xe.map(de=>typeof de=="string"||de instanceof URL?(0,c.read_audio)(de,H):de instanceof Float64Array?new Float32Array(de):de))}function f(xe,H){H&&(xe=xe.map(Me=>Me|0));const[de,W,_e,Ie]=xe;return{xmin:de,ymin:W,xmax:_e,ymax:Ie}}class w extends o.Callable{constructor({task:H,model:de,tokenizer:W=null,processor:_e=null}){super(),this.task=H,this.model=de,this.tokenizer=W,this.processor=_e}async dispose(){await this.model.dispose()}}class I extends w{constructor(H){super(H)}async _call(H,{top_k:de=1}={}){const W=this.tokenizer(H,{padding:!0,truncation:!0}),_e=await this.model(W),Ie=this.model.config.problem_type==="multi_label_classification"?Ee=>Ee.sigmoid():Ee=>new p.Tensor("float32",(0,l.softmax)(Ee.data),Ee.dims),Me=this.model.config.id2label,ge=[];for(const Ee of _e.logits){const we=Ie(Ee),Ae=await(0,p.topk)(we,de),De=Ae[0].tolist(),be=Ae[1].tolist().map((st,je)=>({label:Me?Me[st]:`LABEL_${st}`,score:De[je]}));de===1?ge.push(...be):ge.push(be)}return Array.isArray(H)||de===1?ge:ge[0]}}class M extends w{constructor(H){super(H)}async _call(H,{ignore_labels:de=["O"]}={}){const W=Array.isArray(H),_e=this.tokenizer(W?H:[H],{padding:!0,truncation:!0}),Me=(await this.model(_e)).logits,ge=this.model.config.id2label,Ee=[];for(let we=0;we<Me.dims[0];++we){const Ae=_e.input_ids[we],De=Me[we],We=[];for(let be=0;be<De.dims[0];++be){const st=De[be],je=(0,l.max)(st.data)[1],Ne=ge?ge[je]:`LABEL_${je}`;if(de.includes(Ne))continue;const et=this.tokenizer.decode([Ae[be].item()],{skip_special_tokens:!0});if(et==="")continue;const He=(0,l.softmax)(st.data);We.push({entity:Ne,score:He[je],index:be,word:et})}Ee.push(We)}return W?Ee:Ee[0]}}class y extends w{constructor(H){super(H)}async _call(H,de,{top_k:W=1}={}){const _e=this.tokenizer(H,{text_pair:de,padding:!0,truncation:!0}),{start_logits:Ie,end_logits:Me}=await this.model(_e),ge=_e.input_ids.tolist(),Ee=_e.attention_mask.tolist(),we=this.tokenizer.all_special_ids,Ae=[];for(let De=0;De<Ie.dims[0];++De){const We=ge[De],be=We.findIndex(Je=>Je==this.tokenizer.sep_token_id);Ee[De].map((Je,Ze)=>Je==1&&(Ze===0||Ze>be&&we.findIndex(Ct=>Ct==We[Ze])===-1));const st=Ie[De].tolist(),je=Me[De].tolist();for(let Je=1;Je<st.length;++Je)(Ee[De]==0||Je<=be||we.findIndex(Ze=>Ze==We[Je])!==-1)&&(st[Je]=-1/0,je[Je]=-1/0);const Ne=(0,l.softmax)(st).map((Je,Ze)=>[Je,Ze]),et=(0,l.softmax)(je).map((Je,Ze)=>[Je,Ze]);Ne[0][0]=0,et[0][0]=0;const He=(0,a.product)(Ne,et).filter(Je=>Je[0][1]<=Je[1][1]).map(Je=>[Je[0][1],Je[1][1],Je[0][0]*Je[1][0]]).sort((Je,Ze)=>Ze[2]-Je[2]);for(let Je=0;Je<Math.min(He.length,W);++Je){const[Ze,Ct,At]=He[Je],ft=We.slice(Ze,Ct+1),Mr=this.tokenizer.decode(ft,{skip_special_tokens:!0});Ae.push({answer:Mr,score:At})}}return W===1?Ae[0]:Ae}}class $ extends w{constructor(H){super(H)}async _call(H,{top_k:de=5}={}){const W=this.tokenizer(H,{padding:!0,truncation:!0}),{logits:_e}=await this.model(W),Ie=[],Me=W.input_ids.tolist();for(let ge=0;ge<Me.length;++ge){const Ee=Me[ge],we=Ee.findIndex(st=>st==this.tokenizer.mask_token_id);if(we===-1)throw Error(`Mask token (${this.tokenizer.mask_token}) not found in text.`);const Ae=_e[ge][we],De=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ae.data),Ae.dims),de),We=De[0].tolist(),be=De[1].tolist();Ie.push(be.map((st,je)=>{const Ne=Ee.slice();return Ne[we]=st,{score:We[je],token:Number(st),token_str:this.tokenizer.decode([st]),sequence:this.tokenizer.decode(Ne,{skip_special_tokens:!0})}}))}return Array.isArray(H)?Ie:Ie[0]}}class v extends w{_key="generated_text";constructor(H){super(H)}async _call(H,de={}){Array.isArray(H)||(H=[H]),this.model.config.prefix&&(H=H.map(Ee=>this.model.config.prefix+Ee));const W=this.model.config.task_specific_params;W&&W[this.task]&&W[this.task].prefix&&(H=H.map(Ee=>W[this.task].prefix+Ee));const _e=this.tokenizer,Ie={padding:!0,truncation:!0};let Me;this instanceof E&&"_build_translation_inputs"in _e?Me=_e._build_translation_inputs(H,Ie,de):Me=_e(H,Ie);const ge=await this.model.generate({...Me,...de});return _e.batch_decode(ge,{skip_special_tokens:!0}).map(Ee=>({[this._key]:Ee}))}}class T extends v{_key="summary_text";constructor(H){super(H)}}class E extends v{_key="translation_text";constructor(H){super(H)}}function x(xe){return Array.isArray(xe)&&xe.every(H=>"role"in H&&"content"in H)}class S extends w{constructor(H){super(H)}async _call(H,de={}){let W=!1,_e=!1,Ie=de.add_special_tokens??(this.tokenizer.add_bos_token||this.tokenizer.add_eos_token)??!1,Me;if(typeof H=="string")Me=H=[H];else if(Array.isArray(H)&&H.every(be=>typeof be=="string"))W=!0,Me=H;else{if(x(H))H=[H];else if(Array.isArray(H)&&H.every(x))W=!0;else throw new Error("Input must be a string, an array of strings, a Chat, or an array of Chats");_e=!0,Me=H.map(be=>this.tokenizer.apply_chat_template(be,{tokenize:!1,add_generation_prompt:!0})),Ie=!1}const ge=_e?!1:de.return_full_text??!0;this.tokenizer.padding_side="left";const Ee=this.tokenizer(Me,{add_special_tokens:Ie,padding:!0,truncation:!0}),we=await this.model.generate({...Ee,...de}),Ae=this.tokenizer.batch_decode(we,{skip_special_tokens:!0});let De;!ge&&Ee.input_ids.dims.at(-1)>0&&(De=this.tokenizer.batch_decode(Ee.input_ids,{skip_special_tokens:!0}).map(be=>be.length));const We=Array.from({length:H.length},be=>[]);for(let be=0;be<Ae.length;++be){const st=Math.floor(be/we.dims[0]*H.length);De&&(Ae[be]=Ae[be].slice(De[st])),We[st].push({generated_text:_e?[...H[st],{role:"assistant",content:Ae[be]}]:Ae[be]})}return!W&&We.length===1?We[0]:We}}class z extends w{constructor(H){super(H),this.label2id=Object.fromEntries(Object.entries(this.model.config.label2id).map(([de,W])=>[de.toLowerCase(),W])),this.entailment_id=this.label2id.entailment,this.entailment_id===void 0&&(console.warn("Could not find 'entailment' in label2id mapping. Using 2 as entailment_id."),this.entailment_id=2),this.contradiction_id=this.label2id.contradiction??this.label2id.not_entailment,this.contradiction_id===void 0&&(console.warn("Could not find 'contradiction' in label2id mapping. Using 0 as contradiction_id."),this.contradiction_id=0)}async _call(H,de,{hypothesis_template:W="This example is {}.",multi_label:_e=!1}={}){const Ie=Array.isArray(H);Ie||(H=[H]),Array.isArray(de)||(de=[de]);const Me=de.map(we=>W.replace("{}",we)),ge=_e||de.length===1,Ee=[];for(const we of H){const Ae=[];for(const be of Me){const st=this.tokenizer(we,{text_pair:be,padding:!0,truncation:!0}),je=await this.model(st);ge?Ae.push([je.logits.data[this.contradiction_id],je.logits.data[this.entailment_id]]):Ae.push(je.logits.data[this.entailment_id])}const We=(ge?Ae.map(be=>(0,l.softmax)(be)[1]):(0,l.softmax)(Ae)).map((be,st)=>[be,st]).sort((be,st)=>st[0]-be[0]);Ee.push({sequence:we,labels:We.map(be=>de[be[1]]),scores:We.map(be=>be[0])})}return Ie?Ee:Ee[0]}}class D extends w{constructor(H){super(H)}async _call(H,{pooling:de="none",normalize:W=!1,quantize:_e=!1,precision:Ie="binary"}={}){const Me=this.tokenizer(H,{padding:!0,truncation:!0}),ge=await this.model(Me);let Ee=ge.last_hidden_state??ge.logits??ge.token_embeddings;switch(de){case"none":break;case"mean":Ee=(0,p.mean_pooling)(Ee,Me.attention_mask);break;case"first_token":case"cls":Ee=Ee.slice(null,0);break;case"last_token":case"eos":Ee=Ee.slice(null,-1);break;default:throw Error(`Pooling method '${de}' not supported.`)}return W&&(Ee=Ee.normalize(2,-1)),_e&&(Ee=(0,p.quantize_embeddings)(Ee,Ie)),Ee}}class K extends w{constructor(H){super(H)}async _call(H,{pool:de=null}={}){const W=await u(H),{pixel_values:_e}=await this.processor(W),Ie=await this.model({pixel_values:_e});let Me;if(de){if(!("pooler_output"in Ie))throw Error("No pooled output was returned. Make sure the model has a 'pooler' layer when using the 'pool' option.");Me=Ie.pooler_output}else Me=Ie.last_hidden_state??Ie.logits??Ie.image_embeds;return Me}}class q extends w{constructor(H){super(H)}async _call(H,{top_k:de=5}={}){const W=this.processor.feature_extractor.config.sampling_rate,_e=await _(H,W),Ie=this.model.config.id2label,Me=[];for(const ge of _e){const Ee=await this.processor(ge),Ae=(await this.model(Ee)).logits[0],De=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ae.data),Ae.dims),de),We=De[0].tolist(),st=De[1].tolist().map((je,Ne)=>({label:Ie?Ie[je]:`LABEL_${je}`,score:We[Ne]}));Me.push(st)}return Array.isArray(H)?Me:Me[0]}}class O extends w{constructor(H){super(H)}async _call(H,de,{hypothesis_template:W="This is a sound of {}."}={}){const _e=!Array.isArray(H);_e&&(H=[H]);const Ie=de.map(Ae=>W.replace("{}",Ae)),Me=this.tokenizer(Ie,{padding:!0,truncation:!0}),ge=this.processor.feature_extractor.config.sampling_rate,Ee=await _(H,ge),we=[];for(const Ae of Ee){const De=await this.processor(Ae),We=await this.model({...Me,...De}),be=(0,l.softmax)(We.logits_per_audio.data);we.push([...be].map((st,je)=>({score:st,label:de[je]})))}return _e?we[0]:we}}class Z extends w{constructor(H){super(H)}async _call(H,de={}){switch(this.model.config.model_type){case"whisper":case"lite-whisper":return this._call_whisper(H,de);case"wav2vec2":case"wav2vec2-bert":case"unispeech":case"unispeech-sat":case"hubert":return this._call_wav2vec2(H,de);case"moonshine":return this._call_moonshine(H,de);default:throw new Error(`AutomaticSpeechRecognitionPipeline does not support model type '${this.model.config.model_type}'.`)}}async _call_wav2vec2(H,de){de.language&&console.warn('`language` parameter is not yet supported for `wav2vec2` models, defaulting to "English".'),de.task&&console.warn('`task` parameter is not yet supported for `wav2vec2` models, defaulting to "transcribe".');const W=!Array.isArray(H);W&&(H=[H]);const _e=this.processor.feature_extractor.config.sampling_rate,Ie=await _(H,_e),Me=[];for(const ge of Ie){const Ee=await this.processor(ge),Ae=(await this.model(Ee)).logits[0],De=[];for(const be of Ae)De.push((0,l.max)(be.data)[1]);const We=this.tokenizer.decode(De);Me.push({text:We})}return W?Me[0]:Me}async _call_whisper(H,de){const W=de.return_timestamps??!1,_e=de.chunk_length_s??0,Ie=de.force_full_sequences??!1;let Me=de.stride_length_s??null;const ge={...de};W==="word"&&(ge.return_token_timestamps=!0,ge.return_timestamps=!1);const Ee=!Array.isArray(H);Ee&&(H=[H]);const we=this.processor.feature_extractor.config.chunk_length/this.model.config.max_source_positions,Ae=this.processor.feature_extractor.config.hop_length,De=this.processor.feature_extractor.config.sampling_rate,We=await _(H,De),be=[];for(const st of We){let je=[];if(_e>0){if(Me===null)Me=_e/6;else if(_e<=Me)throw Error("`chunk_length_s` must be larger than `stride_length_s`.");const He=De*_e,Je=De*Me,Ze=He-2*Je;let Ct=0;for(;;){const At=Ct+He,ft=st.subarray(Ct,At),Mr=await this.processor(ft),Gr=Ct===0,Or=At>=st.length;if(je.push({stride:[ft.length,Gr?0:Je,Or?0:Je],input_features:Mr.input_features,is_last:Or}),Or)break;Ct+=Ze}}else je=[{stride:[st.length,0,0],input_features:(await this.processor(st)).input_features,is_last:!0}];for(const He of je){ge.num_frames=Math.floor(He.stride[0]/Ae);const Je=await this.model.generate({inputs:He.input_features,...ge});W==="word"?(He.tokens=Je.sequences.tolist()[0],He.token_timestamps=Je.token_timestamps.tolist()[0].map(Ze=>(0,l.round)(Ze,2))):He.tokens=Je[0].tolist(),He.stride=He.stride.map(Ze=>Ze/De)}const[Ne,et]=this.tokenizer._decode_asr(je,{time_precision:we,return_timestamps:W,force_full_sequences:Ie});be.push({text:Ne,...et})}return Ee?be[0]:be}async _call_moonshine(H,de){const W=!Array.isArray(H);W&&(H=[H]);const _e=this.processor.feature_extractor.config.sampling_rate,Ie=await _(H,_e),Me=[];for(const ge of Ie){const Ee=await this.processor(ge),we=Math.floor(ge.length/_e)*6,Ae=await this.model.generate({max_new_tokens:we,...de,...Ee}),De=this.processor.batch_decode(Ae,{skip_special_tokens:!0})[0];Me.push({text:De})}return W?Me[0]:Me}}class Q extends w{constructor(H){super(H)}async _call(H,de={}){const W=Array.isArray(H),_e=await u(H),{pixel_values:Ie}=await this.processor(_e),Me=[];for(const ge of Ie){ge.dims=[1,...ge.dims];const Ee=await this.model.generate({inputs:ge,...de}),we=this.tokenizer.batch_decode(Ee,{skip_special_tokens:!0}).map(Ae=>({generated_text:Ae.trim()}));Me.push(we)}return W?Me:Me[0]}}class J extends w{constructor(H){super(H)}async _call(H,{top_k:de=5}={}){const W=await u(H),{pixel_values:_e}=await this.processor(W),Ie=await this.model({pixel_values:_e}),Me=this.model.config.id2label,ge=[];for(const Ee of Ie.logits){const we=await(0,p.topk)(new p.Tensor("float32",(0,l.softmax)(Ee.data),Ee.dims),de),Ae=we[0].tolist(),We=we[1].tolist().map((be,st)=>({label:Me?Me[be]:`LABEL_${be}`,score:Ae[st]}));ge.push(We)}return Array.isArray(H)?ge:ge[0]}}class re extends w{constructor(H){super(H),this.subtasks_mapping={panoptic:"post_process_panoptic_segmentation",instance:"post_process_instance_segmentation",semantic:"post_process_semantic_segmentation"}}async _call(H,{threshold:de=.5,mask_threshold:W=.5,overlap_mask_area_threshold:_e=.8,label_ids_to_fuse:Ie=null,target_sizes:Me=null,subtask:ge=null}={}){if(Array.isArray(H)&&H.length!==1)throw Error("Image segmentation pipeline currently only supports a batch size of 1.");const we=await u(H),Ae=we.map(He=>[He.height,He.width]),De=await this.processor(we),{inputNames:We,outputNames:be}=this.model.sessions.model;if(!We.includes("pixel_values")){if(We.length!==1)throw Error(`Expected a single input name, but got ${We.length} inputs: ${We}.`);const He=We[0];if(He in De)throw Error(`Input name ${He} already exists in the inputs.`);De[He]=De.pixel_values}const st=await this.model(De);let je=null;if(ge!==null)je=this.subtasks_mapping[ge];else if(this.processor.image_processor){for(const[He,Je]of Object.entries(this.subtasks_mapping))if(Je in this.processor.image_processor){je=this.processor.image_processor[Je].bind(this.processor.image_processor),ge=He;break}}const Ne=this.model.config.id2label,et=[];if(ge)if(ge==="panoptic"||ge==="instance"){const He=je(st,de,W,_e,Ie,Me??Ae)[0],Je=He.segmentation;for(const Ze of He.segments_info){const Ct=new Uint8ClampedArray(Je.data.length);for(let ft=0;ft<Je.data.length;++ft)Je.data[ft]===Ze.id&&(Ct[ft]=255);const At=new d.RawImage(Ct,Je.dims[1],Je.dims[0],1);et.push({score:Ze.score,label:Ne[Ze.label_id],mask:At})}}else if(ge==="semantic"){const{segmentation:He,labels:Je}=je(st,Me??Ae)[0];for(const Ze of Je){const Ct=new Uint8ClampedArray(He.data.length);for(let ft=0;ft<He.data.length;++ft)He.data[ft]===Ze&&(Ct[ft]=255);const At=new d.RawImage(Ct,He.dims[1],He.dims[0],1);et.push({score:null,label:Ne[Ze],mask:At})}}else throw Error(`Subtask ${ge} not supported.`);else{const Je=st[be[0]];for(let Ze=0;Ze<Ae.length;++Ze){const Ct=Ae[Ze],At=Je[Ze];At.data.some(Mr=>Mr<-1e-5||Mr>1+1e-5)&&At.sigmoid_();const ft=await d.RawImage.fromTensor(At.mul_(255).to("uint8")).resize(Ct[1],Ct[0]);et.push({label:null,score:null,mask:ft})}}return et}}class te extends re{constructor(H){super(H)}async _call(H,de={}){if(Array.isArray(H)&&H.length!==1)throw Error("Background removal pipeline currently only supports a batch size of 1.");const _e=await u(H),Ie=await super._call(H,de);return _e.map((ge,Ee)=>{const we=ge.clone();return we.putAlpha(Ie[Ee].mask),we})}}class ce extends w{constructor(H){super(H)}async _call(H,de,{hypothesis_template:W="This is a photo of {}"}={}){const _e=Array.isArray(H),Ie=await u(H),Me=de.map(We=>W.replace("{}",We)),ge=this.tokenizer(Me,{padding:this.model.config.model_type==="siglip"?"max_length":!0,truncation:!0}),{pixel_values:Ee}=await this.processor(Ie),we=await this.model({...ge,pixel_values:Ee}),Ae=this.model.config.model_type==="siglip"?We=>We.sigmoid().data:We=>(0,l.softmax)(We.data),De=[];for(const We of we.logits_per_image){const st=[...Ae(We)].map((je,Ne)=>({score:je,label:de[Ne]}));st.sort((je,Ne)=>Ne.score-je.score),De.push(st)}return _e?De:De[0]}}class ue extends w{constructor(H){super(H)}async _call(H,{threshold:de=.9,percentage:W=!1}={}){const _e=Array.isArray(H);if(_e&&H.length!==1)throw Error("Object detection pipeline currently only supports a batch size of 1.");const Ie=await u(H),Me=W?null:Ie.map(be=>[be.height,be.width]),{pixel_values:ge,pixel_mask:Ee}=await this.processor(Ie),we=await this.model({pixel_values:ge,pixel_mask:Ee}),Ae=this.processor.image_processor.post_process_object_detection(we,de,Me),De=this.model.config.id2label,We=Ae.map(be=>be.boxes.map((st,je)=>({score:be.scores[je],label:De[be.classes[je]],box:f(st,!W)})));return _e?We:We[0]}}class B extends w{constructor(H){super(H)}async _call(H,de,{threshold:W=.1,top_k:_e=null,percentage:Ie=!1}={}){const Me=Array.isArray(H),ge=await u(H),Ee=this.tokenizer(de,{padding:!0,truncation:!0}),we=await this.processor(ge),Ae=[];for(let De=0;De<ge.length;++De){const We=ge[De],be=Ie?null:[[We.height,We.width]],st=we.pixel_values[De].unsqueeze_(0),je=await this.model({...Ee,pixel_values:st});let Ne;if("post_process_grounded_object_detection"in this.processor){const et=this.processor.post_process_grounded_object_detection(je,Ee.input_ids,{box_threshold:W,text_threshold:W,target_sizes:be})[0];Ne=et.boxes.map((He,Je)=>({score:et.scores[Je],label:et.labels[Je],box:f(He,!Ie)}))}else{const et=this.processor.image_processor.post_process_object_detection(je,W,be,!0)[0];Ne=et.boxes.map((He,Je)=>({score:et.scores[Je],label:de[et.classes[Je]],box:f(He,!Ie)}))}Ne.sort((et,He)=>He.score-et.score),_e!==null&&(Ne=Ne.slice(0,_e)),Ae.push(Ne)}return Me?Ae:Ae[0]}}class F extends w{constructor(H){super(H)}async _call(H,de,W={}){const _e=(await u(H))[0],{pixel_values:Ie}=await this.processor(_e),Me=`<s_docvqa><s_question>${de}</s_question><s_answer>`,ge=this.tokenizer(Me,{add_special_tokens:!1,padding:!0,truncation:!0}).input_ids,Ee=await this.model.generate({inputs:Ie,max_length:this.model.config.decoder.max_position_embeddings,decoder_input_ids:ge,...W}),Ae=this.tokenizer.batch_decode(Ee)[0].match(/<s_answer>(.*?)<\/s_answer>/);let De=null;return Ae&&Ae.length>=2&&(De=Ae[1].trim()),[{answer:De}]}}class G extends w{DEFAULT_VOCODER_ID="Xenova/speecht5_hifigan";constructor(H){super(H),this.vocoder=H.vocoder??null}async _call(H,{speaker_embeddings:de=null}={}){return this.processor?this._call_text_to_spectrogram(H,{speaker_embeddings:de}):this._call_text_to_waveform(H)}async _call_text_to_waveform(H){const de=this.tokenizer(H,{padding:!0,truncation:!0}),{waveform:W}=await this.model(de),_e=this.model.config.sampling_rate;return new c.RawAudio(W.data,_e)}async _call_text_to_spectrogram(H,{speaker_embeddings:de}){if(this.vocoder||(console.log("No vocoder specified, using default HifiGan vocoder."),this.vocoder=await n.AutoModel.from_pretrained(this.DEFAULT_VOCODER_ID,{dtype:"fp32"})),(typeof de=="string"||de instanceof URL)&&(de=new Float32Array(await(await fetch(de)).arrayBuffer())),de instanceof Float32Array)de=new p.Tensor("float32",de,[1,de.length]);else if(!(de instanceof p.Tensor))throw new Error("Speaker embeddings must be a `Tensor`, `Float32Array`, `string`, or `URL`.");const{input_ids:W}=this.tokenizer(H,{padding:!0,truncation:!0}),{waveform:_e}=await this.model.generate_speech(W,de,{vocoder:this.vocoder}),Ie=this.processor.feature_extractor.config.sampling_rate;return new c.RawAudio(_e.data,Ie)}}class N extends w{constructor(H){super(H)}async _call(H){const de=await u(H),W=await this.processor(de),_e=await this.model(W),Ie=[];for(const Me of _e.reconstruction){const ge=Me.squeeze().clamp_(0,1).mul_(255).round_().to("uint8");Ie.push(d.RawImage.fromTensor(ge))}return Ie.length>1?Ie:Ie[0]}}class ae extends w{constructor(H){super(H)}async _call(H){const de=await u(H),W=await this.processor(de),{predicted_depth:_e}=await this.model(W),Ie=[];for(let Me=0;Me<de.length;++Me){const ge=_e[Me],[Ee,we]=ge.dims.slice(-2),[Ae,De]=de[Me].size,We=(await(0,p.interpolate_4d)(ge.view(1,1,Ee,we),{size:[De,Ae],mode:"bilinear"})).view(De,Ae),be=We.min().item(),st=We.max().item(),je=We.sub(be).div_(st-be).mul_(255).to("uint8").unsqueeze(0),Ne=d.RawImage.fromTensor(je);Ie.push({predicted_depth:We,depth:Ne})}return Ie.length>1?Ie:Ie[0]}}const ke=Object.freeze({"text-classification":{tokenizer:s.AutoTokenizer,pipeline:I,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-finetuned-sst-2-english"},type:"text"},"token-classification":{tokenizer:s.AutoTokenizer,pipeline:M,model:n.AutoModelForTokenClassification,default:{model:"Xenova/bert-base-multilingual-cased-ner-hrl"},type:"text"},"question-answering":{tokenizer:s.AutoTokenizer,pipeline:y,model:n.AutoModelForQuestionAnswering,default:{model:"Xenova/distilbert-base-cased-distilled-squad"},type:"text"},"fill-mask":{tokenizer:s.AutoTokenizer,pipeline:$,model:n.AutoModelForMaskedLM,default:{model:"Xenova/bert-base-uncased"},type:"text"},summarization:{tokenizer:s.AutoTokenizer,pipeline:T,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/distilbart-cnn-6-6"},type:"text"},translation:{tokenizer:s.AutoTokenizer,pipeline:E,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/t5-small"},type:"text"},"text2text-generation":{tokenizer:s.AutoTokenizer,pipeline:v,model:n.AutoModelForSeq2SeqLM,default:{model:"Xenova/flan-t5-small"},type:"text"},"text-generation":{tokenizer:s.AutoTokenizer,pipeline:S,model:n.AutoModelForCausalLM,default:{model:"Xenova/gpt2"},type:"text"},"zero-shot-classification":{tokenizer:s.AutoTokenizer,pipeline:z,model:n.AutoModelForSequenceClassification,default:{model:"Xenova/distilbert-base-uncased-mnli"},type:"text"},"audio-classification":{pipeline:q,model:n.AutoModelForAudioClassification,processor:i.AutoProcessor,default:{model:"Xenova/wav2vec2-base-superb-ks"},type:"audio"},"zero-shot-audio-classification":{tokenizer:s.AutoTokenizer,pipeline:O,model:n.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clap-htsat-unfused"},type:"multimodal"},"automatic-speech-recognition":{tokenizer:s.AutoTokenizer,pipeline:Z,model:[n.AutoModelForSpeechSeq2Seq,n.AutoModelForCTC],processor:i.AutoProcessor,default:{model:"Xenova/whisper-tiny.en"},type:"multimodal"},"text-to-audio":{tokenizer:s.AutoTokenizer,pipeline:G,model:[n.AutoModelForTextToWaveform,n.AutoModelForTextToSpectrogram],processor:[i.AutoProcessor,null],default:{model:"Xenova/speecht5_tts"},type:"text"},"image-to-text":{tokenizer:s.AutoTokenizer,pipeline:Q,model:n.AutoModelForVision2Seq,processor:i.AutoProcessor,default:{model:"Xenova/vit-gpt2-image-captioning"},type:"multimodal"},"image-classification":{pipeline:J,model:n.AutoModelForImageClassification,processor:i.AutoProcessor,default:{model:"Xenova/vit-base-patch16-224"},type:"multimodal"},"image-segmentation":{pipeline:re,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50-panoptic"},type:"multimodal"},"background-removal":{pipeline:te,model:[n.AutoModelForImageSegmentation,n.AutoModelForSemanticSegmentation,n.AutoModelForUniversalSegmentation],processor:i.AutoProcessor,default:{model:"Xenova/modnet"},type:"image"},"zero-shot-image-classification":{tokenizer:s.AutoTokenizer,pipeline:ce,model:n.AutoModel,processor:i.AutoProcessor,default:{model:"Xenova/clip-vit-base-patch32"},type:"multimodal"},"object-detection":{pipeline:ue,model:n.AutoModelForObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/detr-resnet-50"},type:"multimodal"},"zero-shot-object-detection":{tokenizer:s.AutoTokenizer,pipeline:B,model:n.AutoModelForZeroShotObjectDetection,processor:i.AutoProcessor,default:{model:"Xenova/owlvit-base-patch32"},type:"multimodal"},"document-question-answering":{tokenizer:s.AutoTokenizer,pipeline:F,model:n.AutoModelForDocumentQuestionAnswering,processor:i.AutoProcessor,default:{model:"Xenova/donut-base-finetuned-docvqa"},type:"multimodal"},"image-to-image":{pipeline:N,model:n.AutoModelForImageToImage,processor:i.AutoProcessor,default:{model:"Xenova/swin2SR-classical-sr-x2-64"},type:"image"},"depth-estimation":{pipeline:ae,model:n.AutoModelForDepthEstimation,processor:i.AutoProcessor,default:{model:"Xenova/dpt-large"},type:"image"},"feature-extraction":{tokenizer:s.AutoTokenizer,pipeline:D,model:n.AutoModel,default:{model:"Xenova/all-MiniLM-L6-v2"},type:"text"},"image-feature-extraction":{processor:i.AutoProcessor,pipeline:K,model:[n.AutoModelForImageFeatureExtraction,n.AutoModel],default:{model:"Xenova/vit-base-patch16-224-in21k"},type:"image"}}),ve=Object.freeze({"sentiment-analysis":"text-classification",ner:"token-classification",asr:"automatic-speech-recognition","text-to-speech":"text-to-audio",embeddings:"feature-extraction"});async function Fe(xe,H=null,{progress_callback:de=null,config:W=null,cache_dir:_e=null,local_files_only:Ie=!1,revision:Me="main",device:ge=null,dtype:Ee=null,subfolder:we="onnx",use_external_data_format:Ae=null,model_file_name:De=null,session_options:We={}}={}){xe=ve[xe]??xe;const be=ke[xe.split("_",1)[0]];if(!be)throw Error(`Unsupported pipeline: ${xe}. Must be one of [${Object.keys(ke)}]`);H||(H=be.default.model,console.log(`No model specified. Using default model: "${H}".`));const st={progress_callback:de,config:W,cache_dir:_e,local_files_only:Ie,revision:Me,device:ge,dtype:Ee,subfolder:we,use_external_data_format:Ae,model_file_name:De,session_options:We},je=new Map([["tokenizer",be.tokenizer],["model",be.model],["processor",be.processor]]),Ne=await Qe(je,H,st);Ne.task=xe,(0,a.dispatchCallback)(de,{status:"ready",task:xe,model:H});const et=be.pipeline;return new et(Ne)}async function Qe(xe,H,de){const W=Object.create(null),_e=[];for(const[Ie,Me]of xe.entries()){if(!Me)continue;let ge;Array.isArray(Me)?ge=new Promise(async(Ee,we)=>{let Ae;for(const De of Me){if(De===null){Ee(null);return}try{Ee(await De.from_pretrained(H,de));return}catch(We){if(We.message?.includes("Unsupported model type"))Ae=We;else if(We.message?.includes("Could not locate file"))Ae=We;else{we(We);return}}}we(Ae)}):ge=Me.from_pretrained(H,de),W[Ie]=ge,_e.push(ge)}await Promise.all(_e);for(const[Ie,Me]of Object.entries(W))W[Ie]=await Me;return W}}),"./src/tokenizers.js":((e,r,t)=>{t.r(r),t.d(r,{AlbertTokenizer:()=>Wt,AutoTokenizer:()=>Gn,BartTokenizer:()=>kt,BertTokenizer:()=>ks,BlenderbotSmallTokenizer:()=>Yt,BlenderbotTokenizer:()=>rt,BloomTokenizer:()=>Kr,CLIPTokenizer:()=>Us,CamembertTokenizer:()=>Se,CodeGenTokenizer:()=>Qr,CodeLlamaTokenizer:()=>ss,CohereTokenizer:()=>ms,ConvBertTokenizer:()=>Y,DebertaTokenizer:()=>C,DebertaV2Tokenizer:()=>X,DistilBertTokenizer:()=>he,ElectraTokenizer:()=>lt,Ernie4_5_Tokenizer:()=>fn,EsmTokenizer:()=>As,FalconTokenizer:()=>ps,GPT2Tokenizer:()=>St,GPTNeoXTokenizer:()=>Lr,GemmaTokenizer:()=>nr,Grok1Tokenizer:()=>qr,HerbertTokenizer:()=>j,LlamaTokenizer:()=>gr,M2M100Tokenizer:()=>ns,MBart50Tokenizer:()=>Rt,MBartTokenizer:()=>_r,MPNetTokenizer:()=>ds,MarianTokenizer:()=>Le,MgpstrTokenizer:()=>mn,MobileBertTokenizer:()=>Et,NllbTokenizer:()=>vr,NougatTokenizer:()=>Ds,PreTrainedTokenizer:()=>dt,Qwen2Tokenizer:()=>hs,RoFormerTokenizer:()=>ne,RobertaTokenizer:()=>ur,SiglipTokenizer:()=>zr,SpeechT5Tokenizer:()=>Ws,SqueezeBertTokenizer:()=>Is,T5Tokenizer:()=>Ge,TokenizerModel:()=>K,VitsTokenizer:()=>Gs,Wav2Vec2CTCTokenizer:()=>Re,WhisperTokenizer:()=>Fs,XLMRobertaTokenizer:()=>dr,XLMTokenizer:()=>tt,is_chinese_char:()=>$});var s=t("./src/utils/generic.js"),n=t("./src/utils/core.js"),i=t("./src/utils/hub.js"),o=t("./src/utils/maths.js"),a=t("./src/utils/tensor.js"),l=t("./src/utils/data-structures.js"),c=t("./node_modules/@huggingface/jinja/dist/index.js"),p=t("./src/models/whisper/common_whisper.js");async function d(le,k){const U=await Promise.all([(0,i.getModelJSON)(le,"tokenizer.json",!0,k),(0,i.getModelJSON)(le,"tokenizer_config.json",!0,k)]);return k.legacy!==null&&(U[1].legacy=k.legacy),U}function u(le,k){const U=[];let ee=0;for(const se of le.matchAll(k)){const me=se[0];ee<se.index&&U.push(le.slice(ee,se.index)),me.length>0&&U.push(me),ee=se.index+me.length}return ee<le.length&&U.push(le.slice(ee)),U}function _(le,k=!0){if(le.Regex!==void 0){let U=le.Regex.replace(/\\([#&~])/g,"$1");for(const[ee,se]of z)U=U.replaceAll(ee,se);return new RegExp(U,"gu")}else if(le.String!==void 0){const U=(0,n.escapeRegExp)(le.String);return new RegExp(k?U:`(${U})`,"gu")}else return console.warn("Unknown pattern type:",le),null}function f(le){return new Map(Object.entries(le))}function w(le){const k=le.dims;switch(k.length){case 1:return le.tolist();case 2:if(k[0]!==1)throw new Error("Unable to decode tensor with `batch size !== 1`. Use `tokenizer.batch_decode(...)` for batched inputs.");return le.tolist()[0];default:throw new Error(`Expected tensor to have 1-2 dimensions, got ${k.length}.`)}}function I(le){return le.replace(/ \./g,".").replace(/ \?/g,"?").replace(/ \!/g,"!").replace(/ ,/g,",").replace(/ \' /g,"'").replace(/ n\'t/g,"n't").replace(/ \'m/g,"'m").replace(/ \'s/g,"'s").replace(/ \'ve/g,"'ve").replace(/ \'re/g,"'re")}function M(le){return le.replace(new RegExp("\\p{M}","gu"),"")}function y(le){return M(le.toLowerCase())}function $(le){return le>=19968&&le<=40959||le>=13312&&le<=19903||le>=131072&&le<=173791||le>=173824&&le<=177983||le>=177984&&le<=178207||le>=178208&&le<=183983||le>=63744&&le<=64255||le>=194560&&le<=195103}function v(le,k,U){const ee=[];let se=0;for(;se<le.length;){if(ee.push(le[se]),(k.get(le[se])??U)!==U){++se;continue}for(;++se<le.length&&(k.get(le[se])??U)===U;)k.get(ee.at(-1))!==U&&(ee[ee.length-1]+=le[se])}return ee}function T(le){return le.match(/\S+/g)||[]}const E="\\p{P}\\u0021-\\u002F\\u003A-\\u0040\\u005B-\\u0060\\u007B-\\u007E",x=new RegExp(`^[${E}]+$`,"gu"),S=".,!?…。，、।۔،",z=new Map([["(?i:'s|'t|'re|'ve|'m|'ll|'d)","(?:'([sS]|[tT]|[rR][eE]|[vV][eE]|[mM]|[lL][lL]|[dD]))"],[` ?[^(\\s|[${S}])]+`,` ?[^\\s${S}]+`]]);class D{constructor(k){this.content=k.content,this.id=k.id,this.single_word=k.single_word??!1,this.lstrip=k.lstrip??!1,this.rstrip=k.rstrip??!1,this.special=k.special??!1,this.normalized=k.normalized??null}}class K extends s.Callable{constructor(k){super(),this.config=k,this.vocab=[],this.tokens_to_ids=new Map,this.unk_token_id=void 0,this.unk_token=void 0,this.end_of_word_suffix=void 0,this.fuse_unk=this.config.fuse_unk??!1}static fromConfig(k,...U){switch(k.type){case"WordPiece":return new q(k);case"Unigram":return new O(k,...U);case"BPE":return new J(k);default:if(k.vocab)return Array.isArray(k.vocab)?new O(k,...U):Object.hasOwn(k,"continuing_subword_prefix")&&Object.hasOwn(k,"unk_token")?Object.hasOwn(k,"merges")?new J(k):new q(k):new re(k,...U);throw new Error(`Unknown TokenizerModel type: ${k.type}`)}}_call(k){return k=this.encode(k),this.fuse_unk&&(k=v(k,this.tokens_to_ids,this.unk_token_id)),k}encode(k){throw Error("encode should be implemented in subclass.")}convert_tokens_to_ids(k){return k.map(U=>this.tokens_to_ids.get(U)??this.unk_token_id)}convert_ids_to_tokens(k){return k.map(U=>this.vocab[U]??this.unk_token)}}class q extends K{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.max_input_chars_per_word=k.max_input_chars_per_word??100,this.vocab=new Array(this.tokens_to_ids.size);for(const[U,ee]of this.tokens_to_ids)this.vocab[ee]=U}encode(k){const U=[];for(const ee of k){const se=[...ee];if(se.length>this.max_input_chars_per_word){U.push(this.unk_token);continue}let me=!1,Ce=0;const Ke=[];for(;Ce<se.length;){let Xe=se.length,Ye=null;for(;Ce<Xe;){let Ue=se.slice(Ce,Xe).join("");if(Ce>0&&(Ue=this.config.continuing_subword_prefix+Ue),this.tokens_to_ids.has(Ue)){Ye=Ue;break}--Xe}if(Ye===null){me=!0;break}Ke.push(Ye),Ce=Xe}me?U.push(this.unk_token):U.push(...Ke)}return U}}class O extends K{constructor(k,U){super(k);const ee=k.vocab.length;this.vocab=new Array(ee),this.scores=new Array(ee);for(let se=0;se<ee;++se)[this.vocab[se],this.scores[se]]=k.vocab[se];this.unk_token_id=k.unk_id,this.unk_token=this.vocab[k.unk_id],this.tokens_to_ids=new Map(this.vocab.map((se,me)=>[se,me])),this.bos_token=" ",this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.unk_token=this.vocab[this.unk_token_id],this.minScore=(0,o.min)(this.scores)[0],this.unk_score=this.minScore-10,this.scores[this.unk_token_id]=this.unk_score,this.trie=new l.CharTrie,this.trie.extend(this.vocab),this.fuse_unk=!0}populateNodes(k){const U=k.chars,ee=1;let se=0;for(;se<U.length;){let me=!1;const Ce=U.slice(se).join(""),Ke=this.trie.commonPrefixSearch(Ce);for(const Xe of Ke){const Ye=this.tokens_to_ids.get(Xe),Ue=this.scores[Ye],$t=(0,n.len)(Xe);k.insert(se,$t,Ue,Ye),!me&&$t===ee&&(me=!0)}me||k.insert(se,ee,this.unk_score,this.unk_token_id),se+=ee}}tokenize(k){const U=new l.TokenLattice(k,this.bos_token_id,this.eos_token_id);return this.populateNodes(U),U.tokens()}encode(k){const U=[];for(const ee of k){const se=this.tokenize(ee);U.push(...se)}return U}}const Z=(()=>{const le=[...Array.from({length:94},(se,me)=>me+33),...Array.from({length:12},(se,me)=>me+161),...Array.from({length:82},(se,me)=>me+174)],k=le.slice();let U=0;for(let se=0;se<256;++se)le.includes(se)||(le.push(se),k.push(256+U),U+=1);const ee=k.map(se=>String.fromCharCode(se));return Object.fromEntries(le.map((se,me)=>[se,ee[me]]))})(),Q=(0,n.reverseDictionary)(Z);class J extends K{constructor(k){super(k),this.tokens_to_ids=f(k.vocab),this.unk_token_id=this.tokens_to_ids.get(k.unk_token),this.unk_token=k.unk_token,this.vocab=new Array(this.tokens_to_ids.size);for(const[ee,se]of this.tokens_to_ids)this.vocab[se]=ee;const U=Array.isArray(k.merges[0]);this.merges=U?k.merges:k.merges.map(ee=>ee.split(" ",2)),this.bpe_ranks=new Map(this.merges.map((ee,se)=>[JSON.stringify(ee),se])),this.end_of_word_suffix=k.end_of_word_suffix,this.continuing_subword_suffix=k.continuing_subword_suffix??null,this.byte_fallback=this.config.byte_fallback??!1,this.byte_fallback&&(this.text_encoder=new TextEncoder),this.ignore_merges=this.config.ignore_merges??!1,this.max_length_to_cache=256,this.cache_capacity=1e4,this.cache=new l.LRUCache(this.cache_capacity)}clear_cache(){this.cache.clear()}bpe(k){if(k.length===0)return[];const U=this.cache.get(k);if(U!==void 0)return U;const ee=Array.from(k);this.end_of_word_suffix&&(ee[ee.length-1]+=this.end_of_word_suffix);let se=[];if(ee.length>1){const me=new l.PriorityQueue((Xe,Ye)=>Xe.score<Ye.score);let Ce={token:ee[0],bias:0,prev:null,next:null},Ke=Ce;for(let Xe=1;Xe<ee.length;++Xe){const Ye={bias:Xe/ee.length,token:ee[Xe],prev:Ke,next:null};Ke.next=Ye,this._add_node(me,Ke),Ke=Ye}for(;!me.isEmpty();){const Xe=me.pop();if(Xe.deleted||!Xe.next||Xe.next.deleted)continue;if(Xe.deleted=!0,Xe.next.deleted=!0,Xe.prev){const Ue={...Xe.prev};Xe.prev.deleted=!0,Xe.prev=Ue,Ue.prev?Ue.prev.next=Ue:Ce=Ue}const Ye={token:Xe.token+Xe.next.token,bias:Xe.bias,prev:Xe.prev,next:Xe.next.next};Ye.prev?(Ye.prev.next=Ye,this._add_node(me,Ye.prev)):Ce=Ye,Ye.next&&(Ye.next.prev=Ye,this._add_node(me,Ye))}for(let Xe=Ce;Xe!==null;Xe=Xe.next)se.push(Xe.token)}else se=ee;if(this.continuing_subword_suffix)for(let me=0;me<se.length-1;++me)se[me]+=this.continuing_subword_suffix;return k.length<this.max_length_to_cache&&this.cache.put(k,se),se}_add_node(k,U){const ee=this.bpe_ranks.get(JSON.stringify([U.token,U.next.token]));ee!==void 0&&(U.score=ee+U.bias,k.push(U))}encode(k){const U=[];for(const ee of k){if(this.ignore_merges&&this.tokens_to_ids.has(ee)){U.push(ee);continue}const se=this.bpe(ee);for(const me of se)if(this.tokens_to_ids.has(me))U.push(me);else if(this.byte_fallback){const Ce=Array.from(this.text_encoder.encode(me)).map(Ke=>`<0x${Ke.toString(16).toUpperCase().padStart(2,"0")}>`);Ce.every(Ke=>this.tokens_to_ids.has(Ke))?U.push(...Ce):U.push(this.unk_token)}else U.push(this.unk_token)}return U}}class re extends K{constructor(k,U){super(k),this.tokens_to_ids=f(U.target_lang?k.vocab[U.target_lang]:k.vocab),this.bos_token=U.bos_token,this.bos_token_id=this.tokens_to_ids.get(this.bos_token),this.eos_token=U.eos_token,this.eos_token_id=this.tokens_to_ids.get(this.eos_token),this.pad_token=U.pad_token,this.pad_token_id=this.tokens_to_ids.get(this.pad_token),this.unk_token=U.unk_token,this.unk_token_id=this.tokens_to_ids.get(this.unk_token),this.vocab=new Array(this.tokens_to_ids.size);for(const[ee,se]of this.tokens_to_ids)this.vocab[se]=ee}encode(k){return k}}class te extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"BertNormalizer":return new xe(k);case"Precompiled":return new Or(k);case"Sequence":return new Qe(k);case"Replace":return new ce(k);case"NFC":return new B(k);case"NFD":return new F(k);case"NFKC":return new G(k);case"NFKD":return new N(k);case"Strip":return new ae(k);case"StripAccents":return new ke(k);case"Lowercase":return new ve(k);case"Prepend":return new Fe(k);default:throw new Error(`Unknown Normalizer type: ${k.type}`)}}normalize(k){throw Error("normalize should be implemented in subclass.")}_call(k){return this.normalize(k)}}class ce extends te{normalize(k){const U=_(this.config.pattern);return U===null?k:k.replaceAll(U,this.config.content)}}class ue extends te{form=void 0;normalize(k){return k=k.normalize(this.form),k}}class B extends ue{form="NFC"}class F extends ue{form="NFD"}class G extends ue{form="NFKC"}class N extends ue{form="NFKD"}class ae extends te{normalize(k){return this.config.strip_left&&this.config.strip_right?k=k.trim():(this.config.strip_left&&(k=k.trimStart()),this.config.strip_right&&(k=k.trimEnd())),k}}class ke extends te{normalize(k){return k=M(k),k}}class ve extends te{normalize(k){return k=k.toLowerCase(),k}}class Fe extends te{normalize(k){return k=this.config.prepend+k,k}}class Qe extends te{constructor(k){super(k),this.normalizers=k.normalizers.map(U=>te.fromConfig(U))}normalize(k){return this.normalizers.reduce((U,ee)=>ee.normalize(U),k)}}class xe extends te{_tokenize_chinese_chars(k){const U=[];for(let ee=0;ee<k.length;++ee){const se=k[ee],me=se.charCodeAt(0);$(me)?(U.push(" "),U.push(se),U.push(" ")):U.push(se)}return U.join("")}stripAccents(k){return k.normalize("NFD").replace(new RegExp("\\p{Mn}","gu"),"")}_is_control(k){switch(k){case"	":case`
`:case"\r":return!1;default:return new RegExp("^\\p{Cc}|\\p{Cf}|\\p{Co}|\\p{Cs}$","u").test(k)}}_clean_text(k){const U=[];for(const ee of k){const se=ee.charCodeAt(0);se===0||se===65533||this._is_control(ee)||(/^\s$/.test(ee)?U.push(" "):U.push(ee))}return U.join("")}normalize(k){return this.config.clean_text&&(k=this._clean_text(k)),this.config.handle_chinese_chars&&(k=this._tokenize_chinese_chars(k)),this.config.lowercase?(k=k.toLowerCase(),this.config.strip_accents!==!1&&(k=this.stripAccents(k))):this.config.strip_accents&&(k=this.stripAccents(k)),k}}class H extends s.Callable{static fromConfig(k){if(k===null)return null;switch(k.type){case"BertPreTokenizer":return new de(k);case"Sequence":return new rs(k);case"Whitespace":return new Kt(k);case"WhitespaceSplit":return new Ir(k);case"Metaspace":return new Mr(k);case"ByteLevel":return new W(k);case"Split":return new _e(k);case"Punctuation":return new Ie(k);case"Digits":return new Me(k);case"Replace":return new Js(k);default:throw new Error(`Unknown PreTokenizer type: ${k.type}`)}}pre_tokenize_text(k,U){throw Error("pre_tokenize_text should be implemented in subclass.")}pre_tokenize(k,U){return(Array.isArray(k)?k.map(ee=>this.pre_tokenize_text(ee,U)):this.pre_tokenize_text(k,U)).flat()}_call(k,U){return this.pre_tokenize(k,U)}}class de extends H{constructor(k){super(),this.pattern=new RegExp(`[^\\s${E}]+|[${E}]`,"gu")}pre_tokenize_text(k,U){return k.trim().match(this.pattern)||[]}}class W extends H{constructor(k){super(),this.config=k,this.add_prefix_space=this.config.add_prefix_space,this.trim_offsets=this.config.trim_offsets,this.use_regex=this.config.use_regex??!0,this.pattern=new RegExp("'s|'t|'re|'ve|'m|'ll|'d| ?\\p{L}+| ?\\p{N}+| ?[^\\s\\p{L}\\p{N}]+|\\s+(?!\\S)|\\s+","gu"),this.byte_encoder=Z,this.text_encoder=new TextEncoder}pre_tokenize_text(k,U){return this.add_prefix_space&&!k.startsWith(" ")&&(k=" "+k),(this.use_regex?k.match(this.pattern)||[]:[k]).map(se=>Array.from(this.text_encoder.encode(se),me=>this.byte_encoder[me]).join(""))}}class _e extends H{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern,this.config.invert)}pre_tokenize_text(k,U){return this.pattern===null?[]:this.config.invert?k.match(this.pattern)||[]:this.config.behavior?.toLowerCase()==="removed"?k.split(this.pattern).filter(ee=>ee):u(k,this.pattern)}}class Ie extends H{constructor(k){super(),this.config=k,this.pattern=new RegExp(`[^${E}]+|[${E}]+`,"gu")}pre_tokenize_text(k,U){return k.match(this.pattern)||[]}}class Me extends H{constructor(k){super(),this.config=k;const U=`[^\\d]+|\\d${this.config.individual_digits?"":"+"}`;this.pattern=new RegExp(U,"gu")}pre_tokenize_text(k,U){return k.match(this.pattern)||[]}}class ge extends s.Callable{constructor(k){super(),this.config=k}static fromConfig(k){if(k===null)return null;switch(k.type){case"TemplateProcessing":return new Ae(k);case"ByteLevel":return new De(k);case"RobertaProcessing":return new we(k);case"BertProcessing":return new Ee(k);case"Sequence":return new We(k);default:throw new Error(`Unknown PostProcessor type: ${k.type}`)}}post_process(k,...U){throw Error("post_process should be implemented in subclass.")}_call(k,...U){return this.post_process(k,...U)}}class Ee extends ge{constructor(k){super(k),this.cls=k.cls[0],this.sep=k.sep[0]}post_process(k,U=null,{add_special_tokens:ee=!0}={}){ee&&(k=(0,n.mergeArrays)([this.cls],k,[this.sep]));let se=new Array(k.length).fill(0);if(U!==null){const me=ee&&this instanceof we?[this.sep]:[],Ce=ee?[this.sep]:[];k=(0,n.mergeArrays)(k,me,U,Ce),se=(0,n.mergeArrays)(se,new Array(U.length+me.length+Ce.length).fill(1))}return{tokens:k,token_type_ids:se}}}class we extends Ee{}class Ae extends ge{constructor(k){super(k),this.single=k.single,this.pair=k.pair}post_process(k,U=null,{add_special_tokens:ee=!0}={}){const se=U===null?this.single:this.pair;let me=[],Ce=[];for(const Ke of se)"SpecialToken"in Ke?ee&&(me.push(Ke.SpecialToken.id),Ce.push(Ke.SpecialToken.type_id)):"Sequence"in Ke&&(Ke.Sequence.id==="A"?(me=(0,n.mergeArrays)(me,k),Ce=(0,n.mergeArrays)(Ce,new Array(k.length).fill(Ke.Sequence.type_id))):Ke.Sequence.id==="B"&&(me=(0,n.mergeArrays)(me,U),Ce=(0,n.mergeArrays)(Ce,new Array(U.length).fill(Ke.Sequence.type_id))));return{tokens:me,token_type_ids:Ce}}}class De extends ge{post_process(k,U=null){return U&&(k=(0,n.mergeArrays)(k,U)),{tokens:k}}}class We extends ge{constructor(k){super(k),this.processors=k.processors.map(U=>ge.fromConfig(U))}post_process(k,U=null,ee={}){let se;for(const me of this.processors)if(me instanceof De)k=me.post_process(k).tokens,U&&(U=me.post_process(U).tokens);else{const Ce=me.post_process(k,U,ee);k=Ce.tokens,se=Ce.token_type_ids}return{tokens:k,token_type_ids:se}}}class be extends s.Callable{constructor(k){super(),this.config=k,this.added_tokens=[],this.end_of_word_suffix=null,this.trim_offsets=k.trim_offsets}static fromConfig(k){if(k===null)return null;switch(k.type){case"WordPiece":return new He(k);case"Metaspace":return new Gr(k);case"ByteLevel":return new Je(k);case"Replace":return new st(k);case"ByteFallback":return new je(k);case"Fuse":return new Ne(k);case"Strip":return new et(k);case"Sequence":return new Ct(k);case"CTC":return new Ze(k);case"BPEDecoder":return new At(k);default:throw new Error(`Unknown Decoder type: ${k.type}`)}}_call(k){return this.decode(k)}decode(k){return this.decode_chain(k).join("")}decode_chain(k){throw Error("`decode_chain` should be implemented in subclass.")}}class st extends be{decode_chain(k){const U=_(this.config.pattern);return U===null?k:k.map(ee=>ee.replaceAll(U,this.config.content))}}class je extends be{constructor(k){super(k),this.text_decoder=new TextDecoder}decode_chain(k){const U=[];let ee=[];for(const se of k){let me=null;if(se.length===6&&se.startsWith("<0x")&&se.endsWith(">")){const Ce=parseInt(se.slice(3,5),16);isNaN(Ce)||(me=Ce)}if(me!==null)ee.push(me);else{if(ee.length>0){const Ce=this.text_decoder.decode(Uint8Array.from(ee));U.push(Ce),ee=[]}U.push(se)}}if(ee.length>0){const se=this.text_decoder.decode(Uint8Array.from(ee));U.push(se),ee=[]}return U}}class Ne extends be{decode_chain(k){return[k.join("")]}}class et extends be{constructor(k){super(k),this.content=this.config.content,this.start=this.config.start,this.stop=this.config.stop}decode_chain(k){return k.map(U=>{let ee=0;for(let me=0;me<this.start&&U[me]===this.content;++me){ee=me+1;continue}let se=U.length;for(let me=0;me<this.stop;++me){const Ce=U.length-me-1;if(U[Ce]===this.content){se=Ce;continue}else break}return U.slice(ee,se)})}}class He extends be{constructor(k){super(k),this.cleanup=k.cleanup}decode_chain(k){return k.map((U,ee)=>(ee!==0&&(U.startsWith(this.config.prefix)?U=U.replace(this.config.prefix,""):U=" "+U),this.cleanup&&(U=I(U)),U))}}class Je extends be{constructor(k){super(k),this.byte_decoder=Q,this.text_decoder=new TextDecoder("utf-8",{fatal:!1,ignoreBOM:!0}),this.end_of_word_suffix=null}convert_tokens_to_string(k){const U=k.join(""),ee=new Uint8Array([...U].map(me=>this.byte_decoder[me]));return this.text_decoder.decode(ee)}decode_chain(k){const U=[];let ee=[];for(const se of k)this.added_tokens.find(me=>me.content===se)!==void 0?(ee.length>0&&(U.push(this.convert_tokens_to_string(ee)),ee=[]),U.push(se)):ee.push(se);return ee.length>0&&U.push(this.convert_tokens_to_string(ee)),U}}class Ze extends be{constructor(k){super(k),this.pad_token=this.config.pad_token,this.word_delimiter_token=this.config.word_delimiter_token,this.cleanup=this.config.cleanup}convert_tokens_to_string(k){if(k.length===0)return"";const U=[k[0]];for(let me=1;me<k.length;++me)k[me]!==U.at(-1)&&U.push(k[me]);let se=U.filter(me=>me!==this.pad_token).join("");return this.cleanup&&(se=I(se).replaceAll(this.word_delimiter_token," ").trim()),se}decode_chain(k){return[this.convert_tokens_to_string(k)]}}class Ct extends be{constructor(k){super(k),this.decoders=k.decoders.map(U=>be.fromConfig(U))}decode_chain(k){return this.decoders.reduce((U,ee)=>ee.decode_chain(U),k)}}class At extends be{constructor(k){super(k),this.suffix=this.config.suffix}decode_chain(k){return k.map((U,ee)=>U.replaceAll(this.suffix,ee===k.length-1?"":" "))}}class ft extends be{decode_chain(k){let U="";for(let ee=1;ee<k.length;ee+=2)U+=k[ee];return[U]}}class Mr extends H{constructor(k){super(),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement,this.strRep=k.str_rep||this.replacement,this.prepend_scheme=k.prepend_scheme??"always"}pre_tokenize_text(k,{section_index:U=void 0}={}){let ee=k.replaceAll(" ",this.strRep);return this.addPrefixSpace&&!ee.startsWith(this.replacement)&&(this.prepend_scheme==="always"||this.prepend_scheme==="first"&&U===0)&&(ee=this.strRep+ee),[ee]}}class Gr extends be{constructor(k){super(k),this.addPrefixSpace=k.add_prefix_space,this.replacement=k.replacement}decode_chain(k){const U=[];for(let ee=0;ee<k.length;++ee){let se=k[ee].replaceAll(this.replacement," ");this.addPrefixSpace&&ee==0&&se.startsWith(" ")&&(se=se.substring(1)),U.push(se)}return U}}class Or extends te{constructor(k){super(k),this.charsmap=k.precompiled_charsmap}normalize(k){return k=k.replace(/[\u0001-\u0008\u000B\u000E-\u001F\u007F\u008F\u009F]/gm,""),k=k.replace(/[\u0009\u000A\u000C\u000D\u00A0\u1680\u2000-\u200F\u2028\u2029\u202F\u205F\u2581\u3000\uFEFF\uFFFD]/gm," "),k.includes("～")?k=k.split("～").map(ee=>ee.normalize("NFKC")).join("～"):k=k.normalize("NFKC"),k}}class rs extends H{constructor(k){super(),this.tokenizers=k.pretokenizers.map(U=>H.fromConfig(U))}pre_tokenize_text(k,U){return this.tokenizers.reduce((ee,se)=>se.pre_tokenize(ee,U),[k])}}class Kt extends H{constructor(k){super()}pre_tokenize_text(k,U){return k.match(/\w+|[^\w\s]+/g)||[]}}class Ir extends H{constructor(k){super()}pre_tokenize_text(k,U){return T(k)}}class Js extends H{constructor(k){super(),this.config=k,this.pattern=_(this.config.pattern),this.content=this.config.content}pre_tokenize_text(k,U){return this.pattern===null?[k]:[k.replaceAll(this.pattern,this.config.content)]}}const Zs=["bos_token","eos_token","unk_token","sep_token","pad_token","cls_token","mask_token"];function js(le,k,U,ee){for(const se of Object.keys(le)){const me=k-le[se].length,Ce=U(se),Ke=new Array(me).fill(Ce);le[se]=ee==="right"?(0,n.mergeArrays)(le[se],Ke):(0,n.mergeArrays)(Ke,le[se])}}function Vs(le,k){for(const U of Object.keys(le))le[U].length=k}class dt extends s.Callable{return_token_type_ids=!1;padding_side="right";constructor(k,U){super(),this.config=U,this.normalizer=te.fromConfig(k.normalizer),this.pre_tokenizer=H.fromConfig(k.pre_tokenizer),this.model=K.fromConfig(k.model,U),this.post_processor=ge.fromConfig(k.post_processor),this.decoder=be.fromConfig(k.decoder),this.special_tokens=[],this.all_special_ids=[],this.added_tokens=[];for(const ee of k.added_tokens){const se=new D(ee);this.added_tokens.push(se),this.model.tokens_to_ids.set(se.content,se.id),this.model.vocab[se.id]=se.content,se.special&&(this.special_tokens.push(se.content),this.all_special_ids.push(se.id))}if(this.additional_special_tokens=U.additional_special_tokens??[],this.special_tokens.push(...this.additional_special_tokens),this.special_tokens=[...new Set(this.special_tokens)],this.decoder&&(this.decoder.added_tokens=this.added_tokens,this.decoder.end_of_word_suffix=this.model.end_of_word_suffix),this.added_tokens_splitter=new l.DictionarySplitter(this.added_tokens.map(ee=>ee.content)),this.added_tokens_map=new Map(this.added_tokens.map(ee=>[ee.content,ee])),this.mask_token=this.getToken("mask_token"),this.mask_token_id=this.model.tokens_to_ids.get(this.mask_token),this.pad_token=this.getToken("pad_token","eos_token"),this.pad_token_id=this.model.tokens_to_ids.get(this.pad_token),this.sep_token=this.getToken("sep_token"),this.sep_token_id=this.model.tokens_to_ids.get(this.sep_token),this.unk_token=this.getToken("unk_token"),this.unk_token_id=this.model.tokens_to_ids.get(this.unk_token),this.bos_token=this.getToken("bos_token"),this.bos_token_id=this.model.tokens_to_ids.get(this.bos_token),this.eos_token=this.getToken("eos_token"),this.eos_token_id=this.model.tokens_to_ids.get(this.eos_token),this.model_max_length=U.model_max_length,this.remove_space=U.remove_space,this.clean_up_tokenization_spaces=U.clean_up_tokenization_spaces??!0,this.do_lowercase_and_remove_accent=U.do_lowercase_and_remove_accent??!1,U.padding_side&&(this.padding_side=U.padding_side),this.add_bos_token=U.add_bos_token,this.add_eos_token=U.add_eos_token,this.legacy=!1,this.chat_template=U.chat_template??null,Array.isArray(this.chat_template)){const ee=Object.create(null);for(const{name:se,template:me}of this.chat_template){if(typeof se!="string"||typeof me!="string")throw new Error('Chat template must be a list of objects with "name" and "template" properties');ee[se]=me}this.chat_template=ee}this._compiled_template_cache=new Map}getToken(...k){for(const U of k){const ee=this.config[U];if(ee)if(typeof ee=="object"){if(ee.__type==="AddedToken")return ee.content;throw Error(`Unknown token: ${ee}`)}else return ee}return null}static async from_pretrained(k,{progress_callback:U=null,config:ee=null,cache_dir:se=null,local_files_only:me=!1,revision:Ce="main",legacy:Ke=null}={}){const Xe=await d(k,{progress_callback:U,config:ee,cache_dir:se,local_files_only:me,revision:Ce,legacy:Ke});return new this(...Xe)}_call(k,{text_pair:U=null,add_special_tokens:ee=!0,padding:se=!1,truncation:me=null,max_length:Ce=null,return_tensor:Ke=!0,return_token_type_ids:Xe=null}={}){const Ye=Array.isArray(k);let Ue;if(Ye){if(k.length===0)throw Error("text array must be non-empty");if(U!==null){if(Array.isArray(U)){if(k.length!==U.length)throw Error("text and text_pair must have the same length")}else throw Error("text_pair must also be an array");Ue=k.map((wt,rr)=>this._encode_plus(wt,{text_pair:U[rr],add_special_tokens:ee,return_token_type_ids:Xe}))}else Ue=k.map(wt=>this._encode_plus(wt,{add_special_tokens:ee,return_token_type_ids:Xe}))}else{if(k==null)throw Error("text may not be null or undefined");if(Array.isArray(U))throw Error("When specifying `text_pair`, since `text` is a string, `text_pair` must also be a string (i.e., not an array).");Ue=[this._encode_plus(k,{text_pair:U,add_special_tokens:ee,return_token_type_ids:Xe})]}if(Ce===null?Ce=this.model_max_length:me===null&&(se===!0?(console.warn("`max_length` is ignored when `padding: true` and there is no truncation strategy. To pad to max length, use `padding: 'max_length'`."),Ce=this.model_max_length):se===!1&&(console.warn("Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation: true` to explicitly truncate examples to max length."),me=!0)),se===!0&&(Ce=Math.min((0,o.max)(Ue.map(wt=>wt.input_ids.length))[0],Ce??1/0)),Ce=Math.min(Ce,this.model_max_length??1/0),se||me)for(let wt=0;wt<Ue.length;++wt)Ue[wt].input_ids.length!==Ce&&(Ue[wt].input_ids.length>Ce?me&&Vs(Ue[wt],Ce):se&&js(Ue[wt],Ce,rr=>rr==="input_ids"?this.pad_token_id:0,this.padding_side));const $t={};if(Ke){if(!(se&&me)&&Ue.some(rr=>{for(const xr of Object.keys(rr))if(rr[xr].length!==Ue[0][xr]?.length)return!0;return!1}))throw Error("Unable to create tensor, you should probably activate truncation and/or padding with 'padding=true' and 'truncation=true' to have batched tensors with the same length.");const wt=[Ue.length,Ue[0].input_ids.length];for(const rr of Object.keys(Ue[0]))$t[rr]=new a.Tensor("int64",BigInt64Array.from(Ue.flatMap(xr=>xr[rr]).map(BigInt)),wt)}else{for(const wt of Object.keys(Ue[0]))$t[wt]=Ue.map(rr=>rr[wt]);if(!Ye)for(const wt of Object.keys($t))$t[wt]=$t[wt][0]}return $t}_encode_text(k){if(k===null)return null;const U=this.added_tokens_splitter.split(k);for(let se=0;se<U.length;++se){const me=this.added_tokens_map.get(U[se]);me&&(me.lstrip&&se>0&&(U[se-1]=U[se-1].trimEnd()),me.rstrip&&se<U.length-1&&(U[se+1]=U[se+1].trimStart()))}return U.flatMap((se,me)=>{if(se.length===0)return[];if(this.added_tokens_map.has(se))return[se];if(this.remove_space===!0&&(se=se.trim().split(/\s+/).join(" ")),this.do_lowercase_and_remove_accent&&(se=y(se)),this.normalizer!==null&&(se=this.normalizer(se)),se.length===0)return[];const Ce=this.pre_tokenizer!==null?this.pre_tokenizer(se,{section_index:me}):[se];return this.model(Ce)})}_encode_plus(k,{text_pair:U=null,add_special_tokens:ee=!0,return_token_type_ids:se=null}={}){const{tokens:me,token_type_ids:Ce}=this._tokenize_helper(k,{pair:U,add_special_tokens:ee}),Ke=this.model.convert_tokens_to_ids(me),Xe={input_ids:Ke,attention_mask:new Array(Ke.length).fill(1)};return(se??this.return_token_type_ids)&&Ce&&(Xe.token_type_ids=Ce),Xe}_tokenize_helper(k,{pair:U=null,add_special_tokens:ee=!1}={}){const se=this._encode_text(k),me=this._encode_text(U);return this.post_processor?this.post_processor(se,me,{add_special_tokens:ee}):{tokens:(0,n.mergeArrays)(se??[],me??[])}}tokenize(k,{pair:U=null,add_special_tokens:ee=!1}={}){return this._tokenize_helper(k,{pair:U,add_special_tokens:ee}).tokens}encode(k,{text_pair:U=null,add_special_tokens:ee=!0,return_token_type_ids:se=null}={}){return this._encode_plus(k,{text_pair:U,add_special_tokens:ee,return_token_type_ids:se}).input_ids}batch_decode(k,U={}){return k instanceof a.Tensor&&(k=k.tolist()),k.map(ee=>this.decode(ee,U))}decode(k,U={}){if(k instanceof a.Tensor&&(k=w(k)),!Array.isArray(k)||k.length===0||!(0,n.isIntegralNumber)(k[0]))throw Error("token_ids must be a non-empty array of integers.");return this.decode_single(k,U)}decode_single(k,{skip_special_tokens:U=!1,clean_up_tokenization_spaces:ee=null}){let se=this.model.convert_ids_to_tokens(k);U&&(se=se.filter(Ce=>!this.special_tokens.includes(Ce)));let me=this.decoder?this.decoder(se):se.join(" ");return this.decoder&&this.decoder.end_of_word_suffix&&(me=me.replaceAll(this.decoder.end_of_word_suffix," "),U&&(me=me.trim())),(ee??this.clean_up_tokenization_spaces)&&(me=I(me)),me}get_chat_template({chat_template:k=null,tools:U=null}={}){if(this.chat_template&&typeof this.chat_template=="object"){const ee=this.chat_template;if(k!==null&&Object.hasOwn(ee,k))k=ee[k];else if(k===null)if(U!==null&&"tool_use"in ee)k=ee.tool_use;else if("default"in ee)k=ee.default;else throw Error(`This model has multiple chat templates with no default specified! Please either pass a chat template or the name of the template you wish to use to the 'chat_template' argument. Available template names are ${Object.keys(ee).sort()}.`)}else if(k===null)if(this.chat_template)k=this.chat_template;else throw Error("Cannot use apply_chat_template() because tokenizer.chat_template is not set and no template argument was passed! For information about writing templates and setting the tokenizer.chat_template attribute, please see the documentation at https://huggingface.co/docs/transformers/main/en/chat_templating");return k}apply_chat_template(k,{tools:U=null,documents:ee=null,chat_template:se=null,add_generation_prompt:me=!1,tokenize:Ce=!0,padding:Ke=!1,truncation:Xe=!1,max_length:Ye=null,return_tensor:Ue=!0,return_dict:$t=!1,tokenizer_kwargs:wt={},...rr}={}){if(se=this.get_chat_template({chat_template:se,tools:U}),typeof se!="string")throw Error(`chat_template must be a string, but got ${typeof se}`);let xr=this._compiled_template_cache.get(se);xr===void 0&&(xr=new c.Template(se),this._compiled_template_cache.set(se,xr));const qt=Object.create(null);for(const Gt of Zs){const Vr=this.getToken(Gt);Vr&&(qt[Gt]=Vr)}const sr=xr.render({messages:k,add_generation_prompt:me,tools:U,documents:ee,...qt,...rr});if(Ce){const Gt=this._call(sr,{add_special_tokens:!1,padding:Ke,truncation:Xe,max_length:Ye,return_tensor:Ue,...wt});return $t?Gt:Gt.input_ids}return sr}}class ks extends dt{return_token_type_ids=!0}class Wt extends dt{return_token_type_ids=!0}class Et extends dt{return_token_type_ids=!0}class Is extends dt{return_token_type_ids=!0}class C extends dt{return_token_type_ids=!0}class X extends dt{return_token_type_ids=!0}class j extends dt{return_token_type_ids=!0}class Y extends dt{return_token_type_ids=!0}class ne extends dt{return_token_type_ids=!0}class he extends dt{}class Se extends dt{}class tt extends dt{return_token_type_ids=!0;constructor(k,U){super(k,U),console.warn('WARNING: `XLMTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}}class lt extends dt{return_token_type_ids=!0}class Ge extends dt{}class St extends dt{}class kt extends dt{}class _r extends dt{constructor(k,U){super(k,U),this.languageRegex=/^[a-z]{2}_[A-Z]{2}$/,this.language_codes=this.special_tokens.filter(ee=>this.languageRegex.test(ee)),this.lang_to_token=ee=>ee}_build_translation_inputs(k,U,ee){return pr(this,k,U,ee)}}class Rt extends _r{}class ur extends dt{}class Kr extends dt{}const Xt="▁";class gr extends dt{padding_side="left";constructor(k,U){super(k,U),this.legacy=U.legacy??!0,this.legacy||(this.normalizer=null,this.pre_tokenizer=new Mr({replacement:Xt,add_prefix_space:!0,prepend_scheme:"first"}))}_encode_text(k){if(k===null)return null;if(this.legacy||k.length===0)return super._encode_text(k);let U=super._encode_text(Xt+k.replaceAll(Xt," "));return U.length>1&&U[0]===Xt&&this.special_tokens.includes(U[1])&&(U=U.slice(1)),U}}class ss extends dt{}class dr extends dt{}class ds extends dt{}class ps extends dt{}class Lr extends dt{}class As extends dt{}class hs extends dt{}class nr extends dt{}class qr extends dt{}function pr(le,k,U,ee){if(!("language_codes"in le)||!Array.isArray(le.language_codes))throw new Error("Tokenizer must have `language_codes` attribute set and it should be an array of language ids.");if(!("languageRegex"in le)||!(le.languageRegex instanceof RegExp))throw new Error("Tokenizer must have `languageRegex` attribute set and it should be a regular expression.");if(!("lang_to_token"in le)||typeof le.lang_to_token!="function")throw new Error("Tokenizer must have `lang_to_token` attribute set and it should be a function.");const se=ee.src_lang,me=ee.tgt_lang;if(!le.language_codes.includes(me))throw new Error(`Target language code "${me}" is not valid. Must be one of: {${le.language_codes.join(", ")}}`);if(se!==void 0){if(!le.language_codes.includes(se))throw new Error(`Source language code "${se}" is not valid. Must be one of: {${le.language_codes.join(", ")}}`);for(const Ce of le.post_processor.config.single)if("SpecialToken"in Ce&&le.languageRegex.test(Ce.SpecialToken.id)){Ce.SpecialToken.id=le.lang_to_token(se);break}}return ee.forced_bos_token_id=le.model.convert_tokens_to_ids([le.lang_to_token(me)])[0],le._call(k,U)}class vr extends dt{constructor(k,U){super(k,U),this.languageRegex=/^[a-z]{3}_[A-Z][a-z]{3}$/,this.language_codes=this.special_tokens.filter(ee=>this.languageRegex.test(ee)),this.lang_to_token=ee=>ee}_build_translation_inputs(k,U,ee){return pr(this,k,U,ee)}}class ns extends dt{constructor(k,U){super(k,U),this.languageRegex=/^__[a-z]{2,3}__$/,this.language_codes=this.special_tokens.filter(ee=>this.languageRegex.test(ee)).map(ee=>ee.slice(2,-2)),this.lang_to_token=ee=>`__${ee}__`}_build_translation_inputs(k,U,ee){return pr(this,k,U,ee)}}class Fs extends dt{get timestamp_begin(){return this.model.convert_tokens_to_ids(["<|notimestamps|>"])[0]+1}_decode_asr(k,{return_timestamps:U=!1,return_language:ee=!1,time_precision:se=null,force_full_sequences:me=!0}={}){if(se===null)throw Error("Must specify time_precision");let Ce=null;const Ke=U==="word";function Xe(){return{language:Ce,timestamp:[null,null],text:""}}const Ye=[];let Ue=Xe(),$t=0;const wt=this.timestamp_begin,xr=wt+1500;let qt=[],sr=[],Gt=!1,Vr=null;const is=new Set(this.all_special_ids);for(const er of k){const hr=er.tokens,Br=Ke?er.token_timestamps:null;let Rr=null,fs=wt;if("stride"in er){const[Tr,Jt,mr]=er.stride;if($t-=Jt,Vr=Tr-mr,Jt&&(fs=Jt/se+wt),mr)for(let lr=hr.length-1;lr>=0;--lr){const Nr=Number(hr[lr]);if(Nr>=wt){if(Rr!==null&&(Nr-wt)*se<Vr)break;Rr=Nr}}}let wr=[],os=[];for(let Tr=0;Tr<hr.length;++Tr){const Jt=Number(hr[Tr]);if(is.has(Jt)){const mr=this.decode([Jt]),lr=p.WHISPER_LANGUAGE_MAPPING.get(mr.slice(2,-2));if(lr!==void 0){if(Ce!==null&&lr!==Ce&&!U){qt.push(wr);const Nr=this.findLongestCommonSequence(qt)[0],en=this.decode(Nr);Ue.text=en,Ye.push(Ue),qt=[],wr=[],Ue=Xe()}Ce=Ue.language=lr}}else if(Jt>=wt&&Jt<=xr){const mr=(Jt-wt)*se+$t,lr=(0,o.round)(mr,2);if(Rr!==null&&Jt>=Rr)Gt=!0;else if(Gt||qt.length>0&&Jt<fs)Gt=!1;else if(Ue.timestamp[0]===null)Ue.timestamp[0]=lr;else if(lr!==Ue.timestamp[0]){Ue.timestamp[1]=lr,qt.push(wr),Ke&&sr.push(os);const[Nr,en]=this.findLongestCommonSequence(qt,sr),Kn=this.decode(Nr);Ue.text=Kn,Ke&&(Ue.words=this.collateWordTimestamps(Nr,en,Ce)),Ye.push(Ue),qt=[],wr=[],sr=[],os=[],Ue=Xe()}}else if(wr.push(Jt),Ke){let mr=(0,o.round)(Br[Tr]+$t,2),lr;if(Tr+1<Br.length){lr=(0,o.round)(Br[Tr+1]+$t,2);const Nr=this.decode([Jt]);x.test(Nr)&&(lr=(0,o.round)(Math.min(mr+se,lr),2))}else lr=null;os.push([mr,lr])}}if("stride"in er){const[Tr,Jt,mr]=er.stride;$t+=Tr-mr}wr.length>0?(qt.push(wr),Ke&&sr.push(os)):qt.every(Tr=>Tr.length===0)&&(Ue=Xe(),qt=[],wr=[],sr=[],os=[])}if(qt.length>0){if(me&&U)throw new Error("Whisper did not predict an ending timestamp, which can happen if audio is cut off in the middle of a word. Also make sure WhisperTimeStampLogitsProcessor was used during generation.");const[er,hr]=this.findLongestCommonSequence(qt,sr),Br=this.decode(er);Ue.text=Br,Ke&&(Ue.words=this.collateWordTimestamps(er,hr,Ce)),Ye.push(Ue)}let Ar=Object.create(null);const Xr=Ye.map(er=>er.text).join("");if(U||ee){for(let er=0;er<Ye.length;++er){const hr=Ye[er];U||delete hr.timestamp,ee||delete hr.language}if(Ke){const er=[];for(const hr of Ye)for(const Br of hr.words)er.push(Br);Ar={chunks:er}}else Ar={chunks:Ye}}return[Xr,Ar]}findLongestCommonSequence(k,U=null){let ee=k[0],se=ee.length,me=[];const Ce=Array.isArray(U)&&U.length>0;let Ke=Ce?[]:null,Xe=Ce?U[0]:null;for(let Ye=1;Ye<k.length;++Ye){const Ue=k[Ye];let $t=0,wt=[se,se,0,0];const rr=Ue.length;for(let Ar=1;Ar<se+rr;++Ar){const Xr=Math.max(0,se-Ar),er=Math.min(se,se+rr-Ar),hr=ee.slice(Xr,er),Br=Math.max(0,Ar-se),Rr=Math.min(rr,Ar),fs=Ue.slice(Br,Rr);if(hr.length!==fs.length)throw new Error("There is a bug within whisper `decode_asr` function, please report it. Dropping to prevent bad inference.");let wr;Ce?wr=hr.filter((Jt,mr)=>Jt===fs[mr]&&Xe[Xr+mr]<=U[Ye][Br+mr]).length:wr=hr.filter((Jt,mr)=>Jt===fs[mr]).length;const os=Ar/1e4,Tr=wr/Ar+os;wr>1&&Tr>$t&&($t=Tr,wt=[Xr,er,Br,Rr])}const[xr,qt,sr,Gt]=wt,Vr=Math.floor((qt+xr)/2),is=Math.floor((Gt+sr)/2);me.push(...ee.slice(0,Vr)),ee=Ue.slice(is),se=ee.length,Ce&&(Ke.push(...Xe.slice(0,Vr)),Xe=U[Ye].slice(is))}return me.push(...ee),Ce?(Ke.push(...Xe),[me,Ke]):[me,[]]}collateWordTimestamps(k,U,ee){const[se,me,Ce]=this.combineTokensIntoWords(k,ee),Ke=[];for(let Xe=0;Xe<se.length;++Xe){const Ye=Ce[Xe];Ke.push({text:se[Xe],timestamp:[U[Ye.at(0)][0],U[Ye.at(-1)][1]]})}return Ke}combineTokensIntoWords(k,U,ee=`"'“¡¿([{-`,se=`"'.。,，!！?？:：”)]}、`){U=U??"english";let me,Ce,Ke;return["chinese","japanese","thai","lao","myanmar"].includes(U)?[me,Ce,Ke]=this.splitTokensOnUnicode(k):[me,Ce,Ke]=this.splitTokensOnSpaces(k),this.mergePunctuations(me,Ce,Ke,ee,se)}decode(k,U){let ee;return U?.decode_with_timestamps?(k instanceof a.Tensor&&(k=w(k)),ee=this.decodeWithTimestamps(k,U)):ee=super.decode(k,U),ee}decodeWithTimestamps(k,U){const ee=U?.time_precision??.02,se=Array.from(this.all_special_ids).at(-1)+1;let me=[[]];for(let Ce of k)if(Ce=Number(Ce),Ce>=se){const Ke=((Ce-se)*ee).toFixed(2);me.push(`<|${Ke}|>`),me.push([])}else me[me.length-1].push(Ce);return me=me.map(Ce=>typeof Ce=="string"?Ce:super.decode(Ce,U)),me.join("")}splitTokensOnUnicode(k){const U=this.decode(k,{decode_with_timestamps:!0}),ee="�",se=[],me=[],Ce=[];let Ke=[],Xe=[],Ye=0;for(let Ue=0;Ue<k.length;++Ue){const $t=k[Ue];Ke.push($t),Xe.push(Ue);const wt=this.decode(Ke,{decode_with_timestamps:!0});(!wt.includes(ee)||U[Ye+wt.indexOf(ee)]===ee)&&(se.push(wt),me.push(Ke),Ce.push(Xe),Ke=[],Xe=[],Ye+=wt.length)}return[se,me,Ce]}splitTokensOnSpaces(k){const[U,ee,se]=this.splitTokensOnUnicode(k),me=[],Ce=[],Ke=[],Xe=new RegExp(`^[${E}]$`,"gu");for(let Ye=0;Ye<U.length;++Ye){const Ue=U[Ye],$t=ee[Ye],wt=se[Ye],rr=$t[0]>=this.model.tokens_to_ids.get("<|endoftext|>"),xr=Ue.startsWith(" "),qt=Ue.trim(),sr=Xe.test(qt);if(rr||xr||sr||me.length===0)me.push(Ue),Ce.push($t),Ke.push(wt);else{const Gt=me.length-1;me[Gt]+=Ue,Ce[Gt].push(...$t),Ke[Gt].push(...wt)}}return[me,Ce,Ke]}mergePunctuations(k,U,ee,se,me){const Ce=structuredClone(k),Ke=structuredClone(U),Xe=structuredClone(ee);let Ye=Ce.length-2,Ue=Ce.length-1;for(;Ye>=0;)Ce[Ye].startsWith(" ")&&se.includes(Ce[Ye].trim())?(Ce[Ue]=Ce[Ye]+Ce[Ue],Ke[Ue]=(0,n.mergeArrays)(Ke[Ye],Ke[Ue]),Xe[Ue]=(0,n.mergeArrays)(Xe[Ye],Xe[Ue]),Ce[Ye]="",Ke[Ye]=[],Xe[Ye]=[]):Ue=Ye,--Ye;for(Ye=0,Ue=1;Ue<Ce.length;)!Ce[Ye].endsWith(" ")&&me.includes(Ce[Ue])?(Ce[Ye]+=Ce[Ue],Ke[Ye]=(0,n.mergeArrays)(Ke[Ye],Ke[Ue]),Xe[Ye]=(0,n.mergeArrays)(Xe[Ye],Xe[Ue]),Ce[Ue]="",Ke[Ue]=[],Xe[Ue]=[]):Ye=Ue,++Ue;return[Ce.filter($t=>$t),Ke.filter($t=>$t.length>0),Xe.filter($t=>$t.length>0)]}}class Qr extends dt{}class Us extends dt{}class zr extends dt{}class Le extends dt{constructor(k,U){super(k,U),this.languageRegex=/^(>>\w+<<)\s*/g,this.supported_language_codes=this.model.vocab.filter(ee=>this.languageRegex.test(ee)),console.warn('WARNING: `MarianTokenizer` is not yet supported by Hugging Face\'s "fast" tokenizers library. Therefore, you may experience slightly inaccurate results.')}_encode_text(k){if(k===null)return null;const[U,...ee]=k.trim().split(this.languageRegex);if(ee.length===0)return super._encode_text(U);if(ee.length===2){const[se,me]=ee;return this.supported_language_codes.includes(se)||console.warn(`Unsupported language code "${se}" detected, which may lead to unexpected behavior. Should be one of: ${JSON.stringify(this.supported_language_codes)}`),(0,n.mergeArrays)([se],super._encode_text(me))}}}class Re extends dt{}class rt extends dt{}class Yt extends dt{}class Ws extends dt{}class Ds extends dt{}class Gs extends dt{constructor(k,U){super(k,U),this.decoder=new ft({})}}class ms extends dt{}class mn extends dt{}class fn extends dt{}class Gn{static TOKENIZER_CLASS_MAPPING={T5Tokenizer:Ge,DistilBertTokenizer:he,CamembertTokenizer:Se,DebertaTokenizer:C,DebertaV2Tokenizer:X,BertTokenizer:ks,HerbertTokenizer:j,ConvBertTokenizer:Y,RoFormerTokenizer:ne,XLMTokenizer:tt,ElectraTokenizer:lt,MobileBertTokenizer:Et,SqueezeBertTokenizer:Is,AlbertTokenizer:Wt,GPT2Tokenizer:St,BartTokenizer:kt,MBartTokenizer:_r,MBart50Tokenizer:Rt,RobertaTokenizer:ur,WhisperTokenizer:Fs,CodeGenTokenizer:Qr,CLIPTokenizer:Us,SiglipTokenizer:zr,MarianTokenizer:Le,BloomTokenizer:Kr,NllbTokenizer:vr,M2M100Tokenizer:ns,LlamaTokenizer:gr,CodeLlamaTokenizer:ss,XLMRobertaTokenizer:dr,MPNetTokenizer:ds,FalconTokenizer:ps,GPTNeoXTokenizer:Lr,EsmTokenizer:As,Wav2Vec2CTCTokenizer:Re,BlenderbotTokenizer:rt,BlenderbotSmallTokenizer:Yt,SpeechT5Tokenizer:Ws,NougatTokenizer:Ds,VitsTokenizer:Gs,Qwen2Tokenizer:hs,GemmaTokenizer:nr,Grok1Tokenizer:qr,CohereTokenizer:ms,MgpstrTokenizer:mn,Ernie4_5_Tokenizer:fn,PreTrainedTokenizer:dt};static async from_pretrained(k,{progress_callback:U=null,config:ee=null,cache_dir:se=null,local_files_only:me=!1,revision:Ce="main",legacy:Ke=null}={}){const[Xe,Ye]=await d(k,{progress_callback:U,config:ee,cache_dir:se,local_files_only:me,revision:Ce,legacy:Ke}),Ue=Ye.tokenizer_class?.replace(/Fast$/,"")??"PreTrainedTokenizer";let $t=this.TOKENIZER_CLASS_MAPPING[Ue];return $t||(console.warn(`Unknown tokenizer class "${Ue}", attempting to construct from base class.`),$t=dt),new $t(Xe,Ye)}}}),"./src/utils/audio.js":((e,r,t)=>{t.r(r),t.d(r,{RawAudio:()=>q,hamming:()=>u,hanning:()=>d,mel_filter_bank:()=>$,read_audio:()=>c,spectrogram:()=>S,window_function:()=>z});var s=t("./src/utils/hub.js"),n=t("./src/utils/maths.js"),i=t("./src/utils/core.js"),o=t("./src/env.js"),a=t("./src/utils/tensor.js"),l=t("?7992");async function c(O,Z){if(typeof AudioContext>"u")throw Error("Unable to load audio from path/URL since `AudioContext` is not available in your environment. Instead, audio data should be passed directly to the pipeline/processor. For more information and some example code, see https://huggingface.co/docs/transformers.js/guides/node-audio-processing.");const Q=await(await(0,s.getFile)(O)).arrayBuffer(),J=new AudioContext({sampleRate:Z});typeof Z>"u"&&console.warn(`No sampling rate provided, using default of ${J.sampleRate}Hz.`);const re=await J.decodeAudioData(Q);let te;if(re.numberOfChannels===2){const ce=Math.sqrt(2),ue=re.getChannelData(0),B=re.getChannelData(1);te=new Float32Array(ue.length);for(let F=0;F<re.length;++F)te[F]=ce*(ue[F]+B[F])/2}else te=re.getChannelData(0);return te}function p(O,Z){if(O<1)return new Float64Array;if(O===1)return new Float64Array([1]);const Q=1-Z,J=2*Math.PI/(O-1),re=new Float64Array(O);for(let te=0;te<O;++te)re[te]=Z-Q*Math.cos(te*J);return re}function d(O){return p(O,.5)}function u(O){return p(O,.54)}const _={htk:O=>2595*Math.log10(1+O/700),kaldi:O=>1127*Math.log(1+O/700),slaney:(O,Z=1e3,Q=15,J=27/Math.log(6.4))=>O>=Z?Q+Math.log(O/Z)*J:3*O/200};function f(O,Z="htk"){const Q=_[Z];if(!Q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof O=="number"?Q(O):O.map(J=>Q(J))}const w={htk:O=>700*(10**(O/2595)-1),kaldi:O=>700*(Math.exp(O/1127)-1),slaney:(O,Z=1e3,Q=15,J=Math.log(6.4)/27)=>O>=Q?Z*Math.exp(J*(O-Q)):200*O/3};function I(O,Z="htk"){const Q=w[Z];if(!Q)throw new Error('mel_scale should be one of "htk", "slaney" or "kaldi".');return typeof O=="number"?Q(O):O.map(J=>Q(J))}function M(O,Z){const Q=Float64Array.from({length:Z.length-1},(ce,ue)=>Z[ue+1]-Z[ue]),J=Array.from({length:O.length},()=>new Array(Z.length));for(let ce=0;ce<O.length;++ce){const ue=J[ce];for(let B=0;B<Z.length;++B)ue[B]=Z[B]-O[ce]}const re=Z.length-2,te=Array.from({length:re},()=>new Array(O.length));for(let ce=0;ce<O.length;++ce){const ue=J[ce];for(let B=0;B<re;++B){const F=-ue[B]/Q[B],G=ue[B+2]/Q[B+1];te[B][ce]=Math.max(0,Math.min(F,G))}}return te}function y(O,Z,Q){const J=(Z-O)/(Q-1);return Float64Array.from({length:Q},(re,te)=>O+J*te)}function $(O,Z,Q,J,re,te=null,ce="htk",ue=!1){if(te!==null&&te!=="slaney")throw new Error('norm must be one of null or "slaney"');if(O<2)throw new Error(`Require num_frequency_bins: ${O} >= 2`);if(Q>J)throw new Error(`Require min_frequency: ${Q} <= max_frequency: ${J}`);const B=f(Q,ce),F=f(J,ce),G=y(B,F,Z+2);let N=I(G,ce),ae;if(ue){const ve=re/((O-1)*2);ae=f(Float64Array.from({length:O},(Fe,Qe)=>Qe*ve),ce),N=G}else ae=y(0,Math.floor(re/2),O);const ke=M(ae,N);if(te!==null&&te==="slaney")for(let ve=0;ve<Z;++ve){const Fe=ke[ve],Qe=2/(N[ve+2]-N[ve]);for(let xe=0;xe<O;++xe)Fe[xe]*=Qe}return ke}function v(O,Z,Q){const J=new O.constructor(O.length+Z+Q),re=O.length-1;for(let te=0;te<O.length;++te)J[Z+te]=O[te];for(let te=1;te<=Z;++te)J[Z-te]=O[(0,i.calculateReflectOffset)(te,re)];for(let te=1;te<=Q;++te)J[re+Z+te]=O[(0,i.calculateReflectOffset)(re-te,re)];return J}function T(O,Z,Q,J,re){if(Q<=0)throw new Error("reference must be greater than zero");if(J<=0)throw new Error("min_value must be greater than zero");Q=Math.max(J,Q);const te=Math.log10(Q);for(let ce=0;ce<O.length;++ce)O[ce]=Z*Math.log10(Math.max(J,O[ce])-te);if(re!==null){if(re<=0)throw new Error("db_range must be greater than zero");const ce=(0,n.max)(O)[0]-re;for(let ue=0;ue<O.length;++ue)O[ue]=Math.max(O[ue],ce)}return O}function E(O,Z=1,Q=1e-5,J=null){return T(O,20,Z,Q,J)}function x(O,Z=1,Q=1e-10,J=null){return T(O,10,Z,Q,J)}async function S(O,Z,Q,J,{fft_length:re=null,power:te=1,center:ce=!0,pad_mode:ue="reflect",onesided:B=!0,preemphasis:F=null,preemphasis_htk_flavor:G=!0,mel_filters:N=null,mel_floor:ae=1e-10,log_mel:ke=null,reference:ve=1,min_value:Fe=1e-10,db_range:Qe=null,remove_dc_offset:xe=null,min_num_frames:H=null,max_num_frames:de=null,do_pad:W=!0,transpose:_e=!1}={}){const Ie=Z.length;if(re===null&&(re=Q),Q>re)throw Error(`frame_length (${Q}) may not be larger than fft_length (${re})`);if(Ie!==Q)throw new Error(`Length of the window (${Ie}) must equal frame_length (${Q})`);if(J<=0)throw new Error("hop_length must be greater than zero");if(te===null&&N!==null)throw new Error("You have provided `mel_filters` but `power` is `None`. Mel spectrogram computation is not yet supported for complex-valued spectrogram. Specify `power` to fix this issue.");if(!G)throw new Error("`preemphasis_htk_flavor=false` is not currently supported.");if(ce){if(ue!=="reflect")throw new Error(`pad_mode="${ue}" not implemented yet.`);const et=Math.floor((re-1)/2)+1;O=v(O,et,et)}let Me=Math.floor(1+Math.floor((O.length-Q)/J));H!==null&&Me<H&&(Me=H);const ge=B?Math.floor(re/2)+1:re;let Ee=Me,we=Me;de!==null&&(de>Me?W&&(we=de):we=Ee=de);const Ae=new n.FFT(re),De=new Float64Array(re),We=new Float64Array(Ae.outputBufferSize),be=new Float32Array(ge*we);for(let et=0;et<Ee;++et){const He=et*J,Je=Math.min(O.length-He,Q);Je!==Q&&De.fill(0,0,Q);for(let Ze=0;Ze<Je;++Ze)De[Ze]=O[He+Ze];if(xe){let Ze=0;for(let At=0;At<Je;++At)Ze+=De[At];const Ct=Ze/Je;for(let At=0;At<Je;++At)De[At]-=Ct}if(F!==null){for(let Ze=Je-1;Ze>=1;--Ze)De[Ze]-=F*De[Ze-1];De[0]*=1-F}for(let Ze=0;Ze<Z.length;++Ze)De[Ze]*=Z[Ze];Ae.realTransform(We,De);for(let Ze=0;Ze<ge;++Ze){const Ct=Ze<<1;be[Ze*we+et]=We[Ct]**2+We[Ct+1]**2}}if(te!==null&&te!==2){const et=te/2;for(let He=0;He<be.length;++He)be[He]**=et}const st=N.length;let je=await(0,a.matmul)(new a.Tensor("float32",N.flat(),[st,ge]),new a.Tensor("float32",be,[ge,we]));_e&&(je=je.transpose(1,0));const Ne=je.data;for(let et=0;et<Ne.length;++et)Ne[et]=Math.max(ae,Ne[et]);if(te!==null&&ke!==null){const et=Math.min(Ne.length,Ee*st);switch(ke){case"log":for(let He=0;He<et;++He)Ne[He]=Math.log(Ne[He]);break;case"log10":for(let He=0;He<et;++He)Ne[He]=Math.log10(Ne[He]);break;case"dB":if(te===1)E(Ne,ve,Fe,Qe);else if(te===2)x(Ne,ve,Fe,Qe);else throw new Error(`Cannot use log_mel option '${ke}' with power ${te}`);break;default:throw new Error(`log_mel must be one of null, 'log', 'log10' or 'dB'. Got '${ke}'`)}}return je}function z(O,Z,{periodic:Q=!0,frame_length:J=null,center:re=!0}={}){const te=Q?O+1:O;let ce;switch(Z){case"boxcar":ce=new Float64Array(te).fill(1);break;case"hann":case"hann_window":ce=d(te);break;case"hamming":ce=u(te);break;case"povey":ce=d(te).map(ue=>Math.pow(ue,.85));break;default:throw new Error(`Unknown window type ${Z}.`)}if(Q&&(ce=ce.subarray(0,O)),J===null)return ce;if(O>J)throw new Error(`Length of the window (${O}) may not be larger than frame_length (${J})`);return ce}function D(O,Z){let Q=44;const J=new ArrayBuffer(Q+O.length*4),re=new DataView(J);K(re,0,"RIFF"),re.setUint32(4,36+O.length*4,!0),K(re,8,"WAVE"),K(re,12,"fmt "),re.setUint32(16,16,!0),re.setUint16(20,3,!0),re.setUint16(22,1,!0),re.setUint32(24,Z,!0),re.setUint32(28,Z*4,!0),re.setUint16(32,4,!0),re.setUint16(34,32,!0),K(re,36,"data"),re.setUint32(40,O.length*4,!0);for(let te=0;te<O.length;++te,Q+=4)re.setFloat32(Q,O[te],!0);return J}function K(O,Z,Q){for(let J=0;J<Q.length;++J)O.setUint8(Z+J,Q.charCodeAt(J))}class q{constructor(Z,Q){this.audio=Z,this.sampling_rate=Q}toWav(){return D(this.audio,this.sampling_rate)}toBlob(){const Z=this.toWav();return new Blob([Z],{type:"audio/wav"})}async save(Z){let Q;if(o.apis.IS_BROWSER_ENV){if(o.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save a file from a Web Worker.");Q=i.saveBlob}else if(o.apis.IS_FS_AVAILABLE)Q=async(J,re)=>{let te=await re.arrayBuffer();l.writeFileSync(J,Buffer.from(te))};else throw new Error("Unable to save because filesystem is disabled in this environment.");await Q(Z,this.toBlob())}}}),"./src/utils/constants.js":((e,r,t)=>{t.r(r),t.d(r,{CHAT_TEMPLATE_NAME:()=>l,CONFIG_NAME:()=>n,FEATURE_EXTRACTOR_NAME:()=>i,GENERATION_CONFIG_NAME:()=>c,GITHUB_ISSUE_URL:()=>s,IMAGE_PROCESSOR_NAME:()=>o,PROCESSOR_NAME:()=>a});const s="https://github.com/huggingface/transformers.js/issues/new/choose",n="config.json",i="preprocessor_config.json",o=i,a="processor_config.json",l="chat_template.jinja",c="generation_config.json"}),"./src/utils/core.js":((e,r,t)=>{t.r(r),t.d(r,{calculateDimensions:()=>c,calculateReflectOffset:()=>_,count:()=>M,dispatchCallback:()=>s,escapeRegExp:()=>i,isIntegralNumber:()=>a,isNullishDimension:()=>l,isTypedArray:()=>o,len:()=>I,mergeArrays:()=>d,pick:()=>w,pop:()=>p,product:()=>u,reverseDictionary:()=>n,saveBlob:()=>f});function s(y,$){y&&y($)}function n(y){return Object.fromEntries(Object.entries(y).map(([$,v])=>[v,$]))}function i(y){return y.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}function o(y){return y?.prototype?.__proto__?.constructor?.name==="TypedArray"}function a(y){return Number.isInteger(y)||typeof y=="bigint"}function l(y){return y==null||y===-1}function c(y){const $=[];let v=y;for(;Array.isArray(v);)$.push(v.length),v=v[0];return $}function p(y,$,v=void 0){const T=y[$];if(T!==void 0)return delete y[$],T;if(v===void 0)throw Error(`Key ${$} does not exist in object.`);return v}function d(...y){return Array.prototype.concat.apply([],y)}function u(...y){return y.reduce(($,v)=>$.flatMap(T=>v.map(E=>[T,E])))}function _(y,$){return Math.abs((y+$)%(2*$)-$)}function f(y,$){const v=URL.createObjectURL($),T=document.createElement("a");T.href=v,T.download=y,T.click(),T.remove(),URL.revokeObjectURL(v)}function w(y,$){return Object.assign({},...$.map(v=>{if(y[v]!==void 0)return{[v]:y[v]}}))}function I(y){let $=0;for(const v of y)++$;return $}function M(y,$){let v=0;for(const T of y)T===$&&++v;return v}}),"./src/utils/data-structures.js":((e,r,t)=>{t.r(r),t.d(r,{CharTrie:()=>n,DictionarySplitter:()=>l,LRUCache:()=>c,PriorityQueue:()=>s,TokenLattice:()=>o});class s{constructor(d=(_,f)=>_>f,u=1/0){this._heap=[],this._comparator=d,this._maxSize=u}get size(){return this._heap.length}isEmpty(){return this.size===0}peek(){return this._heap[0]}push(...d){return this.extend(d)}extend(d){for(const u of d)if(this.size<this._maxSize)this._heap.push(u),this._siftUp();else{const _=this._smallest();this._comparator(u,this._heap[_])&&(this._heap[_]=u,this._siftUpFrom(_))}return this.size}pop(){const d=this.peek(),u=this.size-1;return u>0&&this._swap(0,u),this._heap.pop(),this._siftDown(),d}replace(d){const u=this.peek();return this._heap[0]=d,this._siftDown(),u}_parent(d){return(d+1>>>1)-1}_left(d){return(d<<1)+1}_right(d){return d+1<<1}_greater(d,u){return this._comparator(this._heap[d],this._heap[u])}_swap(d,u){const _=this._heap[d];this._heap[d]=this._heap[u],this._heap[u]=_}_siftUp(){this._siftUpFrom(this.size-1)}_siftUpFrom(d){for(;d>0&&this._greater(d,this._parent(d));)this._swap(d,this._parent(d)),d=this._parent(d)}_siftDown(){let d=0;for(;this._left(d)<this.size&&this._greater(this._left(d),d)||this._right(d)<this.size&&this._greater(this._right(d),d);){const u=this._right(d)<this.size&&this._greater(this._right(d),this._left(d))?this._right(d):this._left(d);this._swap(d,u),d=u}}_smallest(){return 2**Math.floor(Math.log2(this.size))-1}}class n{constructor(){this.root=i.default()}extend(d){for(const u of d)this.push(u)}push(d){let u=this.root;for(const _ of d){let f=u.children.get(_);f===void 0&&(f=i.default(),u.children.set(_,f)),u=f}u.isLeaf=!0}*commonPrefixSearch(d){let u=this.root;if(u===void 0)return;let _="";for(const f of d){if(_+=f,u=u.children.get(f),u===void 0)return;u.isLeaf&&(yield _)}}}class i{constructor(d,u){this.isLeaf=d,this.children=u}static default(){return new i(!1,new Map)}}class o{constructor(d,u,_){this.chars=Array.from(d),this.len=this.chars.length,this.bosTokenId=u,this.eosTokenId=_,this.nodes=[],this.beginNodes=Array.from({length:this.len+1},()=>[]),this.endNodes=Array.from({length:this.len+1},()=>[]);const f=new a(this.bosTokenId,0,0,0,0),w=new a(this.eosTokenId,1,this.len,0,0);this.nodes.push(f.clone()),this.nodes.push(w.clone()),this.beginNodes[this.len].push(w),this.endNodes[0].push(f)}insert(d,u,_,f){const w=this.nodes.length,I=new a(f,w,d,u,_);this.beginNodes[d].push(I),this.endNodes[d+u].push(I),this.nodes.push(I)}viterbi(){const d=this.len;let u=0;for(;u<=d;){if(this.beginNodes[u].length==0)return[];for(let M of this.beginNodes[u]){M.prev=null;let y=0,$=null;for(let v of this.endNodes[u]){const T=v.backtraceScore+M.score;($===null||T>y)&&($=v.clone(),y=T)}if($!==null)M.prev=$,M.backtraceScore=y;else return[]}++u}const _=[],w=this.beginNodes[d][0].prev;if(w===null)return[];let I=w.clone();for(;I.prev!==null;)_.push(I.clone()),I=I.clone().prev.clone();return _.reverse(),_}piece(d){return this.chars.slice(d.pos,d.pos+d.length).join("")}tokens(){return this.viterbi().map(u=>this.piece(u))}tokenIds(){return this.viterbi().map(u=>u.tokenId)}}class a{constructor(d,u,_,f,w){this.tokenId=d,this.nodeId=u,this.pos=_,this.length=f,this.score=w,this.prev=null,this.backtraceScore=0}clone(){const d=new a(this.tokenId,this.nodeId,this.pos,this.length,this.score);return d.prev=this.prev,d.backtraceScore=this.backtraceScore,d}}class l{constructor(d){this.trie=this._buildTrie(d)}_buildTrie(d){const u=Object.create(null);for(const _ of d){let f=u;for(let w=0;w<_.length;++w)f=f[_[w]]??=Object.create(null);f.end=_}return u}split(d){const u=[],_=d.length;let f=0,w=0;for(;w<_;){let I=this.trie,M=null,y=w;for(;y<_&&(I=I[d[y]]);)I.end&&(M=I.end),++y;M?(w>f&&u.push(d.slice(f,w)),u.push(M),w+=M.length,f=w):++w}return f<_&&u.push(d.slice(f)),u}}class c{constructor(d){this.capacity=d,this.cache=new Map}get(d){if(!this.cache.has(d))return;const u=this.cache.get(d);return this.cache.delete(d),this.cache.set(d,u),u}put(d,u){this.cache.has(d)&&this.cache.delete(d),this.cache.set(d,u),this.cache.size>this.capacity&&this.cache.delete(this.cache.keys().next().value)}clear(){this.cache.clear()}}}),"./src/utils/devices.js":((e,r,t)=>{t.r(r),t.d(r,{DEVICE_TYPES:()=>s});const s=Object.freeze({auto:"auto",gpu:"gpu",cpu:"cpu",wasm:"wasm",webgpu:"webgpu",cuda:"cuda",dml:"dml",webnn:"webnn","webnn-npu":"webnn-npu","webnn-gpu":"webnn-gpu","webnn-cpu":"webnn-cpu"})}),"./src/utils/dtypes.js":((e,r,t)=>{t.r(r),t.d(r,{DATA_TYPES:()=>o,DEFAULT_DEVICE_DTYPE_MAPPING:()=>a,DEFAULT_DTYPE_SUFFIX_MAPPING:()=>l,isWebGpuFp16Supported:()=>i});var s=t("./src/env.js"),n=t("./src/utils/devices.js");const i=(function(){let c;return async function(){if(c===void 0)if(!s.apis.IS_WEBGPU_AVAILABLE)c=!1;else try{c=(await navigator.gpu.requestAdapter()).features.has("shader-f16")}catch{c=!1}return c}})(),o=Object.freeze({auto:"auto",fp32:"fp32",fp16:"fp16",q8:"q8",int8:"int8",uint8:"uint8",q4:"q4",bnb4:"bnb4",q4f16:"q4f16"}),a=Object.freeze({[n.DEVICE_TYPES.wasm]:o.q8}),l=Object.freeze({[o.fp32]:"",[o.fp16]:"_fp16",[o.int8]:"_int8",[o.uint8]:"_uint8",[o.q8]:"_quantized",[o.q4]:"_q4",[o.q4f16]:"_q4f16",[o.bnb4]:"_bnb4"})}),"./src/utils/generic.js":((e,r,t)=>{t.r(r),t.d(r,{Callable:()=>s});const s=class{constructor(){let n=function(...i){return n._call(...i)};return Object.setPrototypeOf(n,new.target.prototype)}_call(...n){throw Error("Must implement _call method in subclass")}}}),"./src/utils/hub.js":((e,r,t)=>{t.r(r),t.d(r,{MAX_EXTERNAL_DATA_CHUNKS:()=>a,getFile:()=>_,getModelFile:()=>y,getModelJSON:()=>v,getModelText:()=>$});var s=t("?7992"),n=t("?5af5"),i=t("./src/env.js"),o=t("./src/utils/core.js");const a=100,l={txt:"text/plain",html:"text/html",css:"text/css",js:"text/javascript",json:"application/json",png:"image/png",jpg:"image/jpeg",jpeg:"image/jpeg",gif:"image/gif"};class c{constructor(S){if(this.filePath=S,this.headers=new Headers,this.exists=s.existsSync(S),this.exists){this.status=200,this.statusText="OK";let z=s.statSync(S);this.headers.set("content-length",z.size.toString()),this.updateContentType();const D=s.createReadStream(S);this.body=new ReadableStream({start(K){D.on("data",q=>K.enqueue(q)),D.on("end",()=>K.close()),D.on("error",q=>K.error(q))},cancel(){D.destroy()}})}else this.status=404,this.statusText="Not Found",this.body=null}updateContentType(){const S=this.filePath.toString().split(".").pop().toLowerCase();this.headers.set("content-type",l[S]??"application/octet-stream")}clone(){let S=new c(this.filePath);return S.exists=this.exists,S.status=this.status,S.statusText=this.statusText,S.headers=new Headers(this.headers),S}async arrayBuffer(){return(await s.promises.readFile(this.filePath)).buffer}async blob(){const S=await s.promises.readFile(this.filePath);return new Blob([S],{type:this.headers.get("content-type")})}async text(){return await s.promises.readFile(this.filePath,"utf8")}async json(){return JSON.parse(await this.text())}}function p(x,S=null,z=null){let D;try{D=new URL(x)}catch{return!1}return!(S&&!S.includes(D.protocol)||z&&!z.includes(D.hostname))}const d=/^(\b[\w\-.]+\b\/)?\b[\w\-.]{1,96}\b$/;function u(x){return!(!d.test(x)||x.includes("..")||x.includes("--")||x.endsWith(".git")||x.endsWith(".ipynb"))}async function _(x){if(i.env.useFS&&!p(x,["http:","https:","blob:"]))return new c(x instanceof URL?x.protocol==="file:"?x.pathname:x.toString():x);if(typeof process<"u"&&process?.release?.name==="node"){const S=!!Mu?.TESTING_REMOTELY,z=i.env.version,D=new Headers;if(D.set("User-Agent",`transformers.js/${z}; is_ci/${S};`),p(x,["http:","https:"],["huggingface.co","hf.co"])){const q=Mu?.HF_TOKEN??Mu?.HF_ACCESS_TOKEN;q&&D.set("Authorization",`Bearer ${q}`)}return fetch(x,{headers:D})}else return fetch(x)}const f={400:"Bad request error occurred while trying to load file",401:"Unauthorized access to file",403:"Forbidden access to file",404:"Could not locate file",408:"Request timeout error occurred while trying to load file",500:"Internal server error error occurred while trying to load file",502:"Bad gateway error occurred while trying to load file",503:"Service unavailable error occurred while trying to load file",504:"Gateway timeout error occurred while trying to load file"};function w(x,S,z){if(!z)return null;const D=f[x]??`Error (${x}) occurred while trying to load file`;throw Error(`${D}: "${S}".`)}class I{constructor(S){this.path=S}async match(S){let z=n.join(this.path,S),D=new c(z);if(D.exists)return D}async put(S,z,D=void 0){let K=n.join(this.path,S);try{const q=z.headers.get("Content-Length"),O=parseInt(q??"0");let Z=0;await s.promises.mkdir(n.dirname(K),{recursive:!0});const Q=s.createWriteStream(K),J=z.body.getReader();for(;;){const{done:re,value:te}=await J.read();if(re)break;await new Promise((ue,B)=>{Q.write(te,F=>{if(F){B(F);return}ue()})}),Z+=te.length;const ce=O?Z/O*100:0;D?.({progress:ce,loaded:Z,total:O})}Q.close()}catch(q){try{await s.promises.unlink(K)}catch{}throw q}}}async function M(x,...S){for(let z of S)try{let D=await x.match(z);if(D)return D}catch{continue}}async function y(x,S,z=!0,D={},K=!1){if(!i.env.allowLocalModels){if(D.local_files_only)throw Error("Invalid configuration detected: local models are disabled (`env.allowLocalModels=false`) but you have requested to only use local models (`local_files_only=true`).");if(!i.env.allowRemoteModels)throw Error("Invalid configuration detected: both local and remote models are disabled. Fix by setting `env.allowLocalModels` or `env.allowRemoteModels` to `true`.")}(0,o.dispatchCallback)(D.progress_callback,{status:"initiate",name:x,file:S});let q;if(!q&&i.env.useCustomCache){if(!i.env.customCache)throw Error("`env.useCustomCache=true`, but `env.customCache` is not defined.");if(!i.env.customCache.match||!i.env.customCache.put)throw new Error("`env.customCache` must be an object which implements the `match` and `put` functions of the Web Cache API. For more information, see https://developer.mozilla.org/en-US/docs/Web/API/Cache");q=i.env.customCache}if(!q&&i.env.useBrowserCache){if(typeof caches>"u")throw Error("Browser cache is not available in this environment.");try{q=await caches.open("transformers-cache")}catch(ae){console.warn("An error occurred while opening the browser cache:",ae)}}if(!q&&i.env.useFSCache){if(!i.apis.IS_FS_AVAILABLE)throw Error("File System Cache is not available in this environment.");q=new I(D.cache_dir??i.env.cacheDir)}const O=D.revision??"main",Z=E(x,S),Q=u(x),J=Q?E(i.env.localModelPath,Z):Z,re=E(i.env.remoteHost,i.env.remotePathTemplate.replaceAll("{model}",x).replaceAll("{revision}",encodeURIComponent(O)),S);let te;const ce=q instanceof I?O==="main"?Z:E(x,O,S):re;let ue=!1,B;q&&(B=await M(q,J,ce));const F=B!==void 0;if(B===void 0){if(i.env.allowLocalModels)if(p(Z,["http:","https:"])){if(D.local_files_only)throw new Error(`\`local_files_only=true\`, but attempted to load a remote file from: ${Z}.`);if(!i.env.allowRemoteModels)throw new Error(`\`env.allowRemoteModels=false\`, but attempted to load a remote file from: ${Z}.`)}else try{B=await _(J),te=J}catch(ke){console.warn(`Unable to load from local path "${J}": "${ke}"`)}if(B===void 0||B.status===404){if(D.local_files_only||!i.env.allowRemoteModels){if(z)throw Error(`\`local_files_only=true\` or \`env.allowRemoteModels=false\` and file was not found locally at "${J}".`);return null}if(!Q)throw Error(`Local file missing at "${J}" and download aborted due to invalid model ID "${x}".`);if(B=await _(re),B.status!==200)return w(B.status,re,z);te=ce}ue=q&&typeof Response<"u"&&B instanceof Response&&B.status===200}(0,o.dispatchCallback)(D.progress_callback,{status:"download",name:x,file:S});let G;if(!(i.apis.IS_NODE_ENV&&K)){let ae;D.progress_callback?F&&typeof navigator<"u"&&/firefox/i.test(navigator.userAgent)?(ae=new Uint8Array(await B.arrayBuffer()),(0,o.dispatchCallback)(D.progress_callback,{status:"progress",name:x,file:S,progress:100,loaded:ae.length,total:ae.length})):ae=await T(B,ke=>{(0,o.dispatchCallback)(D.progress_callback,{status:"progress",name:x,file:S,...ke})}):ae=new Uint8Array(await B.arrayBuffer()),G=ae}if(ue&&te&&await q.match(te)===void 0&&(G?await q.put(te,new Response(G,{headers:B.headers})).catch(ae=>{console.warn(`Unable to add response to browser cache: ${ae}.`)}):await q.put(te,B,D.progress_callback)),(0,o.dispatchCallback)(D.progress_callback,{status:"done",name:x,file:S}),G){if(!i.apis.IS_NODE_ENV&&K)throw new Error("Cannot return path in a browser environment.");return G}if(B instanceof c)return B.filePath;const N=await q?.match(te);if(N instanceof c)return N.filePath;if(N instanceof Response)return new Uint8Array(await N.arrayBuffer());if(typeof N=="string")return N;throw new Error("Unable to get model file path or buffer.")}async function $(x,S,z=!0,D={}){const K=await y(x,S,z,D,!1);return K===null?null:new TextDecoder("utf-8").decode(K)}async function v(x,S,z=!0,D={}){const K=await $(x,S,z,D);return K===null?{}:JSON.parse(K)}async function T(x,S){const z=x.headers.get("Content-Length");z===null&&console.warn("Unable to determine content-length from response headers. Will expand buffer when needed.");let D=parseInt(z??"0"),K=new Uint8Array(D),q=0;const O=x.body.getReader();async function Z(){const{done:Q,value:J}=await O.read();if(Q)return;const re=q+J.length;if(re>D){D=re;const ce=new Uint8Array(D);ce.set(K),K=ce}K.set(J,q),q=re;const te=q/D*100;return S({progress:te,loaded:q,total:D}),Z()}return await Z(),K}function E(...x){return x=x.map((S,z)=>(z&&(S=S.replace(new RegExp("^/"),"")),z!==x.length-1&&(S=S.replace(new RegExp("/$"),"")),S)),x.join("/")}}),"./src/utils/image.js":((e,r,t)=>{t.r(r),t.d(r,{RawImage:()=>f,load_image:()=>w});var s=t("./src/utils/core.js"),n=t("./src/utils/hub.js"),i=t("./src/env.js"),o=t("./src/utils/tensor.js"),a=t("?2b25");let l,c,p;const d=i.apis.IS_BROWSER_ENV||i.apis.IS_WEBWORKER_ENV;if(d)l=(I,M)=>{if(!self.OffscreenCanvas)throw new Error("OffscreenCanvas not supported by this browser.");return new self.OffscreenCanvas(I,M)},p=self.createImageBitmap,c=self.ImageData;else if(a)p=async I=>{const y=(await I.metadata()).channels,{data:$,info:v}=await I.rotate().raw().toBuffer({resolveWithObject:!0}),T=new f(new Uint8ClampedArray($),v.width,v.height,v.channels);return y!==void 0&&y!==v.channels&&T.convert(y),T};else throw new Error("Unable to load image processing library.");const u={0:"nearest",1:"lanczos",2:"bilinear",3:"bicubic",4:"box",5:"hamming"},_=new Map([["png","image/png"],["jpg","image/jpeg"],["jpeg","image/jpeg"],["gif","image/gif"]]);class f{constructor(M,y,$,v){this.data=M,this.width=y,this.height=$,this.channels=v}get size(){return[this.width,this.height]}static async read(M){if(M instanceof f)return M;if(typeof M=="string"||M instanceof URL)return await this.fromURL(M);if(M instanceof Blob)return await this.fromBlob(M);if(typeof HTMLCanvasElement<"u"&&M instanceof HTMLCanvasElement||typeof OffscreenCanvas<"u"&&M instanceof OffscreenCanvas)return this.fromCanvas(M);throw new Error(`Unsupported input type: ${typeof M}`)}static fromCanvas(M){if(!d)throw new Error("fromCanvas() is only supported in browser environments.");const $=M.getContext("2d").getImageData(0,0,M.width,M.height).data;return new f($,M.width,M.height,4)}static async fromURL(M){const y=await(0,n.getFile)(M);if(y.status!==200)throw new Error(`Unable to read image from "${M}" (${y.status} ${y.statusText})`);const $=await y.blob();return this.fromBlob($)}static async fromBlob(M){if(d){const y=await p(M),$=l(y.width,y.height).getContext("2d");return $.drawImage(y,0,0),new this($.getImageData(0,0,y.width,y.height).data,y.width,y.height,4)}else{const y=a(await M.arrayBuffer());return await p(y)}}static fromTensor(M,y="CHW"){if(M.dims.length!==3)throw new Error(`Tensor should have 3 dimensions, but has ${M.dims.length} dimensions.`);if(y==="CHW")M=M.transpose(1,2,0);else if(y!=="HWC")throw new Error(`Unsupported channel format: ${y}`);if(!(M.data instanceof Uint8ClampedArray||M.data instanceof Uint8Array))throw new Error(`Unsupported tensor type: ${M.type}`);switch(M.dims[2]){case 1:case 2:case 3:case 4:return new f(M.data,M.dims[1],M.dims[0],M.dims[2]);default:throw new Error(`Unsupported number of channels: ${M.dims[2]}`)}}grayscale(){if(this.channels===1)return this;const M=new Uint8ClampedArray(this.width*this.height*1);switch(this.channels){case 3:case 4:for(let y=0,$=0;y<this.data.length;y+=this.channels){const v=this.data[y],T=this.data[y+1],E=this.data[y+2];M[$++]=Math.round(.2989*v+.587*T+.114*E)}break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(M,this.width,this.height,1)}rgb(){if(this.channels===3)return this;const M=new Uint8ClampedArray(this.width*this.height*3);switch(this.channels){case 1:for(let y=0,$=0;y<this.data.length;++y)M[$++]=this.data[y],M[$++]=this.data[y],M[$++]=this.data[y];break;case 4:for(let y=0,$=0;y<this.data.length;y+=4)M[$++]=this.data[y],M[$++]=this.data[y+1],M[$++]=this.data[y+2];break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(M,this.width,this.height,3)}rgba(){if(this.channels===4)return this;const M=new Uint8ClampedArray(this.width*this.height*4);switch(this.channels){case 1:for(let y=0,$=0;y<this.data.length;++y)M[$++]=this.data[y],M[$++]=this.data[y],M[$++]=this.data[y],M[$++]=255;break;case 3:for(let y=0,$=0;y<this.data.length;y+=3)M[$++]=this.data[y],M[$++]=this.data[y+1],M[$++]=this.data[y+2],M[$++]=255;break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this._update(M,this.width,this.height,4)}putAlpha(M){if(M.width!==this.width||M.height!==this.height)throw new Error(`Expected mask size to be ${this.width}x${this.height}, but got ${M.width}x${M.height}`);if(M.channels!==1)throw new Error(`Expected mask to have 1 channel, but got ${M.channels}`);const y=this.data,$=M.data,v=this.width*this.height;if(this.channels===3){const T=new Uint8ClampedArray(v*4);for(let E=0,x=0,S=0;E<v;++E)T[S++]=y[x++],T[S++]=y[x++],T[S++]=y[x++],T[S++]=$[E];return this._update(T,this.width,this.height,4)}else if(this.channels===4){for(let T=0;T<v;++T)y[4*T+3]=$[T];return this}throw new Error(`Expected image to have 3 or 4 channels, but got ${this.channels}`)}async resize(M,y,{resample:$=2}={}){if(this.width===M&&this.height===y)return this;let v=u[$]??$;const T=(0,s.isNullishDimension)(M),E=(0,s.isNullishDimension)(y);if(T&&E)return this;if(T?M=y/this.height*this.width:E&&(y=M/this.width*this.height),d){const x=this.channels,S=this.toCanvas(),z=l(M,y).getContext("2d");return z.drawImage(S,0,0,M,y),new f(z.getImageData(0,0,M,y).data,M,y,4).convert(x)}else{let x=this.toSharp();switch(v){case"box":case"hamming":(v==="box"||v==="hamming")&&(console.warn(`Resampling method ${v} is not yet supported. Using bilinear instead.`),v="bilinear");case"nearest":case"bilinear":case"bicubic":x=x.affine([M/this.width,0,0,y/this.height],{interpolator:v});break;case"lanczos":x=x.resize({width:M,height:y,fit:"fill",kernel:"lanczos3"});break;default:throw new Error(`Resampling method ${v} is not supported.`)}return await p(x)}}async pad([M,y,$,v]){if(M=Math.max(M,0),y=Math.max(y,0),$=Math.max($,0),v=Math.max(v,0),M===0&&y===0&&$===0&&v===0)return this;if(d){const T=this.channels,E=this.toCanvas(),x=this.width+M+y,S=this.height+$+v,z=l(x,S).getContext("2d");return z.drawImage(E,0,0,this.width,this.height,M,$,this.width,this.height),new f(z.getImageData(0,0,x,S).data,x,S,4).convert(T)}else{const T=this.toSharp().extend({left:M,right:y,top:$,bottom:v});return await p(T)}}async crop([M,y,$,v]){if(M=Math.max(M,0),y=Math.max(y,0),$=Math.min($,this.width-1),v=Math.min(v,this.height-1),M===0&&y===0&&$===this.width-1&&v===this.height-1)return this;const T=$-M+1,E=v-y+1;if(d){const x=this.channels,S=this.toCanvas(),z=l(T,E).getContext("2d");return z.drawImage(S,M,y,T,E,0,0,T,E),new f(z.getImageData(0,0,T,E).data,T,E,4).convert(x)}else{const x=this.toSharp().extract({left:M,top:y,width:T,height:E});return await p(x)}}async center_crop(M,y){if(this.width===M&&this.height===y)return this;const $=(this.width-M)/2,v=(this.height-y)/2;if(d){const T=this.channels,E=this.toCanvas(),x=l(M,y).getContext("2d");let S=0,z=0,D=0,K=0;return $>=0?S=$:D=-$,v>=0?z=v:K=-v,x.drawImage(E,S,z,M,y,D,K,M,y),new f(x.getImageData(0,0,M,y).data,M,y,4).convert(T)}else{let T=this.toSharp();if($>=0&&v>=0)T=T.extract({left:Math.floor($),top:Math.floor(v),width:M,height:y});else if($<=0&&v<=0){const E=Math.floor(-v),x=Math.floor(-$);T=T.extend({top:E,left:x,right:M-this.width-x,bottom:y-this.height-E})}else{let E=[0,0],x=0;v<0?(E[0]=Math.floor(-v),E[1]=y-this.height-E[0]):x=Math.floor(v);let S=[0,0],z=0;$<0?(S[0]=Math.floor(-$),S[1]=M-this.width-S[0]):z=Math.floor($),T=T.extend({top:E[0],bottom:E[1],left:S[0],right:S[1]}).extract({left:z,top:x,width:M,height:y})}return await p(T)}}async toBlob(M="image/png",y=1){if(!d)throw new Error("toBlob() is only supported in browser environments.");return await this.toCanvas().convertToBlob({type:M,quality:y})}toTensor(M="CHW"){let y=new o.Tensor("uint8",new Uint8Array(this.data),[this.height,this.width,this.channels]);if(M!=="HWC")if(M==="CHW")y=y.permute(2,0,1);else throw new Error(`Unsupported channel format: ${M}`);return y}toCanvas(){if(!d)throw new Error("toCanvas() is only supported in browser environments.");const M=this.clone().rgba(),y=l(M.width,M.height),$=new c(M.data,M.width,M.height);return y.getContext("2d").putImageData($,0,0),y}split(){const{data:M,width:y,height:$,channels:v}=this,T=M.constructor,E=M.length/v,x=Array.from({length:v},()=>new T(E));for(let S=0;S<E;++S){const z=v*S;for(let D=0;D<v;++D)x[D][S]=M[z+D]}return x.map(S=>new f(S,y,$,1))}_update(M,y,$,v=null){return this.data=M,this.width=y,this.height=$,v!==null&&(this.channels=v),this}clone(){return new f(this.data.slice(),this.width,this.height,this.channels)}convert(M){if(this.channels===M)return this;switch(M){case 1:this.grayscale();break;case 3:this.rgb();break;case 4:this.rgba();break;default:throw new Error(`Conversion failed due to unsupported number of channels: ${this.channels}`)}return this}async save(M){if(d){if(i.apis.IS_WEBWORKER_ENV)throw new Error("Unable to save an image from a Web Worker.");const y=M.split(".").pop().toLowerCase(),$=_.get(y)??"image/png",v=await this.toBlob($);(0,s.saveBlob)(M,v)}else{if(i.apis.IS_FS_AVAILABLE)return await this.toSharp().toFile(M);throw new Error("Unable to save the image because filesystem is disabled in this environment.")}}toSharp(){if(d)throw new Error("toSharp() is only supported in server-side environments.");return a(this.data,{raw:{width:this.width,height:this.height,channels:this.channels}})}}const w=f.read.bind(f)}),"./src/utils/maths.js":((e,r,t)=>{t.r(r),t.d(r,{FFT:()=>w,bankers_round:()=>y,cos_sim:()=>l,dot:()=>a,dynamic_time_warping:()=>$,interpolate_data:()=>s,log_softmax:()=>o,magnitude:()=>c,max:()=>d,medianFilter:()=>I,min:()=>p,permute_data:()=>n,round:()=>M,softmax:()=>i});function s(v,[T,E,x],[S,z],D="bilinear",K=!1){const q=z/x,O=S/E,Z=new v.constructor(S*z*T),Q=E*x,J=S*z;for(let re=0;re<S;++re)for(let te=0;te<z;++te){const ce=re*z+te,ue=(te+.5)/q-.5,B=(re+.5)/O-.5;let F=Math.floor(ue),G=Math.floor(B);const N=Math.min(F+1,x-1),ae=Math.min(G+1,E-1);F=Math.max(F,0),G=Math.max(G,0);const ke=ue-F,ve=B-G,Fe=(1-ke)*(1-ve),Qe=ke*(1-ve),xe=(1-ke)*ve,H=ke*ve,de=G*x,W=ae*x,_e=de+F,Ie=de+N,Me=W+F,ge=W+N;for(let Ee=0;Ee<T;++Ee){const we=Ee*Q;Z[Ee*J+ce]=Fe*v[we+_e]+Qe*v[we+Ie]+xe*v[we+Me]+H*v[we+ge]}}return Z}function n(v,T,E){const x=new Array(E.length),S=new Array(E.length);for(let K=E.length-1,q=1;K>=0;--K)S[K]=q,x[K]=T[E[K]],q*=x[K];const z=E.map((K,q)=>S[E.indexOf(q)]),D=new v.constructor(v.length);for(let K=0;K<v.length;++K){let q=0;for(let O=T.length-1,Z=K;O>=0;--O)q+=Z%T[O]*z[O],Z=Math.floor(Z/T[O]);D[q]=v[K]}return[D,x]}function i(v){const T=d(v)[0],E=v.map(z=>Math.exp(z-T)),x=E.reduce((z,D)=>z+D,0);return E.map(z=>z/x)}function o(v){const T=d(v)[0];let E=0;for(let z=0;z<v.length;++z)E+=Math.exp(v[z]-T);const x=Math.log(E);return v.map(z=>z-T-x)}function a(v,T){let E=0;for(let x=0;x<v.length;++x)E+=v[x]*T[x];return E}function l(v,T){const E=a(v,T),x=c(v),S=c(T);return E/(x*S)}function c(v){return Math.sqrt(v.reduce((T,E)=>T+E*E,0))}function p(v){if(v.length===0)throw Error("Array must not be empty");let T=v[0],E=0;for(let x=1;x<v.length;++x)v[x]<T&&(T=v[x],E=x);return[T,E]}function d(v){if(v.length===0)throw Error("Array must not be empty");let T=v[0],E=0;for(let x=1;x<v.length;++x)v[x]>T&&(T=v[x],E=x);return[T,E]}function u(v){return v>0&&(v&v-1)===0}class _{constructor(T){if(this.size=T|0,this.size<=1||!u(this.size))throw new Error("FFT size must be a power of two larger than 1");this._csize=T<<1,this.table=new Float64Array(this.size*2);for(let x=0;x<this.table.length;x+=2){const S=Math.PI*x/this.size;this.table[x]=Math.cos(S),this.table[x+1]=-Math.sin(S)}let E=0;for(let x=1;this.size>x;x<<=1)++E;this._width=E%2===0?E-1:E,this._bitrev=new Int32Array(1<<this._width);for(let x=0;x<this._bitrev.length;++x){this._bitrev[x]=0;for(let S=0;S<this._width;S+=2){const z=this._width-S-2;this._bitrev[x]|=(x>>>S&3)<<z}}}createComplexArray(){return new Float64Array(this._csize)}fromComplexArray(T,E){const x=E||new Array(T.length>>>1);for(let S=0;S<T.length;S+=2)x[S>>>1]=T[S];return x}toComplexArray(T,E){const x=E||this.createComplexArray();for(let S=0;S<x.length;S+=2)x[S]=T[S>>>1],x[S+1]=0;return x}transform(T,E){if(T===E)throw new Error("Input and output buffers must be different");this._transform4(T,E,1)}realTransform(T,E){if(T===E)throw new Error("Input and output buffers must be different");this._realTransform4(T,E,1)}inverseTransform(T,E){if(T===E)throw new Error("Input and output buffers must be different");this._transform4(T,E,-1);for(let x=0;x<T.length;++x)T[x]/=this.size}_transform4(T,E,x){const S=this._csize;let D=1<<this._width,K=S/D<<1,q,O;const Z=this._bitrev;if(K===4)for(q=0,O=0;q<S;q+=K,++O){const J=Z[O];this._singleTransform2(E,T,q,J,D)}else for(q=0,O=0;q<S;q+=K,++O){const J=Z[O];this._singleTransform4(E,T,q,J,D,x)}const Q=this.table;for(D>>=2;D>=2;D>>=2){K=S/D<<1;const J=K>>>2;for(q=0;q<S;q+=K){const re=q+J-1;for(let te=q,ce=0;te<re;te+=2,ce+=D){const ue=te,B=ue+J,F=B+J,G=F+J,N=T[ue],ae=T[ue+1],ke=T[B],ve=T[B+1],Fe=T[F],Qe=T[F+1],xe=T[G],H=T[G+1],de=Q[ce],W=x*Q[ce+1],_e=ke*de-ve*W,Ie=ke*W+ve*de,Me=Q[2*ce],ge=x*Q[2*ce+1],Ee=Fe*Me-Qe*ge,we=Fe*ge+Qe*Me,Ae=Q[3*ce],De=x*Q[3*ce+1],We=xe*Ae-H*De,be=xe*De+H*Ae,st=N+Ee,je=ae+we,Ne=N-Ee,et=ae-we,He=_e+We,Je=Ie+be,Ze=x*(_e-We),Ct=x*(Ie-be);T[ue]=st+He,T[ue+1]=je+Je,T[B]=Ne+Ct,T[B+1]=et-Ze,T[F]=st-He,T[F+1]=je-Je,T[G]=Ne-Ct,T[G+1]=et+Ze}}}}_singleTransform2(T,E,x,S,z){const D=T[S],K=T[S+1],q=T[S+z],O=T[S+z+1];E[x]=D+q,E[x+1]=K+O,E[x+2]=D-q,E[x+3]=K-O}_singleTransform4(T,E,x,S,z,D){const K=z*2,q=z*3,O=T[S],Z=T[S+1],Q=T[S+z],J=T[S+z+1],re=T[S+K],te=T[S+K+1],ce=T[S+q],ue=T[S+q+1],B=O+re,F=Z+te,G=O-re,N=Z-te,ae=Q+ce,ke=J+ue,ve=D*(Q-ce),Fe=D*(J-ue);E[x]=B+ae,E[x+1]=F+ke,E[x+2]=G+Fe,E[x+3]=N-ve,E[x+4]=B-ae,E[x+5]=F-ke,E[x+6]=G-Fe,E[x+7]=N+ve}_realTransform4(T,E,x){const S=this._csize;let D=1<<this._width,K=S/D<<1,q,O;const Z=this._bitrev;if(K===4)for(q=0,O=0;q<S;q+=K,++O){const re=Z[O];this._singleRealTransform2(E,T,q,re>>>1,D>>>1)}else for(q=0,O=0;q<S;q+=K,++O){const re=Z[O];this._singleRealTransform4(E,T,q,re>>>1,D>>>1,x)}const Q=this.table;for(D>>=2;D>=2;D>>=2){K=S/D<<1;const re=K>>>1,te=re>>>1,ce=te>>>1;for(q=0;q<S;q+=K)for(let ue=0,B=0;ue<=ce;ue+=2,B+=D){const F=q+ue,G=F+te,N=G+te,ae=N+te,ke=T[F],ve=T[F+1],Fe=T[G],Qe=T[G+1],xe=T[N],H=T[N+1],de=T[ae],W=T[ae+1],_e=ke,Ie=ve,Me=Q[B],ge=x*Q[B+1],Ee=Fe*Me-Qe*ge,we=Fe*ge+Qe*Me,Ae=Q[2*B],De=x*Q[2*B+1],We=xe*Ae-H*De,be=xe*De+H*Ae,st=Q[3*B],je=x*Q[3*B+1],Ne=de*st-W*je,et=de*je+W*st,He=_e+We,Je=Ie+be,Ze=_e-We,Ct=Ie-be,At=Ee+Ne,ft=we+et,Mr=x*(Ee-Ne),Gr=x*(we-et);if(T[F]=He+At,T[F+1]=Je+ft,T[G]=Ze+Gr,T[G+1]=Ct-Mr,ue===0){T[N]=He-At,T[N+1]=Je-ft;continue}if(ue===ce)continue;const Or=q+te-ue,rs=q+re-ue;T[Or]=Ze-x*Gr,T[Or+1]=-Ct-x*Mr,T[rs]=He-x*At,T[rs+1]=-Je+x*ft}}const J=S>>>1;for(let re=2;re<J;re+=2)T[S-re]=T[re],T[S-re+1]=-T[re+1]}_singleRealTransform2(T,E,x,S,z){const D=T[S],K=T[S+z];E[x]=D+K,E[x+1]=0,E[x+2]=D-K,E[x+3]=0}_singleRealTransform4(T,E,x,S,z,D){const K=z*2,q=z*3,O=T[S],Z=T[S+z],Q=T[S+K],J=T[S+q],re=O+Q,te=O-Q,ce=Z+J,ue=D*(Z-J);E[x]=re+ce,E[x+1]=0,E[x+2]=te,E[x+3]=-ue,E[x+4]=re-ce,E[x+5]=0,E[x+6]=te,E[x+7]=ue}}class f{constructor(T){const E=2*(T-1),x=2*(2*T-1),S=2**Math.ceil(Math.log2(x));this.bufferSize=S,this._a=E;const z=new Float64Array(x),D=new Float64Array(S);this._chirpBuffer=new Float64Array(S),this._buffer1=new Float64Array(S),this._buffer2=new Float64Array(S),this._outBuffer1=new Float64Array(S),this._outBuffer2=new Float64Array(S);const K=-2*Math.PI/T,q=Math.cos(K),O=Math.sin(K);for(let Z=0;Z<x>>1;++Z){const Q=(Z+1-T)**2/2,J=Math.sqrt(q**2+O**2)**Q,re=Q*Math.atan2(O,q),te=2*Z;z[te]=J*Math.cos(re),z[te+1]=J*Math.sin(re),D[te]=z[te],D[te+1]=-z[te+1]}this._slicedChirpBuffer=z.subarray(E,x),this._f=new _(S>>1),this._f.transform(this._chirpBuffer,D)}_transform(T,E,x){const S=this._buffer1,z=this._buffer2,D=this._outBuffer1,K=this._outBuffer2,q=this._chirpBuffer,O=this._slicedChirpBuffer,Z=this._a;if(x)for(let Q=0;Q<O.length;Q+=2){const J=Q+1,re=Q>>1,te=E[re];S[Q]=te*O[Q],S[J]=te*O[J]}else for(let Q=0;Q<O.length;Q+=2){const J=Q+1;S[Q]=E[Q]*O[Q]-E[J]*O[J],S[J]=E[Q]*O[J]+E[J]*O[Q]}this._f.transform(D,S);for(let Q=0;Q<q.length;Q+=2){const J=Q+1;z[Q]=D[Q]*q[Q]-D[J]*q[J],z[J]=D[Q]*q[J]+D[J]*q[Q]}this._f.inverseTransform(K,z);for(let Q=0;Q<K.length;Q+=2){const J=K[Q+Z],re=K[Q+Z+1],te=O[Q],ce=O[Q+1];T[Q]=J*te-re*ce,T[Q+1]=J*ce+re*te}}transform(T,E){this._transform(T,E,!1)}realTransform(T,E){this._transform(T,E,!0)}}class w{constructor(T){this.fft_length=T,this.isPowerOfTwo=u(T),this.isPowerOfTwo?(this.fft=new _(T),this.outputBufferSize=2*T):(this.fft=new f(T),this.outputBufferSize=this.fft.bufferSize)}realTransform(T,E){this.fft.realTransform(T,E)}transform(T,E){this.fft.transform(T,E)}}function I(v,T){if(T%2===0||T<=0)throw new Error("Window size must be a positive odd number");const E=new v.constructor(v.length),x=new v.constructor(T),S=Math.floor(T/2);for(let z=0;z<v.length;++z){let D=0;for(let K=-S;K<=S;++K){let q=z+K;q<0?q=Math.abs(q):q>=v.length&&(q=2*(v.length-1)-q),x[D++]=v[q]}x.sort(),E[z]=x[S]}return E}function M(v,T){const E=Math.pow(10,T);return Math.round(v*E)/E}function y(v){const T=Math.round(v);return Math.abs(v)%1===.5?T%2===0?T:T-1:T}function $(v){const T=v.length,E=v[0].length,x=[T+1,E+1],S=Array.from({length:x[0]},()=>Array(x[1]).fill(1/0));S[0][0]=0;const z=Array.from({length:x[0]},()=>Array(x[1]).fill(-1));for(let Z=1;Z<x[1];++Z)for(let Q=1;Q<x[0];++Q){const J=S[Q-1][Z-1],re=S[Q-1][Z],te=S[Q][Z-1];let ce,ue;J<re&&J<te?(ce=J,ue=0):re<J&&re<te?(ce=re,ue=1):(ce=te,ue=2),S[Q][Z]=v[Q-1][Z-1]+ce,z[Q][Z]=ue}for(let Z=0;Z<x[1];++Z)z[0][Z]=2;for(let Z=0;Z<x[0];++Z)z[Z][0]=1;let D=T,K=E,q=[],O=[];for(;D>0||K>0;)switch(q.push(D-1),O.push(K-1),z[D][K]){case 0:--D,--K;break;case 1:--D;break;case 2:--K;break;default:throw new Error(`Internal error in dynamic time warping. Unexpected trace[${D}, ${K}]. Please file a bug report.`)}return q.reverse(),O.reverse(),[q,O]}}),"./src/utils/tensor.js":((e,r,t)=>{t.r(r),t.d(r,{DataTypeMap:()=>o,Tensor:()=>a,cat:()=>E,full:()=>O,full_like:()=>Z,interpolate:()=>p,interpolate_4d:()=>d,layer_norm:()=>y,matmul:()=>u,mean:()=>D,mean_pooling:()=>M,ones:()=>Q,ones_like:()=>J,permute:()=>c,quantize_embeddings:()=>ue,rand:()=>ce,rfft:()=>_,slice:()=>I,stack:()=>x,std_mean:()=>z,topk:()=>f,zeros:()=>re,zeros_like:()=>te});var s=t("./src/utils/maths.js"),n=t("./src/backends/onnx.js"),i=t("./src/ops/registry.js");const o=Object.freeze({float32:Float32Array,float16:typeof Float16Array<"u"?Float16Array:Uint16Array,float64:Float64Array,string:Array,int8:Int8Array,uint8:Uint8Array,int16:Int16Array,uint16:Uint16Array,int32:Int32Array,uint32:Uint32Array,int64:BigInt64Array,uint64:BigUint64Array,bool:Uint8Array,uint4:Uint8Array,int4:Int8Array});class a{get dims(){return this.ort_tensor.dims}set dims(F){this.ort_tensor.dims=F}get type(){return this.ort_tensor.type}get data(){return this.ort_tensor.data}get size(){return this.ort_tensor.size}get location(){return this.ort_tensor.location}ort_tensor;constructor(...F){return(0,n.isONNXTensor)(F[0])?this.ort_tensor=F[0]:this.ort_tensor=new n.Tensor(F[0],F[1],F[2]),new Proxy(this,{get:(G,N)=>{if(typeof N=="string"){let ae=Number(N);if(Number.isInteger(ae))return G._getitem(ae)}return G[N]},set:(G,N,ae)=>G[N]=ae})}dispose(){this.ort_tensor.dispose()}*[Symbol.iterator](){const[F,...G]=this.dims;if(G.length>0){const N=G.reduce((ae,ke)=>ae*ke);for(let ae=0;ae<F;++ae)yield this._subarray(ae,N,G)}else yield*this.data}_getitem(F){const[G,...N]=this.dims;if(F=T(F,G),N.length>0){const ae=N.reduce((ke,ve)=>ke*ve);return this._subarray(F,ae,N)}else return new a(this.type,[this.data[F]],N)}indexOf(F){const G=this.data;for(let N=0;N<G.length;++N)if(G[N]==F)return N;return-1}_subarray(F,G,N){const ae=F*G,ke=(F+1)*G,ve="subarray"in this.data?this.data.subarray(ae,ke):this.data.slice(ae,ke);return new a(this.type,ve,N)}item(){const F=this.data;if(F.length!==1)throw new Error(`a Tensor with ${F.length} elements cannot be converted to Scalar`);return F[0]}tolist(){return l(this.data,this.dims)}sigmoid(){return this.clone().sigmoid_()}sigmoid_(){const F=this.data;for(let G=0;G<F.length;++G)F[G]=1/(1+Math.exp(-F[G]));return this}map(F){return this.clone().map_(F)}map_(F){const G=this.data;for(let N=0;N<G.length;++N)G[N]=F(G[N],N,G);return this}mul(F){return this.clone().mul_(F)}mul_(F){const G=this.data;for(let N=0;N<G.length;++N)G[N]*=F;return this}div(F){return this.clone().div_(F)}div_(F){const G=this.data;for(let N=0;N<G.length;++N)G[N]/=F;return this}add(F){return this.clone().add_(F)}add_(F){const G=this.data;for(let N=0;N<G.length;++N)G[N]+=F;return this}sub(F){return this.clone().sub_(F)}sub_(F){const G=this.data;for(let N=0;N<G.length;++N)G[N]-=F;return this}clone(){return new a(this.type,this.data.slice(),this.dims.slice())}slice(...F){const G=[],N=[];for(let H=0;H<this.dims.length;++H){let de=F[H];if(de==null)N.push([0,this.dims[H]]),G.push(this.dims[H]);else if(typeof de=="number")de=T(de,this.dims[H],H),N.push([de,de+1]);else if(Array.isArray(de)&&de.length===2){let[W,_e]=de;if(W=W===null?0:T(W,this.dims[H],H,!1),_e=_e===null?this.dims[H]:T(_e,this.dims[H],H,!1),W>_e)throw new Error(`Invalid slice: ${de}`);const Ie=[Math.max(W,0),Math.min(_e,this.dims[H])];N.push(Ie),G.push(Ie[1]-Ie[0])}else throw new Error(`Invalid slice: ${de}`)}const ae=N.map(([H,de])=>de-H),ke=ae.reduce((H,de)=>H*de),ve=this.data,Fe=new ve.constructor(ke),Qe=this.stride();let xe=!0;for(let H=1;H<ae.length;++H)if(N[H][0]!==0||N[H][1]!==this.dims[H]){xe=!1;break}if(xe){const H=N[0][0]*Qe[0],de=N[0][1]*Qe[0];if(ArrayBuffer.isView(ve))Fe.set(ve.subarray(H,de));else if(Array.isArray(ve)){const W=ve.slice(H,de);for(let _e=0;_e<W.length;++_e)Fe[_e]=W[_e]}else throw new Error("Unsupported data type for slicing")}else for(let H=0;H<ke;++H){let de=0;for(let W=ae.length-1,_e=H;W>=0;--W){const Ie=ae[W];de+=(_e%Ie+N[W][0])*Qe[W],_e=Math.floor(_e/Ie)}Fe[H]=ve[de]}return new a(this.type,Fe,G)}permute(...F){return c(this,F)}transpose(...F){return this.permute(...F)}sum(F=null,G=!1){return this.norm(1,F,G)}norm(F="fro",G=null,N=!1){if(F==="fro")F=2;else if(typeof F=="string")throw Error(`Unsupported norm: ${F}`);const ae=this.data,ke=(xe,H)=>xe+H**F;if(G===null){const xe=ae.reduce(ke,0)**(1/F);return new a(this.type,[xe],[])}const[ve,Fe,Qe]=S(ke,this,G,N);if(F!==1)for(let xe=0;xe<Fe.length;++xe)Fe[xe]=Fe[xe]**(1/F);return new a(ve,Fe,Qe)}normalize_(F=2,G=1){G=T(G,this.dims.length);const N=this.norm(F,G,!0),ae=this.data,ke=N.data;for(let ve=0;ve<ae.length;++ve){let Fe=0;for(let Qe=this.dims.length-1,xe=ve,H=1;Qe>=0;--Qe){const de=this.dims[Qe];if(Qe!==G){const W=xe%de;Fe+=W*H,H*=this.dims[Qe]}xe=Math.floor(xe/de)}ae[ve]/=ke[Fe]}return this}normalize(F=2,G=1){return this.clone().normalize_(F,G)}stride(){return K(this.dims)}squeeze(F=null){return new a(this.type,this.data,$(this.dims,F))}squeeze_(F=null){return this.dims=$(this.dims,F),this}unsqueeze(F=null){return new a(this.type,this.data,v(this.dims,F))}unsqueeze_(F=null){return this.dims=v(this.dims,F),this}flatten_(F=0,G=-1){G=(G+this.dims.length)%this.dims.length;let N=this.dims.slice(0,F),ae=this.dims.slice(F,G+1),ke=this.dims.slice(G+1);return this.dims=[...N,ae.reduce((ve,Fe)=>ve*Fe,1),...ke],this}flatten(F=0,G=-1){return this.clone().flatten_(F,G)}view(...F){let G=-1;for(let ae=0;ae<F.length;++ae)if(F[ae]===-1){if(G!==-1)throw new Error("Only one dimension can be inferred");G=ae}const N=this.data;if(G!==-1){const ae=F.reduce((ke,ve,Fe)=>Fe!==G?ke*ve:ke,1);F[G]=N.length/ae}return new a(this.type,N,F)}neg_(){const F=this.data;for(let G=0;G<F.length;++G)F[G]=-F[G];return this}neg(){return this.clone().neg_()}gt(F){const G=new Uint8Array(this.data.length),N=this.data;for(let ae=0;ae<N.length;++ae)G[ae]=N[ae]>F?1:0;return new a("bool",G,this.dims)}lt(F){const G=new Uint8Array(this.data.length),N=this.data;for(let ae=0;ae<N.length;++ae)G[ae]=N[ae]<F?1:0;return new a("bool",G,this.dims)}clamp_(F,G){const N=this.data;for(let ae=0;ae<N.length;++ae)N[ae]=Math.min(Math.max(N[ae],F),G);return this}clamp(F,G){return this.clone().clamp_(F,G)}round_(){const F=this.data;for(let G=0;G<F.length;++G)F[G]=Math.round(F[G]);return this}round(){return this.clone().round_()}mean(F=null,G=!1){return D(this,F,G)}min(F=null,G=!1){if(F===null){const ve=(0,s.min)(this.data)[0];return new a(this.type,[ve],[])}const[N,ae,ke]=S((ve,Fe)=>Math.min(ve,Fe),this,F,G,1/0);return new a(N,ae,ke)}max(F=null,G=!1){if(F===null){const ve=(0,s.max)(this.data)[0];return new a(this.type,[ve],[])}const[N,ae,ke]=S((ve,Fe)=>Math.max(ve,Fe),this,F,G,-1/0);return new a(N,ae,ke)}argmin(F=null,G=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const N=(0,s.min)(this.data)[1];return new a("int64",[BigInt(N)],[])}argmax(F=null,G=!1){if(F!==null)throw new Error("`dim !== null` not yet implemented.");const N=(0,s.max)(this.data)[1];return new a("int64",[BigInt(N)],[])}to(F){if(this.type===F)return this;if(!o.hasOwnProperty(F))throw new Error(`Unsupported type: ${F}`);let G;const N=["int64","uint64"].includes(this.type),ae=["int64","uint64"].includes(F);return N&&!ae?G=Number:!N&&ae&&(G=BigInt),new a(F,o[F].from(this.data,G),this.dims)}}function l(B,F){const G=B.length,N=F.reduce((ke,ve)=>ke*ve);if(G!==N)throw Error(`cannot reshape array of size ${G} into shape (${F})`);let ae=B;for(let ke=F.length-1;ke>=0;ke--)ae=ae.reduce((ve,Fe)=>{let Qe=ve[ve.length-1];return Qe.length<F[ke]?Qe.push(Fe):ve.push([Fe]),ve},[[]]);return ae[0]}function c(B,F){const[G,N]=(0,s.permute_data)(B.data,B.dims,F);return new a(B.type,G,N)}function p(B,[F,G],N="bilinear",ae=!1){const ke=B.dims.at(-3)??1,ve=B.dims.at(-2),Fe=B.dims.at(-1);let Qe=(0,s.interpolate_data)(B.data,[ke,ve,Fe],[F,G],N,ae);return new a(B.type,Qe,[ke,F,G])}async function d(B,{size:F=null,mode:G="bilinear"}={}){if(B.dims.length!==4)throw new Error("`interpolate_4d` currently only supports 4D input.");if(!F)throw new Error("`interpolate_4d` requires a `size` argument.");let N;if(F.length===2)N=[...B.dims.slice(0,2),...F];else if(F.length===3)N=[B.dims[0],...F];else if(F.length===4)N=F;else throw new Error("`size` must be of length 2, 3, or 4.");let ae;if(G==="nearest")ae=await i.TensorOpRegistry.nearest_interpolate_4d;else if(G==="bilinear")ae=await i.TensorOpRegistry.bilinear_interpolate_4d;else if(G==="bicubic")ae=await i.TensorOpRegistry.bicubic_interpolate_4d;else throw new Error(`Unsupported mode: ${G}`);const ke=new a("int64",new BigInt64Array(N.map(BigInt)),[N.length]);return await ae({x:B,s:ke})}async function u(B,F){return await(await i.TensorOpRegistry.matmul)({a:B,b:F})}async function _(B,F){return await(await i.TensorOpRegistry.rfft)({x:B,a:F})}async function f(B,F){const G=await i.TensorOpRegistry.top_k;return F==null?F=B.dims.at(-1):F=Math.min(F,B.dims.at(-1)),await G({x:B,k:new a("int64",[BigInt(F)],[1])})}const w=B=>new a("int64",B,[B.length]);async function I(B,F,G,N,ae){return await(await i.TensorOpRegistry.slice)({x:B,s:w(F),e:w(G),a:w(N),t:w(ae??new Array(N.length).fill(1))})}function M(B,F){const G=B.data,N=F.data,ae=[B.dims[0],B.dims[2]],ke=new G.constructor(ae[0]*ae[1]),[ve,Fe,Qe]=B.dims;let xe=0;for(let H=0;H<ve;++H){const de=H*Qe*Fe;for(let W=0;W<Qe;++W){let _e=0,Ie=0;const Me=H*Fe,ge=de+W;for(let we=0;we<Fe;++we){const Ae=Number(N[Me+we]);Ie+=Ae,_e+=G[ge+we*Qe]*Ae}const Ee=_e/Ie;ke[xe++]=Ee}}return new a(B.type,ke,ae)}function y(B,F,{eps:G=1e-5}={}){if(B.dims.length!==2)throw new Error("`layer_norm` currently only supports 2D input.");const[N,ae]=B.dims;if(F.length!==1&&F[0]!==ae)throw new Error("`normalized_shape` must be a 1D array with shape `[input.dims[1]]`.");const[ke,ve]=z(B,1,0,!0),Fe=ke.data,Qe=ve.data,xe=B.data,H=new xe.constructor(xe.length);for(let de=0;de<N;++de){const W=de*ae;for(let _e=0;_e<ae;++_e){const Ie=W+_e;H[Ie]=(xe[Ie]-Qe[de])/(Fe[de]+G)}}return new a(B.type,H,B.dims)}function $(B,F){return B=B.slice(),F===null?B=B.filter(G=>G!==1):typeof F=="number"?B[F]===1&&B.splice(F,1):Array.isArray(F)&&(B=B.filter((G,N)=>G!==1||!F.includes(N))),B}function v(B,F){return F=T(F,B.length+1),B=B.slice(),B.splice(F,0,1),B}function T(B,F,G=null,N=!0){if(B<-F||B>=F){if(N)throw new Error(`IndexError: index ${B} is out of bounds for dimension${G===null?"":" "+G} with size ${F}`);return B<-F?0:F}return B<0&&(B=(B%F+F)%F),B}function E(B,F=0){F=T(F,B[0].dims.length);const G=B[0].dims.slice();G[F]=B.reduce((ve,Fe)=>ve+Fe.dims[F],0);const N=G.reduce((ve,Fe)=>ve*Fe,1),ae=new B[0].data.constructor(N),ke=B[0].type;if(F===0){let ve=0;for(const Fe of B){const Qe=Fe.data;ae.set(Qe,ve),ve+=Qe.length}}else{let ve=0;for(let Fe=0;Fe<B.length;++Fe){const{data:Qe,dims:xe}=B[Fe];for(let H=0;H<Qe.length;++H){let de=0;for(let W=xe.length-1,_e=H,Ie=1;W>=0;--W){const Me=xe[W];let ge=_e%Me;W===F&&(ge+=ve),de+=ge*Ie,Ie*=G[W],_e=Math.floor(_e/Me)}ae[de]=Qe[H]}ve+=xe[F]}}return new a(ke,ae,G)}function x(B,F=0){return E(B.map(G=>G.unsqueeze(F)),F)}function S(B,F,G=null,N=!1,ae=null){const ke=F.data,ve=F.dims;G=T(G,ve.length);const Fe=ve.slice();Fe[G]=1;const Qe=new ke.constructor(ke.length/ve[G]);ae!==null&&Qe.fill(ae);for(let xe=0;xe<ke.length;++xe){let H=0;for(let de=ve.length-1,W=xe,_e=1;de>=0;--de){const Ie=ve[de];if(de!==G){const Me=W%Ie;H+=Me*_e,_e*=Fe[de]}W=Math.floor(W/Ie)}Qe[H]=B(Qe[H],ke[xe],xe,H)}return N||Fe.splice(G,1),[F.type,Qe,Fe]}function z(B,F=null,G=1,N=!1){const ae=B.data,ke=B.dims;if(F===null){const _e=ae.reduce((Ee,we)=>Ee+we,0)/ae.length,Ie=Math.sqrt(ae.reduce((Ee,we)=>Ee+(we-_e)**2,0)/(ae.length-G)),Me=new a(B.type,[_e],[]);return[new a(B.type,[Ie],[]),Me]}F=T(F,ke.length);const ve=D(B,F,N),Fe=ve.data,[Qe,xe,H]=S((W,_e,Ie,Me)=>W+(_e-Fe[Me])**2,B,F,N);for(let W=0;W<xe.length;++W)xe[W]=Math.sqrt(xe[W]/(ke[F]-G));return[new a(Qe,xe,H),ve]}function D(B,F=null,G=!1){const N=B.dims,ae=B.data;if(F===null){const Qe=ae.reduce((xe,H)=>xe+H,0);return new a(B.type,[Qe/ae.length],[])}F=T(F,N.length);const[ke,ve,Fe]=S((Qe,xe)=>Qe+xe,B,F,G);if(N[F]!==1)for(let Qe=0;Qe<ve.length;++Qe)ve[Qe]/=N[F];return new a(ke,ve,Fe)}function K(B){const F=new Array(B.length);for(let G=B.length-1,N=1;G>=0;--G)F[G]=N,N*=B[G];return F}function q(B,F,G,N){const ae=B.reduce((ke,ve)=>ke*ve,1);return new a(G,new N(ae).fill(F),B)}function O(B,F){let G,N;if(typeof F=="number")G="float32",N=Float32Array;else if(typeof F=="bigint")G="int64",N=BigInt64Array;else if(typeof F=="boolean")G="bool",N=Uint8Array;else throw new Error(`Unsupported data type: ${typeof F}`);return q(B,F,G,N)}function Z(B,F){return O(B.dims,F)}function Q(B){return q(B,1n,"int64",BigInt64Array)}function J(B){return Q(B.dims)}function re(B){return q(B,0n,"int64",BigInt64Array)}function te(B){return re(B.dims)}function ce(B){const F=B.reduce((G,N)=>G*N,1);return new a("float32",Float32Array.from({length:F},()=>Math.random()),B)}function ue(B,F){if(B.dims.length!==2)throw new Error("The tensor must have 2 dimensions");if(B.dims.at(-1)%8!==0)throw new Error("The last dimension of the tensor must be a multiple of 8");if(!["binary","ubinary"].includes(F))throw new Error("The precision must be either 'binary' or 'ubinary'");const G=F==="binary",N=G?"int8":"uint8",ae=G?Int8Array:Uint8Array,ke=B.data,ve=new ae(ke.length/8);for(let Fe=0;Fe<ke.length;++Fe){const Qe=ke[Fe]>0?1:0,xe=Math.floor(Fe/8),H=Fe%8;ve[xe]|=Qe<<7-H,G&&H===0&&(ve[xe]-=128)}return new a(N,ve,[B.dims[0],B.dims[1]/8])}}),"./src/utils/video.js":((e,r,t)=>{t.r(r),t.d(r,{RawVideo:()=>o,RawVideoFrame:()=>i,load_video:()=>a});var s=t("./src/utils/image.js"),n=t("./src/env.js");class i{constructor(c,p){this.image=c,this.timestamp=p}}class o{constructor(c,p){c.length>0&&c[0]instanceof s.RawImage&&(c=c.map((d,u)=>new i(d,(u+1)/(c.length+1)*p))),this.frames=c,this.duration=p}get width(){return this.frames[0].image.width}get height(){return this.frames[0].image.height}get fps(){return this.frames.length/this.duration}}async function a(l,{num_frames:c=null,fps:p=null}={}){if(!n.apis.IS_BROWSER_ENV)throw new Error("`load_video` is currently only supported in browser environments.");if(c==null&&p==null)throw new Error("Either num_frames or fps must be provided.");const d=[],u=document.createElement("video");if(u.crossOrigin="anonymous",u.muted=!0,typeof l=="string")u.src=l;else if(l instanceof Blob)u.src=URL.createObjectURL(l);else if(l instanceof HTMLVideoElement)u.src=l.src;else throw new Error("Invalid URL or video element provided.");if(await new Promise($=>u.onloadedmetadata=$),u.seekable.start(0)===u.seekable.end(0)){const v=await(await fetch(u.src)).blob();u.src=URL.createObjectURL(v),await new Promise(T=>u.onloadedmetadata=T)}const _=u.duration;let f,w;c!=null?(f=c,w=c===1?0:_/(c-1)):(w=1/p,f=Math.floor(_/w));let I=[];for(let $=0;$<f;++$)I.push(c===1?_/2:$*w);const M=document.createElement("canvas");M.width=u.videoWidth,M.height=u.videoHeight;const y=M.getContext("2d",{willReadFrequently:!0});for(const $ of I){u.currentTime=$,await new Promise(x=>{u.onseeked=x}),y.drawImage(u,0,0,M.width,M.height);const v=y.getImageData(0,0,M.width,M.height),T=new s.RawImage(v.data,M.width,M.height,4),E=new i(T,$);d.push(E)}return u.remove(),new o(d,_)}})},_0={};function zt(e){var r=_0[e];if(r!==void 0)return r.exports;var t=_0[e]={exports:{}};return zC[e](t,t.exports,zt),t.exports}(()=>{var e=Object.getPrototypeOf?t=>Object.getPrototypeOf(t):t=>t.__proto__,r;zt.t=function(t,s){if(s&1&&(t=this(t)),s&8||typeof t=="object"&&t&&(s&4&&t.__esModule||s&16&&typeof t.then=="function"))return t;var n=Object.create(null);zt.r(n);var i={};r=r||[null,e({}),e([]),e(e)];for(var o=s&2&&t;typeof o=="object"&&!~r.indexOf(o);o=e(o))Object.getOwnPropertyNames(o).forEach(a=>i[a]=()=>t[a]);return i.default=()=>t,zt.d(n,i),n}})();zt.d=(e,r)=>{for(var t in r)zt.o(r,t)&&!zt.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})};zt.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);zt.r=e=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var m={};(()=>{/*!*****************************!*\
  !*** ./src/transformers.js ***!
  \*****************************/zt.r(m),zt.d(m,{ASTFeatureExtractor:()=>d.ASTFeatureExtractor,ASTForAudioClassification:()=>t.ASTForAudioClassification,ASTModel:()=>t.ASTModel,ASTPreTrainedModel:()=>t.ASTPreTrainedModel,AlbertForMaskedLM:()=>t.AlbertForMaskedLM,AlbertForQuestionAnswering:()=>t.AlbertForQuestionAnswering,AlbertForSequenceClassification:()=>t.AlbertForSequenceClassification,AlbertModel:()=>t.AlbertModel,AlbertPreTrainedModel:()=>t.AlbertPreTrainedModel,AlbertTokenizer:()=>s.AlbertTokenizer,ArceeForCausalLM:()=>t.ArceeForCausalLM,ArceeModel:()=>t.ArceeModel,ArceePreTrainedModel:()=>t.ArceePreTrainedModel,AudioClassificationPipeline:()=>r.AudioClassificationPipeline,AutoConfig:()=>n.AutoConfig,AutoFeatureExtractor:()=>u.AutoFeatureExtractor,AutoImageProcessor:()=>w.AutoImageProcessor,AutoModel:()=>t.AutoModel,AutoModelForAudioClassification:()=>t.AutoModelForAudioClassification,AutoModelForAudioFrameClassification:()=>t.AutoModelForAudioFrameClassification,AutoModelForAudioTextToText:()=>t.AutoModelForAudioTextToText,AutoModelForCTC:()=>t.AutoModelForCTC,AutoModelForCausalLM:()=>t.AutoModelForCausalLM,AutoModelForDepthEstimation:()=>t.AutoModelForDepthEstimation,AutoModelForDocumentQuestionAnswering:()=>t.AutoModelForDocumentQuestionAnswering,AutoModelForImageClassification:()=>t.AutoModelForImageClassification,AutoModelForImageFeatureExtraction:()=>t.AutoModelForImageFeatureExtraction,AutoModelForImageMatting:()=>t.AutoModelForImageMatting,AutoModelForImageSegmentation:()=>t.AutoModelForImageSegmentation,AutoModelForImageTextToText:()=>t.AutoModelForImageTextToText,AutoModelForImageToImage:()=>t.AutoModelForImageToImage,AutoModelForMaskGeneration:()=>t.AutoModelForMaskGeneration,AutoModelForMaskedLM:()=>t.AutoModelForMaskedLM,AutoModelForNormalEstimation:()=>t.AutoModelForNormalEstimation,AutoModelForObjectDetection:()=>t.AutoModelForObjectDetection,AutoModelForPoseEstimation:()=>t.AutoModelForPoseEstimation,AutoModelForQuestionAnswering:()=>t.AutoModelForQuestionAnswering,AutoModelForSemanticSegmentation:()=>t.AutoModelForSemanticSegmentation,AutoModelForSeq2SeqLM:()=>t.AutoModelForSeq2SeqLM,AutoModelForSequenceClassification:()=>t.AutoModelForSequenceClassification,AutoModelForSpeechSeq2Seq:()=>t.AutoModelForSpeechSeq2Seq,AutoModelForTextToSpectrogram:()=>t.AutoModelForTextToSpectrogram,AutoModelForTextToWaveform:()=>t.AutoModelForTextToWaveform,AutoModelForTokenClassification:()=>t.AutoModelForTokenClassification,AutoModelForUniversalSegmentation:()=>t.AutoModelForUniversalSegmentation,AutoModelForVision2Seq:()=>t.AutoModelForVision2Seq,AutoModelForXVector:()=>t.AutoModelForXVector,AutoModelForZeroShotObjectDetection:()=>t.AutoModelForZeroShotObjectDetection,AutoProcessor:()=>y.AutoProcessor,AutoTokenizer:()=>s.AutoTokenizer,AutomaticSpeechRecognitionPipeline:()=>r.AutomaticSpeechRecognitionPipeline,BackgroundRemovalPipeline:()=>r.BackgroundRemovalPipeline,BartForConditionalGeneration:()=>t.BartForConditionalGeneration,BartForSequenceClassification:()=>t.BartForSequenceClassification,BartModel:()=>t.BartModel,BartPretrainedModel:()=>t.BartPretrainedModel,BartTokenizer:()=>s.BartTokenizer,BaseModelOutput:()=>t.BaseModelOutput,BaseStreamer:()=>$.BaseStreamer,BeitFeatureExtractor:()=>f.BeitFeatureExtractor,BeitForImageClassification:()=>t.BeitForImageClassification,BeitModel:()=>t.BeitModel,BeitPreTrainedModel:()=>t.BeitPreTrainedModel,BertForMaskedLM:()=>t.BertForMaskedLM,BertForQuestionAnswering:()=>t.BertForQuestionAnswering,BertForSequenceClassification:()=>t.BertForSequenceClassification,BertForTokenClassification:()=>t.BertForTokenClassification,BertModel:()=>t.BertModel,BertPreTrainedModel:()=>t.BertPreTrainedModel,BertTokenizer:()=>s.BertTokenizer,BitImageProcessor:()=>f.BitImageProcessor,BlenderbotForConditionalGeneration:()=>t.BlenderbotForConditionalGeneration,BlenderbotModel:()=>t.BlenderbotModel,BlenderbotPreTrainedModel:()=>t.BlenderbotPreTrainedModel,BlenderbotSmallForConditionalGeneration:()=>t.BlenderbotSmallForConditionalGeneration,BlenderbotSmallModel:()=>t.BlenderbotSmallModel,BlenderbotSmallPreTrainedModel:()=>t.BlenderbotSmallPreTrainedModel,BlenderbotSmallTokenizer:()=>s.BlenderbotSmallTokenizer,BlenderbotTokenizer:()=>s.BlenderbotTokenizer,BloomForCausalLM:()=>t.BloomForCausalLM,BloomModel:()=>t.BloomModel,BloomPreTrainedModel:()=>t.BloomPreTrainedModel,BloomTokenizer:()=>s.BloomTokenizer,CLIPFeatureExtractor:()=>f.CLIPFeatureExtractor,CLIPImageProcessor:()=>f.CLIPImageProcessor,CLIPModel:()=>t.CLIPModel,CLIPPreTrainedModel:()=>t.CLIPPreTrainedModel,CLIPSegForImageSegmentation:()=>t.CLIPSegForImageSegmentation,CLIPSegModel:()=>t.CLIPSegModel,CLIPSegPreTrainedModel:()=>t.CLIPSegPreTrainedModel,CLIPTextModel:()=>t.CLIPTextModel,CLIPTextModelWithProjection:()=>t.CLIPTextModelWithProjection,CLIPTokenizer:()=>s.CLIPTokenizer,CLIPVisionModel:()=>t.CLIPVisionModel,CLIPVisionModelWithProjection:()=>t.CLIPVisionModelWithProjection,CamembertForMaskedLM:()=>t.CamembertForMaskedLM,CamembertForQuestionAnswering:()=>t.CamembertForQuestionAnswering,CamembertForSequenceClassification:()=>t.CamembertForSequenceClassification,CamembertForTokenClassification:()=>t.CamembertForTokenClassification,CamembertModel:()=>t.CamembertModel,CamembertPreTrainedModel:()=>t.CamembertPreTrainedModel,CamembertTokenizer:()=>s.CamembertTokenizer,CausalLMOutput:()=>t.CausalLMOutput,CausalLMOutputWithPast:()=>t.CausalLMOutputWithPast,ChineseCLIPFeatureExtractor:()=>f.ChineseCLIPFeatureExtractor,ChineseCLIPModel:()=>t.ChineseCLIPModel,ChineseCLIPPreTrainedModel:()=>t.ChineseCLIPPreTrainedModel,ClapAudioModelWithProjection:()=>t.ClapAudioModelWithProjection,ClapFeatureExtractor:()=>d.ClapFeatureExtractor,ClapModel:()=>t.ClapModel,ClapPreTrainedModel:()=>t.ClapPreTrainedModel,ClapTextModelWithProjection:()=>t.ClapTextModelWithProjection,ClassifierFreeGuidanceLogitsProcessor:()=>T.ClassifierFreeGuidanceLogitsProcessor,CodeGenForCausalLM:()=>t.CodeGenForCausalLM,CodeGenModel:()=>t.CodeGenModel,CodeGenPreTrainedModel:()=>t.CodeGenPreTrainedModel,CodeGenTokenizer:()=>s.CodeGenTokenizer,CodeLlamaTokenizer:()=>s.CodeLlamaTokenizer,CohereForCausalLM:()=>t.CohereForCausalLM,CohereModel:()=>t.CohereModel,CoherePreTrainedModel:()=>t.CoherePreTrainedModel,CohereTokenizer:()=>s.CohereTokenizer,ConvBertForMaskedLM:()=>t.ConvBertForMaskedLM,ConvBertForQuestionAnswering:()=>t.ConvBertForQuestionAnswering,ConvBertForSequenceClassification:()=>t.ConvBertForSequenceClassification,ConvBertForTokenClassification:()=>t.ConvBertForTokenClassification,ConvBertModel:()=>t.ConvBertModel,ConvBertPreTrainedModel:()=>t.ConvBertPreTrainedModel,ConvBertTokenizer:()=>s.ConvBertTokenizer,ConvNextFeatureExtractor:()=>f.ConvNextFeatureExtractor,ConvNextForImageClassification:()=>t.ConvNextForImageClassification,ConvNextImageProcessor:()=>f.ConvNextImageProcessor,ConvNextModel:()=>t.ConvNextModel,ConvNextPreTrainedModel:()=>t.ConvNextPreTrainedModel,ConvNextV2ForImageClassification:()=>t.ConvNextV2ForImageClassification,ConvNextV2Model:()=>t.ConvNextV2Model,ConvNextV2PreTrainedModel:()=>t.ConvNextV2PreTrainedModel,DFineForObjectDetection:()=>t.DFineForObjectDetection,DFineModel:()=>t.DFineModel,DFinePreTrainedModel:()=>t.DFinePreTrainedModel,DINOv3ConvNextModel:()=>t.DINOv3ConvNextModel,DINOv3ConvNextPreTrainedModel:()=>t.DINOv3ConvNextPreTrainedModel,DINOv3ViTImageProcessor:()=>f.DINOv3ViTImageProcessor,DINOv3ViTModel:()=>t.DINOv3ViTModel,DINOv3ViTPreTrainedModel:()=>t.DINOv3ViTPreTrainedModel,DPTFeatureExtractor:()=>f.DPTFeatureExtractor,DPTForDepthEstimation:()=>t.DPTForDepthEstimation,DPTImageProcessor:()=>f.DPTImageProcessor,DPTModel:()=>t.DPTModel,DPTPreTrainedModel:()=>t.DPTPreTrainedModel,DacDecoderModel:()=>t.DacDecoderModel,DacDecoderOutput:()=>t.DacDecoderOutput,DacEncoderModel:()=>t.DacEncoderModel,DacEncoderOutput:()=>t.DacEncoderOutput,DacFeatureExtractor:()=>d.DacFeatureExtractor,DacModel:()=>t.DacModel,DacPreTrainedModel:()=>t.DacPreTrainedModel,DataTypeMap:()=>l.DataTypeMap,DebertaForMaskedLM:()=>t.DebertaForMaskedLM,DebertaForQuestionAnswering:()=>t.DebertaForQuestionAnswering,DebertaForSequenceClassification:()=>t.DebertaForSequenceClassification,DebertaForTokenClassification:()=>t.DebertaForTokenClassification,DebertaModel:()=>t.DebertaModel,DebertaPreTrainedModel:()=>t.DebertaPreTrainedModel,DebertaTokenizer:()=>s.DebertaTokenizer,DebertaV2ForMaskedLM:()=>t.DebertaV2ForMaskedLM,DebertaV2ForQuestionAnswering:()=>t.DebertaV2ForQuestionAnswering,DebertaV2ForSequenceClassification:()=>t.DebertaV2ForSequenceClassification,DebertaV2ForTokenClassification:()=>t.DebertaV2ForTokenClassification,DebertaV2Model:()=>t.DebertaV2Model,DebertaV2PreTrainedModel:()=>t.DebertaV2PreTrainedModel,DebertaV2Tokenizer:()=>s.DebertaV2Tokenizer,DecisionTransformerModel:()=>t.DecisionTransformerModel,DecisionTransformerPreTrainedModel:()=>t.DecisionTransformerPreTrainedModel,DeiTFeatureExtractor:()=>f.DeiTFeatureExtractor,DeiTForImageClassification:()=>t.DeiTForImageClassification,DeiTImageProcessor:()=>f.DeiTImageProcessor,DeiTModel:()=>t.DeiTModel,DeiTPreTrainedModel:()=>t.DeiTPreTrainedModel,DepthAnythingForDepthEstimation:()=>t.DepthAnythingForDepthEstimation,DepthAnythingPreTrainedModel:()=>t.DepthAnythingPreTrainedModel,DepthEstimationPipeline:()=>r.DepthEstimationPipeline,DepthProForDepthEstimation:()=>t.DepthProForDepthEstimation,DepthProPreTrainedModel:()=>t.DepthProPreTrainedModel,DetrFeatureExtractor:()=>f.DetrFeatureExtractor,DetrForObjectDetection:()=>t.DetrForObjectDetection,DetrForSegmentation:()=>t.DetrForSegmentation,DetrImageProcessor:()=>f.DetrImageProcessor,DetrModel:()=>t.DetrModel,DetrObjectDetectionOutput:()=>t.DetrObjectDetectionOutput,DetrPreTrainedModel:()=>t.DetrPreTrainedModel,DetrSegmentationOutput:()=>t.DetrSegmentationOutput,Dinov2ForImageClassification:()=>t.Dinov2ForImageClassification,Dinov2Model:()=>t.Dinov2Model,Dinov2PreTrainedModel:()=>t.Dinov2PreTrainedModel,Dinov2WithRegistersForImageClassification:()=>t.Dinov2WithRegistersForImageClassification,Dinov2WithRegistersModel:()=>t.Dinov2WithRegistersModel,Dinov2WithRegistersPreTrainedModel:()=>t.Dinov2WithRegistersPreTrainedModel,DistilBertForMaskedLM:()=>t.DistilBertForMaskedLM,DistilBertForQuestionAnswering:()=>t.DistilBertForQuestionAnswering,DistilBertForSequenceClassification:()=>t.DistilBertForSequenceClassification,DistilBertForTokenClassification:()=>t.DistilBertForTokenClassification,DistilBertModel:()=>t.DistilBertModel,DistilBertPreTrainedModel:()=>t.DistilBertPreTrainedModel,DistilBertTokenizer:()=>s.DistilBertTokenizer,DocumentQuestionAnsweringPipeline:()=>r.DocumentQuestionAnsweringPipeline,DonutFeatureExtractor:()=>f.DonutFeatureExtractor,DonutImageProcessor:()=>f.DonutImageProcessor,DonutSwinModel:()=>t.DonutSwinModel,DonutSwinPreTrainedModel:()=>t.DonutSwinPreTrainedModel,EfficientNetForImageClassification:()=>t.EfficientNetForImageClassification,EfficientNetImageProcessor:()=>f.EfficientNetImageProcessor,EfficientNetModel:()=>t.EfficientNetModel,EfficientNetPreTrainedModel:()=>t.EfficientNetPreTrainedModel,ElectraForMaskedLM:()=>t.ElectraForMaskedLM,ElectraForQuestionAnswering:()=>t.ElectraForQuestionAnswering,ElectraForSequenceClassification:()=>t.ElectraForSequenceClassification,ElectraForTokenClassification:()=>t.ElectraForTokenClassification,ElectraModel:()=>t.ElectraModel,ElectraPreTrainedModel:()=>t.ElectraPreTrainedModel,ElectraTokenizer:()=>s.ElectraTokenizer,EncodecFeatureExtractor:()=>d.EncodecFeatureExtractor,EosTokenCriteria:()=>v.EosTokenCriteria,Ernie4_5_ForCausalLM:()=>t.Ernie4_5_ForCausalLM,Ernie4_5_Model:()=>t.Ernie4_5_Model,Ernie4_5_PretrainedModel:()=>t.Ernie4_5_PretrainedModel,Ernie4_5_Tokenizer:()=>s.Ernie4_5_Tokenizer,EsmForMaskedLM:()=>t.EsmForMaskedLM,EsmForSequenceClassification:()=>t.EsmForSequenceClassification,EsmForTokenClassification:()=>t.EsmForTokenClassification,EsmModel:()=>t.EsmModel,EsmPreTrainedModel:()=>t.EsmPreTrainedModel,EsmTokenizer:()=>s.EsmTokenizer,ExaoneForCausalLM:()=>t.ExaoneForCausalLM,ExaoneModel:()=>t.ExaoneModel,ExaonePreTrainedModel:()=>t.ExaonePreTrainedModel,FFT:()=>c.FFT,FalconForCausalLM:()=>t.FalconForCausalLM,FalconModel:()=>t.FalconModel,FalconPreTrainedModel:()=>t.FalconPreTrainedModel,FalconTokenizer:()=>s.FalconTokenizer,FastViTForImageClassification:()=>t.FastViTForImageClassification,FastViTModel:()=>t.FastViTModel,FastViTPreTrainedModel:()=>t.FastViTPreTrainedModel,FeatureExtractionPipeline:()=>r.FeatureExtractionPipeline,FeatureExtractor:()=>p.FeatureExtractor,FillMaskPipeline:()=>r.FillMaskPipeline,Florence2ForConditionalGeneration:()=>t.Florence2ForConditionalGeneration,Florence2PreTrainedModel:()=>t.Florence2PreTrainedModel,Florence2Processor:()=>M.Florence2Processor,ForcedBOSTokenLogitsProcessor:()=>T.ForcedBOSTokenLogitsProcessor,ForcedEOSTokenLogitsProcessor:()=>T.ForcedEOSTokenLogitsProcessor,GLPNFeatureExtractor:()=>f.GLPNFeatureExtractor,GLPNForDepthEstimation:()=>t.GLPNForDepthEstimation,GLPNModel:()=>t.GLPNModel,GLPNPreTrainedModel:()=>t.GLPNPreTrainedModel,GPT2LMHeadModel:()=>t.GPT2LMHeadModel,GPT2Model:()=>t.GPT2Model,GPT2PreTrainedModel:()=>t.GPT2PreTrainedModel,GPT2Tokenizer:()=>s.GPT2Tokenizer,GPTBigCodeForCausalLM:()=>t.GPTBigCodeForCausalLM,GPTBigCodeModel:()=>t.GPTBigCodeModel,GPTBigCodePreTrainedModel:()=>t.GPTBigCodePreTrainedModel,GPTJForCausalLM:()=>t.GPTJForCausalLM,GPTJModel:()=>t.GPTJModel,GPTJPreTrainedModel:()=>t.GPTJPreTrainedModel,GPTNeoForCausalLM:()=>t.GPTNeoForCausalLM,GPTNeoModel:()=>t.GPTNeoModel,GPTNeoPreTrainedModel:()=>t.GPTNeoPreTrainedModel,GPTNeoXForCausalLM:()=>t.GPTNeoXForCausalLM,GPTNeoXModel:()=>t.GPTNeoXModel,GPTNeoXPreTrainedModel:()=>t.GPTNeoXPreTrainedModel,GPTNeoXTokenizer:()=>s.GPTNeoXTokenizer,Gemma2ForCausalLM:()=>t.Gemma2ForCausalLM,Gemma2Model:()=>t.Gemma2Model,Gemma2PreTrainedModel:()=>t.Gemma2PreTrainedModel,Gemma3ForCausalLM:()=>t.Gemma3ForCausalLM,Gemma3Model:()=>t.Gemma3Model,Gemma3PreTrainedModel:()=>t.Gemma3PreTrainedModel,Gemma3nAudioFeatureExtractor:()=>d.Gemma3nAudioFeatureExtractor,Gemma3nForConditionalGeneration:()=>t.Gemma3nForConditionalGeneration,Gemma3nPreTrainedModel:()=>t.Gemma3nPreTrainedModel,Gemma3nProcessor:()=>M.Gemma3nProcessor,GemmaForCausalLM:()=>t.GemmaForCausalLM,GemmaModel:()=>t.GemmaModel,GemmaPreTrainedModel:()=>t.GemmaPreTrainedModel,GemmaTokenizer:()=>s.GemmaTokenizer,GlmForCausalLM:()=>t.GlmForCausalLM,GlmModel:()=>t.GlmModel,GlmPreTrainedModel:()=>t.GlmPreTrainedModel,GraniteForCausalLM:()=>t.GraniteForCausalLM,GraniteModel:()=>t.GraniteModel,GranitePreTrainedModel:()=>t.GranitePreTrainedModel,Grok1Tokenizer:()=>s.Grok1Tokenizer,GroundingDinoForObjectDetection:()=>t.GroundingDinoForObjectDetection,GroundingDinoImageProcessor:()=>f.GroundingDinoImageProcessor,GroundingDinoPreTrainedModel:()=>t.GroundingDinoPreTrainedModel,GroundingDinoProcessor:()=>M.GroundingDinoProcessor,GroupViTModel:()=>t.GroupViTModel,GroupViTPreTrainedModel:()=>t.GroupViTPreTrainedModel,HeliumForCausalLM:()=>t.HeliumForCausalLM,HeliumModel:()=>t.HeliumModel,HeliumPreTrainedModel:()=>t.HeliumPreTrainedModel,HerbertTokenizer:()=>s.HerbertTokenizer,HieraForImageClassification:()=>t.HieraForImageClassification,HieraModel:()=>t.HieraModel,HieraPreTrainedModel:()=>t.HieraPreTrainedModel,HubertForCTC:()=>t.HubertForCTC,HubertForSequenceClassification:()=>t.HubertForSequenceClassification,HubertModel:()=>t.HubertModel,HubertPreTrainedModel:()=>t.HubertPreTrainedModel,IJepaForImageClassification:()=>t.IJepaForImageClassification,IJepaModel:()=>t.IJepaModel,IJepaPreTrainedModel:()=>t.IJepaPreTrainedModel,Idefics3ForConditionalGeneration:()=>t.Idefics3ForConditionalGeneration,Idefics3ImageProcessor:()=>f.Idefics3ImageProcessor,Idefics3PreTrainedModel:()=>t.Idefics3PreTrainedModel,Idefics3Processor:()=>M.Idefics3Processor,ImageClassificationPipeline:()=>r.ImageClassificationPipeline,ImageFeatureExtractionPipeline:()=>r.ImageFeatureExtractionPipeline,ImageFeatureExtractor:()=>d.ImageFeatureExtractor,ImageMattingOutput:()=>t.ImageMattingOutput,ImageProcessor:()=>_.ImageProcessor,ImageSegmentationPipeline:()=>r.ImageSegmentationPipeline,ImageToImagePipeline:()=>r.ImageToImagePipeline,ImageToTextPipeline:()=>r.ImageToTextPipeline,InterruptableStoppingCriteria:()=>v.InterruptableStoppingCriteria,JAISLMHeadModel:()=>t.JAISLMHeadModel,JAISModel:()=>t.JAISModel,JAISPreTrainedModel:()=>t.JAISPreTrainedModel,JinaCLIPImageProcessor:()=>f.JinaCLIPImageProcessor,JinaCLIPModel:()=>t.JinaCLIPModel,JinaCLIPPreTrainedModel:()=>t.JinaCLIPPreTrainedModel,JinaCLIPProcessor:()=>M.JinaCLIPProcessor,JinaCLIPTextModel:()=>t.JinaCLIPTextModel,JinaCLIPVisionModel:()=>t.JinaCLIPVisionModel,Lfm2ForCausalLM:()=>t.Lfm2ForCausalLM,Lfm2Model:()=>t.Lfm2Model,Lfm2PreTrainedModel:()=>t.Lfm2PreTrainedModel,LiteWhisperForConditionalGeneration:()=>t.LiteWhisperForConditionalGeneration,LlamaForCausalLM:()=>t.LlamaForCausalLM,LlamaModel:()=>t.LlamaModel,LlamaPreTrainedModel:()=>t.LlamaPreTrainedModel,LlamaTokenizer:()=>s.LlamaTokenizer,LlavaForConditionalGeneration:()=>t.LlavaForConditionalGeneration,LlavaOnevisionForConditionalGeneration:()=>t.LlavaOnevisionForConditionalGeneration,LlavaOnevisionImageProcessor:()=>f.LlavaOnevisionImageProcessor,LlavaPreTrainedModel:()=>t.LlavaPreTrainedModel,LlavaProcessor:()=>M.LlavaProcessor,LlavaQwen2ForCausalLM:()=>t.LlavaQwen2ForCausalLM,LogitsProcessor:()=>T.LogitsProcessor,LogitsProcessorList:()=>T.LogitsProcessorList,LogitsWarper:()=>T.LogitsWarper,LongT5ForConditionalGeneration:()=>t.LongT5ForConditionalGeneration,LongT5Model:()=>t.LongT5Model,LongT5PreTrainedModel:()=>t.LongT5PreTrainedModel,M2M100ForConditionalGeneration:()=>t.M2M100ForConditionalGeneration,M2M100Model:()=>t.M2M100Model,M2M100PreTrainedModel:()=>t.M2M100PreTrainedModel,M2M100Tokenizer:()=>s.M2M100Tokenizer,MBart50Tokenizer:()=>s.MBart50Tokenizer,MBartForCausalLM:()=>t.MBartForCausalLM,MBartForConditionalGeneration:()=>t.MBartForConditionalGeneration,MBartForSequenceClassification:()=>t.MBartForSequenceClassification,MBartModel:()=>t.MBartModel,MBartPreTrainedModel:()=>t.MBartPreTrainedModel,MBartTokenizer:()=>s.MBartTokenizer,MPNetForMaskedLM:()=>t.MPNetForMaskedLM,MPNetForQuestionAnswering:()=>t.MPNetForQuestionAnswering,MPNetForSequenceClassification:()=>t.MPNetForSequenceClassification,MPNetForTokenClassification:()=>t.MPNetForTokenClassification,MPNetModel:()=>t.MPNetModel,MPNetPreTrainedModel:()=>t.MPNetPreTrainedModel,MPNetTokenizer:()=>s.MPNetTokenizer,MT5ForConditionalGeneration:()=>t.MT5ForConditionalGeneration,MT5Model:()=>t.MT5Model,MT5PreTrainedModel:()=>t.MT5PreTrainedModel,MarianMTModel:()=>t.MarianMTModel,MarianModel:()=>t.MarianModel,MarianPreTrainedModel:()=>t.MarianPreTrainedModel,MarianTokenizer:()=>s.MarianTokenizer,Mask2FormerImageProcessor:()=>f.Mask2FormerImageProcessor,MaskFormerFeatureExtractor:()=>f.MaskFormerFeatureExtractor,MaskFormerForInstanceSegmentation:()=>t.MaskFormerForInstanceSegmentation,MaskFormerImageProcessor:()=>f.MaskFormerImageProcessor,MaskFormerModel:()=>t.MaskFormerModel,MaskFormerPreTrainedModel:()=>t.MaskFormerPreTrainedModel,MaskedLMOutput:()=>t.MaskedLMOutput,MaxLengthCriteria:()=>v.MaxLengthCriteria,Metric3DForDepthEstimation:()=>t.Metric3DForDepthEstimation,Metric3DPreTrainedModel:()=>t.Metric3DPreTrainedModel,Metric3Dv2ForDepthEstimation:()=>t.Metric3Dv2ForDepthEstimation,Metric3Dv2PreTrainedModel:()=>t.Metric3Dv2PreTrainedModel,MgpstrForSceneTextRecognition:()=>t.MgpstrForSceneTextRecognition,MgpstrModelOutput:()=>t.MgpstrModelOutput,MgpstrPreTrainedModel:()=>t.MgpstrPreTrainedModel,MgpstrProcessor:()=>M.MgpstrProcessor,MgpstrTokenizer:()=>s.MgpstrTokenizer,MimiDecoderModel:()=>t.MimiDecoderModel,MimiDecoderOutput:()=>t.MimiDecoderOutput,MimiEncoderModel:()=>t.MimiEncoderModel,MimiEncoderOutput:()=>t.MimiEncoderOutput,MimiModel:()=>t.MimiModel,MimiPreTrainedModel:()=>t.MimiPreTrainedModel,MinLengthLogitsProcessor:()=>T.MinLengthLogitsProcessor,MinNewTokensLengthLogitsProcessor:()=>T.MinNewTokensLengthLogitsProcessor,MistralForCausalLM:()=>t.MistralForCausalLM,MistralModel:()=>t.MistralModel,MistralPreTrainedModel:()=>t.MistralPreTrainedModel,MobileBertForMaskedLM:()=>t.MobileBertForMaskedLM,MobileBertForQuestionAnswering:()=>t.MobileBertForQuestionAnswering,MobileBertForSequenceClassification:()=>t.MobileBertForSequenceClassification,MobileBertModel:()=>t.MobileBertModel,MobileBertPreTrainedModel:()=>t.MobileBertPreTrainedModel,MobileBertTokenizer:()=>s.MobileBertTokenizer,MobileLLMForCausalLM:()=>t.MobileLLMForCausalLM,MobileLLMModel:()=>t.MobileLLMModel,MobileLLMPreTrainedModel:()=>t.MobileLLMPreTrainedModel,MobileNetV1FeatureExtractor:()=>f.MobileNetV1FeatureExtractor,MobileNetV1ForImageClassification:()=>t.MobileNetV1ForImageClassification,MobileNetV1ForSemanticSegmentation:()=>t.MobileNetV1ForSemanticSegmentation,MobileNetV1ImageProcessor:()=>f.MobileNetV1ImageProcessor,MobileNetV1Model:()=>t.MobileNetV1Model,MobileNetV1PreTrainedModel:()=>t.MobileNetV1PreTrainedModel,MobileNetV2FeatureExtractor:()=>f.MobileNetV2FeatureExtractor,MobileNetV2ForImageClassification:()=>t.MobileNetV2ForImageClassification,MobileNetV2ForSemanticSegmentation:()=>t.MobileNetV2ForSemanticSegmentation,MobileNetV2ImageProcessor:()=>f.MobileNetV2ImageProcessor,MobileNetV2Model:()=>t.MobileNetV2Model,MobileNetV2PreTrainedModel:()=>t.MobileNetV2PreTrainedModel,MobileNetV3FeatureExtractor:()=>f.MobileNetV3FeatureExtractor,MobileNetV3ForImageClassification:()=>t.MobileNetV3ForImageClassification,MobileNetV3ForSemanticSegmentation:()=>t.MobileNetV3ForSemanticSegmentation,MobileNetV3ImageProcessor:()=>f.MobileNetV3ImageProcessor,MobileNetV3Model:()=>t.MobileNetV3Model,MobileNetV3PreTrainedModel:()=>t.MobileNetV3PreTrainedModel,MobileNetV4FeatureExtractor:()=>f.MobileNetV4FeatureExtractor,MobileNetV4ForImageClassification:()=>t.MobileNetV4ForImageClassification,MobileNetV4ForSemanticSegmentation:()=>t.MobileNetV4ForSemanticSegmentation,MobileNetV4ImageProcessor:()=>f.MobileNetV4ImageProcessor,MobileNetV4Model:()=>t.MobileNetV4Model,MobileNetV4PreTrainedModel:()=>t.MobileNetV4PreTrainedModel,MobileViTFeatureExtractor:()=>f.MobileViTFeatureExtractor,MobileViTForImageClassification:()=>t.MobileViTForImageClassification,MobileViTImageProcessor:()=>f.MobileViTImageProcessor,MobileViTModel:()=>t.MobileViTModel,MobileViTPreTrainedModel:()=>t.MobileViTPreTrainedModel,MobileViTV2ForImageClassification:()=>t.MobileViTV2ForImageClassification,MobileViTV2Model:()=>t.MobileViTV2Model,MobileViTV2PreTrainedModel:()=>t.MobileViTV2PreTrainedModel,ModelOutput:()=>t.ModelOutput,ModernBertDecoderForCausalLM:()=>t.ModernBertDecoderForCausalLM,ModernBertDecoderModel:()=>t.ModernBertDecoderModel,ModernBertDecoderPreTrainedModel:()=>t.ModernBertDecoderPreTrainedModel,ModernBertForMaskedLM:()=>t.ModernBertForMaskedLM,ModernBertForSequenceClassification:()=>t.ModernBertForSequenceClassification,ModernBertForTokenClassification:()=>t.ModernBertForTokenClassification,ModernBertModel:()=>t.ModernBertModel,ModernBertPreTrainedModel:()=>t.ModernBertPreTrainedModel,Moondream1ForConditionalGeneration:()=>t.Moondream1ForConditionalGeneration,MoonshineFeatureExtractor:()=>d.MoonshineFeatureExtractor,MoonshineForConditionalGeneration:()=>t.MoonshineForConditionalGeneration,MoonshineModel:()=>t.MoonshineModel,MoonshinePreTrainedModel:()=>t.MoonshinePreTrainedModel,MoonshineProcessor:()=>M.MoonshineProcessor,MptForCausalLM:()=>t.MptForCausalLM,MptModel:()=>t.MptModel,MptPreTrainedModel:()=>t.MptPreTrainedModel,MultiModalityCausalLM:()=>t.MultiModalityCausalLM,MultiModalityPreTrainedModel:()=>t.MultiModalityPreTrainedModel,MusicgenForCausalLM:()=>t.MusicgenForCausalLM,MusicgenForConditionalGeneration:()=>t.MusicgenForConditionalGeneration,MusicgenModel:()=>t.MusicgenModel,MusicgenPreTrainedModel:()=>t.MusicgenPreTrainedModel,NeoBertForMaskedLM:()=>t.NeoBertForMaskedLM,NeoBertForQuestionAnswering:()=>t.NeoBertForQuestionAnswering,NeoBertForSequenceClassification:()=>t.NeoBertForSequenceClassification,NeoBertForTokenClassification:()=>t.NeoBertForTokenClassification,NeoBertModel:()=>t.NeoBertModel,NeoBertPreTrainedModel:()=>t.NeoBertPreTrainedModel,NllbTokenizer:()=>s.NllbTokenizer,NoBadWordsLogitsProcessor:()=>T.NoBadWordsLogitsProcessor,NoRepeatNGramLogitsProcessor:()=>T.NoRepeatNGramLogitsProcessor,NomicBertModel:()=>t.NomicBertModel,NomicBertPreTrainedModel:()=>t.NomicBertPreTrainedModel,NougatImageProcessor:()=>f.NougatImageProcessor,NougatTokenizer:()=>s.NougatTokenizer,OPTForCausalLM:()=>t.OPTForCausalLM,OPTModel:()=>t.OPTModel,OPTPreTrainedModel:()=>t.OPTPreTrainedModel,ObjectDetectionPipeline:()=>r.ObjectDetectionPipeline,Olmo2ForCausalLM:()=>t.Olmo2ForCausalLM,Olmo2Model:()=>t.Olmo2Model,Olmo2PreTrainedModel:()=>t.Olmo2PreTrainedModel,OlmoForCausalLM:()=>t.OlmoForCausalLM,OlmoModel:()=>t.OlmoModel,OlmoPreTrainedModel:()=>t.OlmoPreTrainedModel,OpenELMForCausalLM:()=>t.OpenELMForCausalLM,OpenELMModel:()=>t.OpenELMModel,OpenELMPreTrainedModel:()=>t.OpenELMPreTrainedModel,OwlViTFeatureExtractor:()=>f.OwlViTFeatureExtractor,OwlViTForObjectDetection:()=>t.OwlViTForObjectDetection,OwlViTImageProcessor:()=>f.OwlViTImageProcessor,OwlViTModel:()=>t.OwlViTModel,OwlViTPreTrainedModel:()=>t.OwlViTPreTrainedModel,OwlViTProcessor:()=>M.OwlViTProcessor,Owlv2ForObjectDetection:()=>t.Owlv2ForObjectDetection,Owlv2ImageProcessor:()=>f.Owlv2ImageProcessor,Owlv2Model:()=>t.Owlv2Model,Owlv2PreTrainedModel:()=>t.Owlv2PreTrainedModel,PaliGemmaForConditionalGeneration:()=>t.PaliGemmaForConditionalGeneration,PaliGemmaPreTrainedModel:()=>t.PaliGemmaPreTrainedModel,PaliGemmaProcessor:()=>M.PaliGemmaProcessor,PatchTSMixerForPrediction:()=>t.PatchTSMixerForPrediction,PatchTSMixerModel:()=>t.PatchTSMixerModel,PatchTSMixerPreTrainedModel:()=>t.PatchTSMixerPreTrainedModel,PatchTSTForPrediction:()=>t.PatchTSTForPrediction,PatchTSTModel:()=>t.PatchTSTModel,PatchTSTPreTrainedModel:()=>t.PatchTSTPreTrainedModel,Phi3ForCausalLM:()=>t.Phi3ForCausalLM,Phi3Model:()=>t.Phi3Model,Phi3PreTrainedModel:()=>t.Phi3PreTrainedModel,Phi3VForCausalLM:()=>t.Phi3VForCausalLM,Phi3VImageProcessor:()=>f.Phi3VImageProcessor,Phi3VPreTrainedModel:()=>t.Phi3VPreTrainedModel,Phi3VProcessor:()=>M.Phi3VProcessor,PhiForCausalLM:()=>t.PhiForCausalLM,PhiModel:()=>t.PhiModel,PhiPreTrainedModel:()=>t.PhiPreTrainedModel,Pipeline:()=>r.Pipeline,PreTrainedModel:()=>t.PreTrainedModel,PreTrainedTokenizer:()=>s.PreTrainedTokenizer,PretrainedConfig:()=>n.PretrainedConfig,PretrainedMixin:()=>t.PretrainedMixin,Processor:()=>I.Processor,PvtForImageClassification:()=>t.PvtForImageClassification,PvtImageProcessor:()=>f.PvtImageProcessor,PvtModel:()=>t.PvtModel,PvtPreTrainedModel:()=>t.PvtPreTrainedModel,PyAnnoteFeatureExtractor:()=>d.PyAnnoteFeatureExtractor,PyAnnoteForAudioFrameClassification:()=>t.PyAnnoteForAudioFrameClassification,PyAnnoteModel:()=>t.PyAnnoteModel,PyAnnotePreTrainedModel:()=>t.PyAnnotePreTrainedModel,PyAnnoteProcessor:()=>M.PyAnnoteProcessor,QuestionAnsweringModelOutput:()=>t.QuestionAnsweringModelOutput,QuestionAnsweringPipeline:()=>r.QuestionAnsweringPipeline,Qwen2ForCausalLM:()=>t.Qwen2ForCausalLM,Qwen2Model:()=>t.Qwen2Model,Qwen2PreTrainedModel:()=>t.Qwen2PreTrainedModel,Qwen2Tokenizer:()=>s.Qwen2Tokenizer,Qwen2VLForConditionalGeneration:()=>t.Qwen2VLForConditionalGeneration,Qwen2VLImageProcessor:()=>f.Qwen2VLImageProcessor,Qwen2VLPreTrainedModel:()=>t.Qwen2VLPreTrainedModel,Qwen2VLProcessor:()=>M.Qwen2VLProcessor,Qwen3ForCausalLM:()=>t.Qwen3ForCausalLM,Qwen3Model:()=>t.Qwen3Model,Qwen3PreTrainedModel:()=>t.Qwen3PreTrainedModel,RFDetrForObjectDetection:()=>t.RFDetrForObjectDetection,RFDetrModel:()=>t.RFDetrModel,RFDetrObjectDetectionOutput:()=>t.RFDetrObjectDetectionOutput,RFDetrPreTrainedModel:()=>t.RFDetrPreTrainedModel,RTDetrForObjectDetection:()=>t.RTDetrForObjectDetection,RTDetrImageProcessor:()=>f.RTDetrImageProcessor,RTDetrModel:()=>t.RTDetrModel,RTDetrObjectDetectionOutput:()=>t.RTDetrObjectDetectionOutput,RTDetrPreTrainedModel:()=>t.RTDetrPreTrainedModel,RTDetrV2ForObjectDetection:()=>t.RTDetrV2ForObjectDetection,RTDetrV2Model:()=>t.RTDetrV2Model,RTDetrV2ObjectDetectionOutput:()=>t.RTDetrV2ObjectDetectionOutput,RTDetrV2PreTrainedModel:()=>t.RTDetrV2PreTrainedModel,RawAudio:()=>i.RawAudio,RawImage:()=>o.RawImage,RawVideo:()=>a.RawVideo,RawVideoFrame:()=>a.RawVideoFrame,RepetitionPenaltyLogitsProcessor:()=>T.RepetitionPenaltyLogitsProcessor,ResNetForImageClassification:()=>t.ResNetForImageClassification,ResNetModel:()=>t.ResNetModel,ResNetPreTrainedModel:()=>t.ResNetPreTrainedModel,RoFormerForMaskedLM:()=>t.RoFormerForMaskedLM,RoFormerForQuestionAnswering:()=>t.RoFormerForQuestionAnswering,RoFormerForSequenceClassification:()=>t.RoFormerForSequenceClassification,RoFormerForTokenClassification:()=>t.RoFormerForTokenClassification,RoFormerModel:()=>t.RoFormerModel,RoFormerPreTrainedModel:()=>t.RoFormerPreTrainedModel,RoFormerTokenizer:()=>s.RoFormerTokenizer,RobertaForMaskedLM:()=>t.RobertaForMaskedLM,RobertaForQuestionAnswering:()=>t.RobertaForQuestionAnswering,RobertaForSequenceClassification:()=>t.RobertaForSequenceClassification,RobertaForTokenClassification:()=>t.RobertaForTokenClassification,RobertaModel:()=>t.RobertaModel,RobertaPreTrainedModel:()=>t.RobertaPreTrainedModel,RobertaTokenizer:()=>s.RobertaTokenizer,SamImageProcessor:()=>f.SamImageProcessor,SamImageSegmentationOutput:()=>t.SamImageSegmentationOutput,SamModel:()=>t.SamModel,SamPreTrainedModel:()=>t.SamPreTrainedModel,SamProcessor:()=>M.SamProcessor,SapiensForDepthEstimation:()=>t.SapiensForDepthEstimation,SapiensForNormalEstimation:()=>t.SapiensForNormalEstimation,SapiensForSemanticSegmentation:()=>t.SapiensForSemanticSegmentation,SapiensPreTrainedModel:()=>t.SapiensPreTrainedModel,SeamlessM4TFeatureExtractor:()=>d.SeamlessM4TFeatureExtractor,SegformerFeatureExtractor:()=>f.SegformerFeatureExtractor,SegformerForImageClassification:()=>t.SegformerForImageClassification,SegformerForSemanticSegmentation:()=>t.SegformerForSemanticSegmentation,SegformerImageProcessor:()=>f.SegformerImageProcessor,SegformerModel:()=>t.SegformerModel,SegformerPreTrainedModel:()=>t.SegformerPreTrainedModel,Seq2SeqLMOutput:()=>t.Seq2SeqLMOutput,SequenceClassifierOutput:()=>t.SequenceClassifierOutput,SiglipImageProcessor:()=>f.SiglipImageProcessor,SiglipModel:()=>t.SiglipModel,SiglipPreTrainedModel:()=>t.SiglipPreTrainedModel,SiglipTextModel:()=>t.SiglipTextModel,SiglipTokenizer:()=>s.SiglipTokenizer,SiglipVisionModel:()=>t.SiglipVisionModel,SmolLM3ForCausalLM:()=>t.SmolLM3ForCausalLM,SmolLM3Model:()=>t.SmolLM3Model,SmolLM3PreTrainedModel:()=>t.SmolLM3PreTrainedModel,SmolVLMForConditionalGeneration:()=>t.SmolVLMForConditionalGeneration,SmolVLMImageProcessor:()=>f.SmolVLMImageProcessor,SmolVLMProcessor:()=>M.SmolVLMProcessor,SnacDecoderModel:()=>t.SnacDecoderModel,SnacEncoderModel:()=>t.SnacEncoderModel,SnacFeatureExtractor:()=>d.SnacFeatureExtractor,SnacModel:()=>t.SnacModel,SnacPreTrainedModel:()=>t.SnacPreTrainedModel,SpeechT5FeatureExtractor:()=>d.SpeechT5FeatureExtractor,SpeechT5ForSpeechToText:()=>t.SpeechT5ForSpeechToText,SpeechT5ForTextToSpeech:()=>t.SpeechT5ForTextToSpeech,SpeechT5HifiGan:()=>t.SpeechT5HifiGan,SpeechT5Model:()=>t.SpeechT5Model,SpeechT5PreTrainedModel:()=>t.SpeechT5PreTrainedModel,SpeechT5Processor:()=>M.SpeechT5Processor,SpeechT5Tokenizer:()=>s.SpeechT5Tokenizer,SqueezeBertForMaskedLM:()=>t.SqueezeBertForMaskedLM,SqueezeBertForQuestionAnswering:()=>t.SqueezeBertForQuestionAnswering,SqueezeBertForSequenceClassification:()=>t.SqueezeBertForSequenceClassification,SqueezeBertModel:()=>t.SqueezeBertModel,SqueezeBertPreTrainedModel:()=>t.SqueezeBertPreTrainedModel,SqueezeBertTokenizer:()=>s.SqueezeBertTokenizer,StableLmForCausalLM:()=>t.StableLmForCausalLM,StableLmModel:()=>t.StableLmModel,StableLmPreTrainedModel:()=>t.StableLmPreTrainedModel,Starcoder2ForCausalLM:()=>t.Starcoder2ForCausalLM,Starcoder2Model:()=>t.Starcoder2Model,Starcoder2PreTrainedModel:()=>t.Starcoder2PreTrainedModel,StoppingCriteria:()=>v.StoppingCriteria,StoppingCriteriaList:()=>v.StoppingCriteriaList,StyleTextToSpeech2Model:()=>t.StyleTextToSpeech2Model,StyleTextToSpeech2PreTrainedModel:()=>t.StyleTextToSpeech2PreTrainedModel,SummarizationPipeline:()=>r.SummarizationPipeline,SuppressTokensAtBeginLogitsProcessor:()=>T.SuppressTokensAtBeginLogitsProcessor,Swin2SRForImageSuperResolution:()=>t.Swin2SRForImageSuperResolution,Swin2SRImageProcessor:()=>f.Swin2SRImageProcessor,Swin2SRModel:()=>t.Swin2SRModel,Swin2SRPreTrainedModel:()=>t.Swin2SRPreTrainedModel,SwinForImageClassification:()=>t.SwinForImageClassification,SwinForSemanticSegmentation:()=>t.SwinForSemanticSegmentation,SwinModel:()=>t.SwinModel,SwinPreTrainedModel:()=>t.SwinPreTrainedModel,T5ForConditionalGeneration:()=>t.T5ForConditionalGeneration,T5Model:()=>t.T5Model,T5PreTrainedModel:()=>t.T5PreTrainedModel,T5Tokenizer:()=>s.T5Tokenizer,TableTransformerForObjectDetection:()=>t.TableTransformerForObjectDetection,TableTransformerModel:()=>t.TableTransformerModel,TableTransformerObjectDetectionOutput:()=>t.TableTransformerObjectDetectionOutput,TableTransformerPreTrainedModel:()=>t.TableTransformerPreTrainedModel,TemperatureLogitsWarper:()=>T.TemperatureLogitsWarper,Tensor:()=>l.Tensor,Text2TextGenerationPipeline:()=>r.Text2TextGenerationPipeline,TextClassificationPipeline:()=>r.TextClassificationPipeline,TextGenerationPipeline:()=>r.TextGenerationPipeline,TextStreamer:()=>$.TextStreamer,TextToAudioPipeline:()=>r.TextToAudioPipeline,TokenClassificationPipeline:()=>r.TokenClassificationPipeline,TokenClassifierOutput:()=>t.TokenClassifierOutput,TokenizerModel:()=>s.TokenizerModel,TopKLogitsWarper:()=>T.TopKLogitsWarper,TopPLogitsWarper:()=>T.TopPLogitsWarper,TrOCRForCausalLM:()=>t.TrOCRForCausalLM,TrOCRPreTrainedModel:()=>t.TrOCRPreTrainedModel,TranslationPipeline:()=>r.TranslationPipeline,UltravoxModel:()=>t.UltravoxModel,UltravoxPreTrainedModel:()=>t.UltravoxPreTrainedModel,UltravoxProcessor:()=>M.UltravoxProcessor,UniSpeechForCTC:()=>t.UniSpeechForCTC,UniSpeechForSequenceClassification:()=>t.UniSpeechForSequenceClassification,UniSpeechModel:()=>t.UniSpeechModel,UniSpeechPreTrainedModel:()=>t.UniSpeechPreTrainedModel,UniSpeechSatForAudioFrameClassification:()=>t.UniSpeechSatForAudioFrameClassification,UniSpeechSatForCTC:()=>t.UniSpeechSatForCTC,UniSpeechSatForSequenceClassification:()=>t.UniSpeechSatForSequenceClassification,UniSpeechSatModel:()=>t.UniSpeechSatModel,UniSpeechSatPreTrainedModel:()=>t.UniSpeechSatPreTrainedModel,VLChatProcessor:()=>M.VLChatProcessor,VLMImageProcessor:()=>f.VLMImageProcessor,ViTFeatureExtractor:()=>f.ViTFeatureExtractor,ViTForImageClassification:()=>t.ViTForImageClassification,ViTImageProcessor:()=>f.ViTImageProcessor,ViTMAEModel:()=>t.ViTMAEModel,ViTMAEPreTrainedModel:()=>t.ViTMAEPreTrainedModel,ViTMSNForImageClassification:()=>t.ViTMSNForImageClassification,ViTMSNModel:()=>t.ViTMSNModel,ViTMSNPreTrainedModel:()=>t.ViTMSNPreTrainedModel,ViTModel:()=>t.ViTModel,ViTPreTrainedModel:()=>t.ViTPreTrainedModel,VisionEncoderDecoderModel:()=>t.VisionEncoderDecoderModel,VitMatteForImageMatting:()=>t.VitMatteForImageMatting,VitMatteImageProcessor:()=>f.VitMatteImageProcessor,VitMattePreTrainedModel:()=>t.VitMattePreTrainedModel,VitPoseForPoseEstimation:()=>t.VitPoseForPoseEstimation,VitPoseImageProcessor:()=>f.VitPoseImageProcessor,VitPosePreTrainedModel:()=>t.VitPosePreTrainedModel,VitsModel:()=>t.VitsModel,VitsModelOutput:()=>t.VitsModelOutput,VitsPreTrainedModel:()=>t.VitsPreTrainedModel,VitsTokenizer:()=>s.VitsTokenizer,VoxtralForConditionalGeneration:()=>t.VoxtralForConditionalGeneration,VoxtralProcessor:()=>M.VoxtralProcessor,Wav2Vec2BertForCTC:()=>t.Wav2Vec2BertForCTC,Wav2Vec2BertForSequenceClassification:()=>t.Wav2Vec2BertForSequenceClassification,Wav2Vec2BertModel:()=>t.Wav2Vec2BertModel,Wav2Vec2BertPreTrainedModel:()=>t.Wav2Vec2BertPreTrainedModel,Wav2Vec2CTCTokenizer:()=>s.Wav2Vec2CTCTokenizer,Wav2Vec2FeatureExtractor:()=>d.Wav2Vec2FeatureExtractor,Wav2Vec2ForAudioFrameClassification:()=>t.Wav2Vec2ForAudioFrameClassification,Wav2Vec2ForCTC:()=>t.Wav2Vec2ForCTC,Wav2Vec2ForSequenceClassification:()=>t.Wav2Vec2ForSequenceClassification,Wav2Vec2Model:()=>t.Wav2Vec2Model,Wav2Vec2PreTrainedModel:()=>t.Wav2Vec2PreTrainedModel,Wav2Vec2Processor:()=>M.Wav2Vec2Processor,Wav2Vec2ProcessorWithLM:()=>M.Wav2Vec2ProcessorWithLM,WavLMForAudioFrameClassification:()=>t.WavLMForAudioFrameClassification,WavLMForCTC:()=>t.WavLMForCTC,WavLMForSequenceClassification:()=>t.WavLMForSequenceClassification,WavLMForXVector:()=>t.WavLMForXVector,WavLMModel:()=>t.WavLMModel,WavLMPreTrainedModel:()=>t.WavLMPreTrainedModel,WeSpeakerFeatureExtractor:()=>d.WeSpeakerFeatureExtractor,WeSpeakerResNetModel:()=>t.WeSpeakerResNetModel,WeSpeakerResNetPreTrainedModel:()=>t.WeSpeakerResNetPreTrainedModel,WhisperFeatureExtractor:()=>d.WhisperFeatureExtractor,WhisperForConditionalGeneration:()=>t.WhisperForConditionalGeneration,WhisperModel:()=>t.WhisperModel,WhisperPreTrainedModel:()=>t.WhisperPreTrainedModel,WhisperProcessor:()=>M.WhisperProcessor,WhisperTextStreamer:()=>$.WhisperTextStreamer,WhisperTimeStampLogitsProcessor:()=>T.WhisperTimeStampLogitsProcessor,WhisperTokenizer:()=>s.WhisperTokenizer,XLMForQuestionAnswering:()=>t.XLMForQuestionAnswering,XLMForSequenceClassification:()=>t.XLMForSequenceClassification,XLMForTokenClassification:()=>t.XLMForTokenClassification,XLMModel:()=>t.XLMModel,XLMPreTrainedModel:()=>t.XLMPreTrainedModel,XLMRobertaForMaskedLM:()=>t.XLMRobertaForMaskedLM,XLMRobertaForQuestionAnswering:()=>t.XLMRobertaForQuestionAnswering,XLMRobertaForSequenceClassification:()=>t.XLMRobertaForSequenceClassification,XLMRobertaForTokenClassification:()=>t.XLMRobertaForTokenClassification,XLMRobertaModel:()=>t.XLMRobertaModel,XLMRobertaPreTrainedModel:()=>t.XLMRobertaPreTrainedModel,XLMRobertaTokenizer:()=>s.XLMRobertaTokenizer,XLMTokenizer:()=>s.XLMTokenizer,XLMWithLMHeadModel:()=>t.XLMWithLMHeadModel,XVectorOutput:()=>t.XVectorOutput,YolosFeatureExtractor:()=>f.YolosFeatureExtractor,YolosForObjectDetection:()=>t.YolosForObjectDetection,YolosImageProcessor:()=>f.YolosImageProcessor,YolosModel:()=>t.YolosModel,YolosObjectDetectionOutput:()=>t.YolosObjectDetectionOutput,YolosPreTrainedModel:()=>t.YolosPreTrainedModel,ZeroShotAudioClassificationPipeline:()=>r.ZeroShotAudioClassificationPipeline,ZeroShotClassificationPipeline:()=>r.ZeroShotClassificationPipeline,ZeroShotImageClassificationPipeline:()=>r.ZeroShotImageClassificationPipeline,ZeroShotObjectDetectionPipeline:()=>r.ZeroShotObjectDetectionPipeline,bankers_round:()=>c.bankers_round,cat:()=>l.cat,cos_sim:()=>c.cos_sim,dot:()=>c.dot,dynamic_time_warping:()=>c.dynamic_time_warping,env:()=>e.env,full:()=>l.full,full_like:()=>l.full_like,getCacheShapes:()=>n.getCacheShapes,hamming:()=>i.hamming,hanning:()=>i.hanning,interpolate:()=>l.interpolate,interpolate_4d:()=>l.interpolate_4d,interpolate_data:()=>c.interpolate_data,is_chinese_char:()=>s.is_chinese_char,layer_norm:()=>l.layer_norm,load_image:()=>o.load_image,load_video:()=>a.load_video,log_softmax:()=>c.log_softmax,magnitude:()=>c.magnitude,matmul:()=>l.matmul,max:()=>c.max,mean:()=>l.mean,mean_pooling:()=>l.mean_pooling,medianFilter:()=>c.medianFilter,mel_filter_bank:()=>i.mel_filter_bank,min:()=>c.min,ones:()=>l.ones,ones_like:()=>l.ones_like,permute:()=>l.permute,permute_data:()=>c.permute_data,pipeline:()=>r.pipeline,quantize_embeddings:()=>l.quantize_embeddings,rand:()=>l.rand,read_audio:()=>i.read_audio,rfft:()=>l.rfft,round:()=>c.round,slice:()=>l.slice,softmax:()=>c.softmax,spectrogram:()=>i.spectrogram,stack:()=>l.stack,std_mean:()=>l.std_mean,topk:()=>l.topk,window_function:()=>i.window_function,zeros:()=>l.zeros,zeros_like:()=>l.zeros_like});var e=zt("./src/env.js"),r=zt("./src/pipelines.js"),t=zt("./src/models.js"),s=zt("./src/tokenizers.js"),n=zt("./src/configs.js"),i=zt("./src/utils/audio.js"),o=zt("./src/utils/image.js"),a=zt("./src/utils/video.js"),l=zt("./src/utils/tensor.js"),c=zt("./src/utils/maths.js"),p=zt("./src/base/feature_extraction_utils.js"),d=zt("./src/models/feature_extractors.js"),u=zt("./src/models/auto/feature_extraction_auto.js"),_=zt("./src/base/image_processors_utils.js"),f=zt("./src/models/image_processors.js"),w=zt("./src/models/auto/image_processing_auto.js"),I=zt("./src/base/processing_utils.js"),M=zt("./src/models/processors.js"),y=zt("./src/models/auto/processing_auto.js"),$=zt("./src/generation/streamers.js"),v=zt("./src/generation/stopping_criteria.js"),T=zt("./src/generation/logits_process.js")})();m.ASTFeatureExtractor;m.ASTForAudioClassification;m.ASTModel;m.ASTPreTrainedModel;m.AlbertForMaskedLM;m.AlbertForQuestionAnswering;m.AlbertForSequenceClassification;m.AlbertModel;m.AlbertPreTrainedModel;m.AlbertTokenizer;m.ArceeForCausalLM;m.ArceeModel;m.ArceePreTrainedModel;m.AudioClassificationPipeline;m.AutoConfig;m.AutoFeatureExtractor;m.AutoImageProcessor;var BC=m.AutoModel;m.AutoModelForAudioClassification;m.AutoModelForAudioFrameClassification;m.AutoModelForAudioTextToText;m.AutoModelForCTC;m.AutoModelForCausalLM;m.AutoModelForDepthEstimation;m.AutoModelForDocumentQuestionAnswering;m.AutoModelForImageClassification;m.AutoModelForImageFeatureExtraction;m.AutoModelForImageMatting;m.AutoModelForImageSegmentation;m.AutoModelForImageTextToText;m.AutoModelForImageToImage;m.AutoModelForMaskGeneration;m.AutoModelForMaskedLM;m.AutoModelForNormalEstimation;m.AutoModelForObjectDetection;m.AutoModelForPoseEstimation;m.AutoModelForQuestionAnswering;m.AutoModelForSemanticSegmentation;m.AutoModelForSeq2SeqLM;m.AutoModelForSequenceClassification;m.AutoModelForSpeechSeq2Seq;m.AutoModelForTextToSpectrogram;m.AutoModelForTextToWaveform;m.AutoModelForTokenClassification;m.AutoModelForUniversalSegmentation;m.AutoModelForVision2Seq;m.AutoModelForXVector;m.AutoModelForZeroShotObjectDetection;m.AutoProcessor;var RC=m.AutoTokenizer;m.AutomaticSpeechRecognitionPipeline;m.BackgroundRemovalPipeline;m.BartForConditionalGeneration;m.BartForSequenceClassification;m.BartModel;m.BartPretrainedModel;m.BartTokenizer;m.BaseModelOutput;m.BaseStreamer;m.BeitFeatureExtractor;m.BeitForImageClassification;m.BeitModel;m.BeitPreTrainedModel;m.BertForMaskedLM;m.BertForQuestionAnswering;m.BertForSequenceClassification;m.BertForTokenClassification;m.BertModel;m.BertPreTrainedModel;m.BertTokenizer;m.BitImageProcessor;m.BlenderbotForConditionalGeneration;m.BlenderbotModel;m.BlenderbotPreTrainedModel;m.BlenderbotSmallForConditionalGeneration;m.BlenderbotSmallModel;m.BlenderbotSmallPreTrainedModel;m.BlenderbotSmallTokenizer;m.BlenderbotTokenizer;m.BloomForCausalLM;m.BloomModel;m.BloomPreTrainedModel;m.BloomTokenizer;m.CLIPFeatureExtractor;m.CLIPImageProcessor;m.CLIPModel;m.CLIPPreTrainedModel;m.CLIPSegForImageSegmentation;m.CLIPSegModel;m.CLIPSegPreTrainedModel;m.CLIPTextModel;m.CLIPTextModelWithProjection;m.CLIPTokenizer;m.CLIPVisionModel;m.CLIPVisionModelWithProjection;m.CamembertForMaskedLM;m.CamembertForQuestionAnswering;m.CamembertForSequenceClassification;m.CamembertForTokenClassification;m.CamembertModel;m.CamembertPreTrainedModel;m.CamembertTokenizer;m.CausalLMOutput;m.CausalLMOutputWithPast;m.ChineseCLIPFeatureExtractor;m.ChineseCLIPModel;m.ChineseCLIPPreTrainedModel;m.ClapAudioModelWithProjection;m.ClapFeatureExtractor;m.ClapModel;m.ClapPreTrainedModel;m.ClapTextModelWithProjection;m.ClassifierFreeGuidanceLogitsProcessor;m.CodeGenForCausalLM;m.CodeGenModel;m.CodeGenPreTrainedModel;m.CodeGenTokenizer;m.CodeLlamaTokenizer;m.CohereForCausalLM;m.CohereModel;m.CoherePreTrainedModel;m.CohereTokenizer;m.ConvBertForMaskedLM;m.ConvBertForQuestionAnswering;m.ConvBertForSequenceClassification;m.ConvBertForTokenClassification;m.ConvBertModel;m.ConvBertPreTrainedModel;m.ConvBertTokenizer;m.ConvNextFeatureExtractor;m.ConvNextForImageClassification;m.ConvNextImageProcessor;m.ConvNextModel;m.ConvNextPreTrainedModel;m.ConvNextV2ForImageClassification;m.ConvNextV2Model;m.ConvNextV2PreTrainedModel;m.DFineForObjectDetection;m.DFineModel;m.DFinePreTrainedModel;m.DINOv3ConvNextModel;m.DINOv3ConvNextPreTrainedModel;m.DINOv3ViTImageProcessor;m.DINOv3ViTModel;m.DINOv3ViTPreTrainedModel;m.DPTFeatureExtractor;m.DPTForDepthEstimation;m.DPTImageProcessor;m.DPTModel;m.DPTPreTrainedModel;m.DacDecoderModel;m.DacDecoderOutput;m.DacEncoderModel;m.DacEncoderOutput;m.DacFeatureExtractor;m.DacModel;m.DacPreTrainedModel;m.DataTypeMap;m.DebertaForMaskedLM;m.DebertaForQuestionAnswering;m.DebertaForSequenceClassification;m.DebertaForTokenClassification;m.DebertaModel;m.DebertaPreTrainedModel;m.DebertaTokenizer;m.DebertaV2ForMaskedLM;m.DebertaV2ForQuestionAnswering;m.DebertaV2ForSequenceClassification;m.DebertaV2ForTokenClassification;m.DebertaV2Model;m.DebertaV2PreTrainedModel;m.DebertaV2Tokenizer;m.DecisionTransformerModel;m.DecisionTransformerPreTrainedModel;m.DeiTFeatureExtractor;m.DeiTForImageClassification;m.DeiTImageProcessor;m.DeiTModel;m.DeiTPreTrainedModel;m.DepthAnythingForDepthEstimation;m.DepthAnythingPreTrainedModel;m.DepthEstimationPipeline;m.DepthProForDepthEstimation;m.DepthProPreTrainedModel;m.DetrFeatureExtractor;m.DetrForObjectDetection;m.DetrForSegmentation;m.DetrImageProcessor;m.DetrModel;m.DetrObjectDetectionOutput;m.DetrPreTrainedModel;m.DetrSegmentationOutput;m.Dinov2ForImageClassification;m.Dinov2Model;m.Dinov2PreTrainedModel;m.Dinov2WithRegistersForImageClassification;m.Dinov2WithRegistersModel;m.Dinov2WithRegistersPreTrainedModel;m.DistilBertForMaskedLM;m.DistilBertForQuestionAnswering;m.DistilBertForSequenceClassification;m.DistilBertForTokenClassification;m.DistilBertModel;m.DistilBertPreTrainedModel;m.DistilBertTokenizer;m.DocumentQuestionAnsweringPipeline;m.DonutFeatureExtractor;m.DonutImageProcessor;m.DonutSwinModel;m.DonutSwinPreTrainedModel;m.EfficientNetForImageClassification;m.EfficientNetImageProcessor;m.EfficientNetModel;m.EfficientNetPreTrainedModel;m.ElectraForMaskedLM;m.ElectraForQuestionAnswering;m.ElectraForSequenceClassification;m.ElectraForTokenClassification;m.ElectraModel;m.ElectraPreTrainedModel;m.ElectraTokenizer;m.EncodecFeatureExtractor;m.EosTokenCriteria;m.Ernie4_5_ForCausalLM;m.Ernie4_5_Model;m.Ernie4_5_PretrainedModel;m.Ernie4_5_Tokenizer;m.EsmForMaskedLM;m.EsmForSequenceClassification;m.EsmForTokenClassification;m.EsmModel;m.EsmPreTrainedModel;m.EsmTokenizer;m.ExaoneForCausalLM;m.ExaoneModel;m.ExaonePreTrainedModel;m.FFT;m.FalconForCausalLM;m.FalconModel;m.FalconPreTrainedModel;m.FalconTokenizer;m.FastViTForImageClassification;m.FastViTModel;m.FastViTPreTrainedModel;m.FeatureExtractionPipeline;m.FeatureExtractor;m.FillMaskPipeline;m.Florence2ForConditionalGeneration;m.Florence2PreTrainedModel;m.Florence2Processor;m.ForcedBOSTokenLogitsProcessor;m.ForcedEOSTokenLogitsProcessor;m.GLPNFeatureExtractor;m.GLPNForDepthEstimation;m.GLPNModel;m.GLPNPreTrainedModel;m.GPT2LMHeadModel;m.GPT2Model;m.GPT2PreTrainedModel;m.GPT2Tokenizer;m.GPTBigCodeForCausalLM;m.GPTBigCodeModel;m.GPTBigCodePreTrainedModel;m.GPTJForCausalLM;m.GPTJModel;m.GPTJPreTrainedModel;m.GPTNeoForCausalLM;m.GPTNeoModel;m.GPTNeoPreTrainedModel;m.GPTNeoXForCausalLM;m.GPTNeoXModel;m.GPTNeoXPreTrainedModel;m.GPTNeoXTokenizer;m.Gemma2ForCausalLM;m.Gemma2Model;m.Gemma2PreTrainedModel;m.Gemma3ForCausalLM;m.Gemma3Model;m.Gemma3PreTrainedModel;m.Gemma3nAudioFeatureExtractor;m.Gemma3nForConditionalGeneration;m.Gemma3nPreTrainedModel;m.Gemma3nProcessor;m.GemmaForCausalLM;m.GemmaModel;m.GemmaPreTrainedModel;m.GemmaTokenizer;m.GlmForCausalLM;m.GlmModel;m.GlmPreTrainedModel;m.GraniteForCausalLM;m.GraniteModel;m.GranitePreTrainedModel;m.Grok1Tokenizer;m.GroundingDinoForObjectDetection;m.GroundingDinoImageProcessor;m.GroundingDinoPreTrainedModel;m.GroundingDinoProcessor;m.GroupViTModel;m.GroupViTPreTrainedModel;m.HeliumForCausalLM;m.HeliumModel;m.HeliumPreTrainedModel;m.HerbertTokenizer;m.HieraForImageClassification;m.HieraModel;m.HieraPreTrainedModel;m.HubertForCTC;m.HubertForSequenceClassification;m.HubertModel;m.HubertPreTrainedModel;m.IJepaForImageClassification;m.IJepaModel;m.IJepaPreTrainedModel;m.Idefics3ForConditionalGeneration;m.Idefics3ImageProcessor;m.Idefics3PreTrainedModel;m.Idefics3Processor;m.ImageClassificationPipeline;m.ImageFeatureExtractionPipeline;m.ImageFeatureExtractor;m.ImageMattingOutput;m.ImageProcessor;m.ImageSegmentationPipeline;m.ImageToImagePipeline;m.ImageToTextPipeline;m.InterruptableStoppingCriteria;m.JAISLMHeadModel;m.JAISModel;m.JAISPreTrainedModel;m.JinaCLIPImageProcessor;m.JinaCLIPModel;m.JinaCLIPPreTrainedModel;m.JinaCLIPProcessor;m.JinaCLIPTextModel;m.JinaCLIPVisionModel;m.Lfm2ForCausalLM;m.Lfm2Model;m.Lfm2PreTrainedModel;m.LiteWhisperForConditionalGeneration;m.LlamaForCausalLM;m.LlamaModel;m.LlamaPreTrainedModel;m.LlamaTokenizer;m.LlavaForConditionalGeneration;m.LlavaOnevisionForConditionalGeneration;m.LlavaOnevisionImageProcessor;m.LlavaPreTrainedModel;m.LlavaProcessor;m.LlavaQwen2ForCausalLM;m.LogitsProcessor;m.LogitsProcessorList;m.LogitsWarper;m.LongT5ForConditionalGeneration;m.LongT5Model;m.LongT5PreTrainedModel;m.M2M100ForConditionalGeneration;m.M2M100Model;m.M2M100PreTrainedModel;m.M2M100Tokenizer;m.MBart50Tokenizer;m.MBartForCausalLM;m.MBartForConditionalGeneration;m.MBartForSequenceClassification;m.MBartModel;m.MBartPreTrainedModel;m.MBartTokenizer;m.MPNetForMaskedLM;m.MPNetForQuestionAnswering;m.MPNetForSequenceClassification;m.MPNetForTokenClassification;m.MPNetModel;m.MPNetPreTrainedModel;m.MPNetTokenizer;m.MT5ForConditionalGeneration;m.MT5Model;m.MT5PreTrainedModel;m.MarianMTModel;m.MarianModel;m.MarianPreTrainedModel;m.MarianTokenizer;m.Mask2FormerImageProcessor;m.MaskFormerFeatureExtractor;m.MaskFormerForInstanceSegmentation;m.MaskFormerImageProcessor;m.MaskFormerModel;m.MaskFormerPreTrainedModel;m.MaskedLMOutput;m.MaxLengthCriteria;m.Metric3DForDepthEstimation;m.Metric3DPreTrainedModel;m.Metric3Dv2ForDepthEstimation;m.Metric3Dv2PreTrainedModel;m.MgpstrForSceneTextRecognition;m.MgpstrModelOutput;m.MgpstrPreTrainedModel;m.MgpstrProcessor;m.MgpstrTokenizer;m.MimiDecoderModel;m.MimiDecoderOutput;m.MimiEncoderModel;m.MimiEncoderOutput;m.MimiModel;m.MimiPreTrainedModel;m.MinLengthLogitsProcessor;m.MinNewTokensLengthLogitsProcessor;m.MistralForCausalLM;m.MistralModel;m.MistralPreTrainedModel;m.MobileBertForMaskedLM;m.MobileBertForQuestionAnswering;m.MobileBertForSequenceClassification;m.MobileBertModel;m.MobileBertPreTrainedModel;m.MobileBertTokenizer;m.MobileLLMForCausalLM;m.MobileLLMModel;m.MobileLLMPreTrainedModel;m.MobileNetV1FeatureExtractor;m.MobileNetV1ForImageClassification;m.MobileNetV1ForSemanticSegmentation;m.MobileNetV1ImageProcessor;m.MobileNetV1Model;m.MobileNetV1PreTrainedModel;m.MobileNetV2FeatureExtractor;m.MobileNetV2ForImageClassification;m.MobileNetV2ForSemanticSegmentation;m.MobileNetV2ImageProcessor;m.MobileNetV2Model;m.MobileNetV2PreTrainedModel;m.MobileNetV3FeatureExtractor;m.MobileNetV3ForImageClassification;m.MobileNetV3ForSemanticSegmentation;m.MobileNetV3ImageProcessor;m.MobileNetV3Model;m.MobileNetV3PreTrainedModel;m.MobileNetV4FeatureExtractor;m.MobileNetV4ForImageClassification;m.MobileNetV4ForSemanticSegmentation;m.MobileNetV4ImageProcessor;m.MobileNetV4Model;m.MobileNetV4PreTrainedModel;m.MobileViTFeatureExtractor;m.MobileViTForImageClassification;m.MobileViTImageProcessor;m.MobileViTModel;m.MobileViTPreTrainedModel;m.MobileViTV2ForImageClassification;m.MobileViTV2Model;m.MobileViTV2PreTrainedModel;m.ModelOutput;m.ModernBertDecoderForCausalLM;m.ModernBertDecoderModel;m.ModernBertDecoderPreTrainedModel;m.ModernBertForMaskedLM;m.ModernBertForSequenceClassification;m.ModernBertForTokenClassification;m.ModernBertModel;m.ModernBertPreTrainedModel;m.Moondream1ForConditionalGeneration;m.MoonshineFeatureExtractor;m.MoonshineForConditionalGeneration;m.MoonshineModel;m.MoonshinePreTrainedModel;m.MoonshineProcessor;m.MptForCausalLM;m.MptModel;m.MptPreTrainedModel;m.MultiModalityCausalLM;m.MultiModalityPreTrainedModel;m.MusicgenForCausalLM;m.MusicgenForConditionalGeneration;m.MusicgenModel;m.MusicgenPreTrainedModel;m.NeoBertForMaskedLM;m.NeoBertForQuestionAnswering;m.NeoBertForSequenceClassification;m.NeoBertForTokenClassification;m.NeoBertModel;m.NeoBertPreTrainedModel;m.NllbTokenizer;m.NoBadWordsLogitsProcessor;m.NoRepeatNGramLogitsProcessor;m.NomicBertModel;m.NomicBertPreTrainedModel;m.NougatImageProcessor;m.NougatTokenizer;m.OPTForCausalLM;m.OPTModel;m.OPTPreTrainedModel;m.ObjectDetectionPipeline;m.Olmo2ForCausalLM;m.Olmo2Model;m.Olmo2PreTrainedModel;m.OlmoForCausalLM;m.OlmoModel;m.OlmoPreTrainedModel;m.OpenELMForCausalLM;m.OpenELMModel;m.OpenELMPreTrainedModel;m.OwlViTFeatureExtractor;m.OwlViTForObjectDetection;m.OwlViTImageProcessor;m.OwlViTModel;m.OwlViTPreTrainedModel;m.OwlViTProcessor;m.Owlv2ForObjectDetection;m.Owlv2ImageProcessor;m.Owlv2Model;m.Owlv2PreTrainedModel;m.PaliGemmaForConditionalGeneration;m.PaliGemmaPreTrainedModel;m.PaliGemmaProcessor;m.PatchTSMixerForPrediction;m.PatchTSMixerModel;m.PatchTSMixerPreTrainedModel;m.PatchTSTForPrediction;m.PatchTSTModel;m.PatchTSTPreTrainedModel;m.Phi3ForCausalLM;m.Phi3Model;m.Phi3PreTrainedModel;m.Phi3VForCausalLM;m.Phi3VImageProcessor;m.Phi3VPreTrainedModel;m.Phi3VProcessor;m.PhiForCausalLM;m.PhiModel;m.PhiPreTrainedModel;m.Pipeline;m.PreTrainedModel;m.PreTrainedTokenizer;m.PretrainedConfig;m.PretrainedMixin;m.Processor;m.PvtForImageClassification;m.PvtImageProcessor;m.PvtModel;m.PvtPreTrainedModel;m.PyAnnoteFeatureExtractor;m.PyAnnoteForAudioFrameClassification;m.PyAnnoteModel;m.PyAnnotePreTrainedModel;m.PyAnnoteProcessor;m.QuestionAnsweringModelOutput;m.QuestionAnsweringPipeline;m.Qwen2ForCausalLM;m.Qwen2Model;m.Qwen2PreTrainedModel;m.Qwen2Tokenizer;m.Qwen2VLForConditionalGeneration;m.Qwen2VLImageProcessor;m.Qwen2VLPreTrainedModel;m.Qwen2VLProcessor;m.Qwen3ForCausalLM;m.Qwen3Model;m.Qwen3PreTrainedModel;m.RFDetrForObjectDetection;m.RFDetrModel;m.RFDetrObjectDetectionOutput;m.RFDetrPreTrainedModel;m.RTDetrForObjectDetection;m.RTDetrImageProcessor;m.RTDetrModel;m.RTDetrObjectDetectionOutput;m.RTDetrPreTrainedModel;m.RTDetrV2ForObjectDetection;m.RTDetrV2Model;m.RTDetrV2ObjectDetectionOutput;m.RTDetrV2PreTrainedModel;m.RawAudio;m.RawImage;m.RawVideo;m.RawVideoFrame;m.RepetitionPenaltyLogitsProcessor;m.ResNetForImageClassification;m.ResNetModel;m.ResNetPreTrainedModel;m.RoFormerForMaskedLM;m.RoFormerForQuestionAnswering;m.RoFormerForSequenceClassification;m.RoFormerForTokenClassification;m.RoFormerModel;m.RoFormerPreTrainedModel;m.RoFormerTokenizer;m.RobertaForMaskedLM;m.RobertaForQuestionAnswering;m.RobertaForSequenceClassification;m.RobertaForTokenClassification;m.RobertaModel;m.RobertaPreTrainedModel;m.RobertaTokenizer;m.SamImageProcessor;m.SamImageSegmentationOutput;m.SamModel;m.SamPreTrainedModel;m.SamProcessor;m.SapiensForDepthEstimation;m.SapiensForNormalEstimation;m.SapiensForSemanticSegmentation;m.SapiensPreTrainedModel;m.SeamlessM4TFeatureExtractor;m.SegformerFeatureExtractor;m.SegformerForImageClassification;m.SegformerForSemanticSegmentation;m.SegformerImageProcessor;m.SegformerModel;m.SegformerPreTrainedModel;m.Seq2SeqLMOutput;m.SequenceClassifierOutput;m.SiglipImageProcessor;m.SiglipModel;m.SiglipPreTrainedModel;m.SiglipTextModel;m.SiglipTokenizer;m.SiglipVisionModel;m.SmolLM3ForCausalLM;m.SmolLM3Model;m.SmolLM3PreTrainedModel;m.SmolVLMForConditionalGeneration;m.SmolVLMImageProcessor;m.SmolVLMProcessor;m.SnacDecoderModel;m.SnacEncoderModel;m.SnacFeatureExtractor;m.SnacModel;m.SnacPreTrainedModel;m.SpeechT5FeatureExtractor;m.SpeechT5ForSpeechToText;m.SpeechT5ForTextToSpeech;m.SpeechT5HifiGan;m.SpeechT5Model;m.SpeechT5PreTrainedModel;m.SpeechT5Processor;m.SpeechT5Tokenizer;m.SqueezeBertForMaskedLM;m.SqueezeBertForQuestionAnswering;m.SqueezeBertForSequenceClassification;m.SqueezeBertModel;m.SqueezeBertPreTrainedModel;m.SqueezeBertTokenizer;m.StableLmForCausalLM;m.StableLmModel;m.StableLmPreTrainedModel;m.Starcoder2ForCausalLM;m.Starcoder2Model;m.Starcoder2PreTrainedModel;m.StoppingCriteria;m.StoppingCriteriaList;m.StyleTextToSpeech2Model;m.StyleTextToSpeech2PreTrainedModel;m.SummarizationPipeline;m.SuppressTokensAtBeginLogitsProcessor;m.Swin2SRForImageSuperResolution;m.Swin2SRImageProcessor;m.Swin2SRModel;m.Swin2SRPreTrainedModel;m.SwinForImageClassification;m.SwinForSemanticSegmentation;m.SwinModel;m.SwinPreTrainedModel;m.T5ForConditionalGeneration;m.T5Model;m.T5PreTrainedModel;m.T5Tokenizer;m.TableTransformerForObjectDetection;m.TableTransformerModel;m.TableTransformerObjectDetectionOutput;m.TableTransformerPreTrainedModel;m.TemperatureLogitsWarper;m.Tensor;m.Text2TextGenerationPipeline;m.TextClassificationPipeline;m.TextGenerationPipeline;m.TextStreamer;m.TextToAudioPipeline;m.TokenClassificationPipeline;m.TokenClassifierOutput;m.TokenizerModel;m.TopKLogitsWarper;m.TopPLogitsWarper;m.TrOCRForCausalLM;m.TrOCRPreTrainedModel;m.TranslationPipeline;m.UltravoxModel;m.UltravoxPreTrainedModel;m.UltravoxProcessor;m.UniSpeechForCTC;m.UniSpeechForSequenceClassification;m.UniSpeechModel;m.UniSpeechPreTrainedModel;m.UniSpeechSatForAudioFrameClassification;m.UniSpeechSatForCTC;m.UniSpeechSatForSequenceClassification;m.UniSpeechSatModel;m.UniSpeechSatPreTrainedModel;m.VLChatProcessor;m.VLMImageProcessor;m.ViTFeatureExtractor;m.ViTForImageClassification;m.ViTImageProcessor;m.ViTMAEModel;m.ViTMAEPreTrainedModel;m.ViTMSNForImageClassification;m.ViTMSNModel;m.ViTMSNPreTrainedModel;m.ViTModel;m.ViTPreTrainedModel;m.VisionEncoderDecoderModel;m.VitMatteForImageMatting;m.VitMatteImageProcessor;m.VitMattePreTrainedModel;m.VitPoseForPoseEstimation;m.VitPoseImageProcessor;m.VitPosePreTrainedModel;m.VitsModel;m.VitsModelOutput;m.VitsPreTrainedModel;m.VitsTokenizer;m.VoxtralForConditionalGeneration;m.VoxtralProcessor;m.Wav2Vec2BertForCTC;m.Wav2Vec2BertForSequenceClassification;m.Wav2Vec2BertModel;m.Wav2Vec2BertPreTrainedModel;m.Wav2Vec2CTCTokenizer;m.Wav2Vec2FeatureExtractor;m.Wav2Vec2ForAudioFrameClassification;m.Wav2Vec2ForCTC;m.Wav2Vec2ForSequenceClassification;m.Wav2Vec2Model;m.Wav2Vec2PreTrainedModel;m.Wav2Vec2Processor;m.Wav2Vec2ProcessorWithLM;m.WavLMForAudioFrameClassification;m.WavLMForCTC;m.WavLMForSequenceClassification;m.WavLMForXVector;m.WavLMModel;m.WavLMPreTrainedModel;m.WeSpeakerFeatureExtractor;m.WeSpeakerResNetModel;m.WeSpeakerResNetPreTrainedModel;m.WhisperFeatureExtractor;m.WhisperForConditionalGeneration;m.WhisperModel;m.WhisperPreTrainedModel;m.WhisperProcessor;m.WhisperTextStreamer;m.WhisperTimeStampLogitsProcessor;m.WhisperTokenizer;m.XLMForQuestionAnswering;m.XLMForSequenceClassification;m.XLMForTokenClassification;m.XLMModel;m.XLMPreTrainedModel;m.XLMRobertaForMaskedLM;m.XLMRobertaForQuestionAnswering;m.XLMRobertaForSequenceClassification;m.XLMRobertaForTokenClassification;m.XLMRobertaModel;m.XLMRobertaPreTrainedModel;m.XLMRobertaTokenizer;m.XLMTokenizer;m.XLMWithLMHeadModel;m.XVectorOutput;m.YolosFeatureExtractor;m.YolosForObjectDetection;m.YolosImageProcessor;m.YolosModel;m.YolosObjectDetectionOutput;m.YolosPreTrainedModel;m.ZeroShotAudioClassificationPipeline;m.ZeroShotClassificationPipeline;m.ZeroShotImageClassificationPipeline;m.ZeroShotObjectDetectionPipeline;m.bankers_round;m.cat;m.cos_sim;m.dot;m.dynamic_time_warping;var NC=m.env;m.full;m.full_like;m.getCacheShapes;m.hamming;m.hanning;m.interpolate;m.interpolate_4d;m.interpolate_data;m.is_chinese_char;m.layer_norm;m.load_image;m.load_video;m.log_softmax;m.magnitude;m.matmul;m.max;m.mean;m.mean_pooling;m.medianFilter;m.mel_filter_bank;m.min;m.ones;m.ones_like;m.permute;m.permute_data;m.pipeline;m.quantize_embeddings;m.rand;m.read_audio;m.rfft;m.round;m.slice;m.softmax;m.spectrogram;m.stack;m.std_mean;m.topk;m.window_function;m.zeros;m.zeros_like;const jC={model:"onnx-community/embeddinggemma-300m-ONNX",embeddingDimension:768,maxTokens:256,quantized:!0,device:"auto"},Bs={instance:null,loadingPromise:null};async function VC(){try{return navigator.gpu?!!await navigator.gpu.requestAdapter():!1}catch(e){return console.error("Error checking WebGPU availability:",e),!1}}class UC{config;instance=null;constructor(r={}){this.config={...jC,...r}}async initialize(r){if(this.instance)return this.instance;if(Bs.instance)return this.instance=Bs.instance,this.instance;if(Bs.loadingPromise)try{const s=await Bs.loadingPromise;return this.instance=s,s}catch(s){const n=s instanceof Error?s.message:"Failed to load model";throw console.error("❌ Model loading failed:",n),s}console.log(`🔄 Loading EmbeddingGemma model: ${this.config.model}`);const t=this.loadModelInstance(r);Bs.loadingPromise=t;try{const s=await t;return this.instance=s,Bs.instance=s,Bs.loadingPromise=null,s}catch(s){throw Bs.loadingPromise=null,s}}async loadModelInstance(r){const t=performance.now();try{const s=c=>{if(c.status==="progress"&&c.file.endsWith(".onnx_data")){const p=Math.round(c.loaded/c.total*100);console.log(`📊 Loading model... ${p}%`)}r&&r(c)};console.log("📝 Setting up tokenizer...");const n=await RC.from_pretrained(this.config.model);console.log("🧠 Loading model...");let i;this.config.device==="auto"?(i=await VC()?"webgpu":"wasm",console.log(`🎯 Auto-detected device: ${i}`)):i=this.config.device,i==="wasm"&&(NC.backends.onnx.wasm.proxy=!0);const a={model:await BC.from_pretrained(this.config.model,{device:i,dtype:"q4",model_file_name:i==="webgpu"?"model_no_gather":"model",progress_callback:s}),tokenizer:n,device:i},l=performance.now()-t;return console.log(`✅ EmbeddingGemma model loaded in ${l.toFixed(2)}ms`),console.log(`📊 Model: ${this.config.model}`),console.log(`🎯 Device: ${i}`),console.log(`⚙️ Embedding dimension: ${this.config.embeddingDimension}D`),a}catch(s){const n=s instanceof Error?s.message:"Failed to load model";throw console.error("❌ Model loading failed:",n),s}}async generateEmbeddings(r,t="document"){if(this.instance||await this.initialize(),!this.instance)throw new Error("EmbeddingGemma model not initialized");const s=performance.now(),n=[],i=this.config.batchSize||(this.instance.device==="webgpu"?8:1);console.log(`🔄 Generating embeddings for ${r.length} texts with batch size ${i}`);try{for(let l=0;l<r.length;l+=i){const c=r.slice(l,l+i),p=(l+c.length)/r.length*100,d=c.map(f=>t==="query"?`search_query: ${f}`:`search_document: ${f}`),u=this.instance.tokenizer(d,{padding:!0,truncation:!0,max_length:this.config.maxTokens}),{sentence_embedding:_}=await this.instance.model(u);n.push(..._.tolist()),r.length>1&&console.log(`📊 Progress: ${p.toFixed(0)}%`)}const a=performance.now()-s;if(console.log(`✅ Generated ${n.length} embeddings in ${a.toFixed(2)}ms`),console.log(`⚡ Average time per embedding: ${(a/n.length).toFixed(2)}ms`),n.length>0){const l=n[0].length;l!==this.config.embeddingDimension&&l<this.config.embeddingDimension&&console.log(`📏 Embedding dimension: ${l}D (truncated from ${this.config.embeddingDimension}D)`)}return n}catch(o){throw console.error("❌ Embedding generation failed:",o),o}}async generateEmbedding(r,t="document"){return(await this.generateEmbeddings([r],t))[0]}getStatus(){return{isInitialized:!!this.instance,device:this.instance?.device||"not_loaded",model:this.config.model,embeddingDimension:this.config.embeddingDimension,maxTokens:this.config.maxTokens,quantized:this.config.quantized,batchSize:this.config.batchSize||(this.instance?.device==="webgpu"?8:1)}}static clearCache(){Bs.instance=null,Bs.loadingPromise=null}}function WC(e){return new UC(e)}class GC{semanticSvg;fdeSvg;bottomSvg;queryTextDiv;semanticSvgDoc;fdeSvgDoc;bottomSvgDoc;queryTextDivDoc;fdeProcessor;productionEmbeddingGemma=null;embeddingStatus;modelLoaded=!1;documents=[];documentEmbeddings=[];processedDocumentsCount=0;state={step:0,isRunning:!0,isPaused:!1,animationType:"query"};queryText="What is the height of Mount Everest?";docText="Mount Everest is 8,848 meters high.";queryInput;documentInput;unloadEmbeddingBtn;documentCollectionTextarea;processDocumentsBtn;clearDocumentsBtn;updateVisualizationBtn;searchQueryInput;searchDocumentsBtn;topKSelect;documentFilesInput;loadDefaultDocsBtn;clearAllDocsBtn;queryData;docData;queryEmbedding=null;docEmbedding=null;highlightedSectors=new Set;allTokenPositions=[];tokenAlphabets=["z","y","x","v","t","u","w","k","q","j"];colors=["#ea4335","#4285f4","#fbbc05","#34a853","#9c27b0","#00bcd4","#ff5722"];queryHyperplanes=[];documentHyperplanes=[];constructor(){console.log("🚀 Initializing MuVeRa Animation + EmbeddingGemma"),this.semanticSvg=ht("#semantic-svg"),this.fdeSvg=ht("#fde-svg"),this.bottomSvg=ht("#bottom-svg"),this.queryTextDiv=ht("#query-text"),this.semanticSvgDoc=ht("#semantic-svg-doc"),this.fdeSvgDoc=ht("#fde-svg-doc"),this.bottomSvgDoc=ht("#bottom-svg-doc"),this.queryTextDivDoc=ht("#query-text-doc"),this.fdeProcessor=new YP,this.embeddingStatus=ht("#embedding-status"),this.initializeInputControls(),this.generateRandomHyperplanes(),this.queryData=this.fdeProcessor.processQuery(this.queryText),this.docData=this.fdeProcessor.processDocument(this.docText),console.log("Query FDE Data:",this.queryData),console.log("Document FDE Data:",this.docData),console.log("FDE Similarity:",this.fdeProcessor.calculateSimilarity(this.queryData.fdeVector,this.docData.fdeVector)),this.setupInitialView("query"),this.setupDocumentView(),this.setupPauseButton(),this.startAnimation(),this.updateComparisonPanel(),this.updateFDECalculations(),this.autoLoadEmbeddingGemma()}generateRandomHyperplanes(){this.queryHyperplanes=[];for(let r=0;r<3;r++)this.queryHyperplanes.push(Math.random()*Math.PI);this.queryHyperplanes.sort((r,t)=>r-t),this.documentHyperplanes=[];for(let r=0;r<3;r++)this.documentHyperplanes.push(Math.random()*Math.PI);this.documentHyperplanes.sort((r,t)=>r-t),console.log("Query hyperplanes (radians):",this.queryHyperplanes),console.log("Document hyperplanes (radians):",this.documentHyperplanes)}initializeInputControls(){this.queryInput=document.getElementById("query-input"),this.documentInput=document.getElementById("document-input");const r=document.getElementById("reset-btn"),t=document.getElementById("random-btn");r.addEventListener("click",()=>this.resetToDefaults()),t.addEventListener("click",()=>this.tryRandomExamples()),this.unloadEmbeddingBtn=document.getElementById("unload-embedding-btn"),this.unloadEmbeddingBtn.addEventListener("click",()=>this.unloadEmbeddingGemmaModel()),this.documentCollectionTextarea=document.getElementById("document-collection"),this.processDocumentsBtn=document.getElementById("process-documents-btn"),this.clearDocumentsBtn=document.getElementById("clear-documents-btn"),this.updateVisualizationBtn=document.getElementById("update-visualization-btn"),this.processDocumentsBtn.addEventListener("click",()=>this.processDocumentCollection()),this.clearDocumentsBtn.addEventListener("click",()=>this.clearDocumentCollection()),this.updateVisualizationBtn.addEventListener("click",()=>this.updateVisualizationFromSearch()),this.searchQueryInput=document.getElementById("search-query"),this.searchDocumentsBtn=document.getElementById("search-documents-btn"),this.topKSelect=document.getElementById("top-k-results"),this.searchDocumentsBtn.addEventListener("click",()=>this.searchDocuments()),this.documentFilesInput=document.getElementById("document-files"),this.loadDefaultDocsBtn=document.getElementById("load-default-docs-btn"),this.clearAllDocsBtn=document.getElementById("clear-all-docs-btn"),this.documentFilesInput.addEventListener("change",()=>this.handleFileUpload()),this.loadDefaultDocsBtn.addEventListener("click",()=>this.loadDefaultDocuments()),this.clearAllDocsBtn.addEventListener("click",()=>this.clearAllDocuments())}async autoLoadEmbeddingGemma(){console.log("🔄 Auto-loading EmbeddingGemma..."),setTimeout(()=>{this.loadEmbeddingGemmaModel()},1e3)}async loadEmbeddingGemmaModel(){console.log("🤖 Loading EmbeddingGemma Model..."),ht("#loading-progress-container").style("display","block"),ht("#loading-progress-bar").style("width","0%"),ht("#loading-progress-text").text("0%"),ht("#loading-details").text("Initializing EmbeddingGemma..."),this.embeddingStatus.text("🔄 Loading EmbeddingGemma (308M parameters, ~160MB download)...");try{this.productionEmbeddingGemma=WC({device:"auto",quantized:!0,embeddingDimension:768});const r=n=>{if(n.status==="progress"&&n.file.endsWith(".onnx_data")){const i=Math.round(n.loaded/n.total*100);ht("#loading-progress-bar").style("width",`${i}%`),ht("#loading-progress-text").text(`${i}%`),ht("#loading-details").text(`Downloading model: ${(n.loaded/1024/1024).toFixed(1)}MB / ${(n.total/1024/1024).toFixed(1)}MB`),this.embeddingStatus.text(`🔄 Loading EmbeddingGemma: ${i}% (${(n.loaded/1024/1024).toFixed(1)}MB)`)}},t=performance.now();await this.productionEmbeddingGemma.initialize(r);const s=performance.now()-t;ht("#loading-progress-bar").style("width","100%"),ht("#loading-progress-text").text("✅ Complete"),ht("#loading-details").text(`Model loaded successfully in ${(s/1e3).toFixed(1)}s`),this.embeddingStatus.text(`✅ EmbeddingGemma loaded successfully! (${(s/1e3).toFixed(1)}s) Ready for document processing.`),this.modelLoaded=!0,this.unloadEmbeddingBtn.style.display="inline-block",ht("#document-processing-section").style("display","block"),ht("#basic-input-section").style("display","block"),ht("#math-section").style("display","block"),this.setupCollapsibleMathSection(),setTimeout(()=>{this.loadDefaultDocuments()},500),console.log("✅ EmbeddingGemma model loaded successfully"),this.updatePerformanceMetrics(s)}catch(r){console.error("❌ EmbeddingGemma failed:",r),this.embeddingStatus.text(`❌ EmbeddingGemma failed: ${r.message}`),ht("#loading-progress-bar").style("width","0%").style("background","#f44336"),ht("#loading-progress-text").text("❌ Failed"),ht("#loading-details").text(`Error: ${r.message}`)}}unloadEmbeddingGemmaModel(){console.log("🗑️ Unloading EmbeddingGemma Model..."),this.productionEmbeddingGemma=null,this.modelLoaded=!1,this.documents=[],this.documentEmbeddings=[],this.processedDocumentsCount=0,this.embeddingStatus.text("EmbeddingGemma: Ready to load (308M parameter model, ~160MB download)"),this.unloadEmbeddingBtn.style.display="none",ht("#loading-progress-container").style("display","none"),ht("#document-processing-section").style("display","none"),ht("#query-processing-section").style("display","none"),console.log("✅ EmbeddingGemma model unloaded")}async processDocumentCollection(){if(!this.modelLoaded||!this.productionEmbeddingGemma){alert("Please load the EmbeddingGemma model first!");return}const r=this.documentCollectionTextarea.value.trim();if(!r){alert("Please enter some documents to process!");return}if(this.documents=r.split(`
`).map(t=>t.trim()).filter(t=>t.length>0),this.documents.length===0){alert("No valid documents found!");return}console.log(`🔄 Processing ${this.documents.length} documents...`),ht("#embedding-progress-container").style("display","block"),ht("#embedding-progress-bar").style("width","0%"),ht("#embedding-progress-text").text(`0/${this.documents.length} documents`),ht("#embedding-details").text("Starting document processing..."),this.processDocumentsBtn.disabled=!0,this.documentEmbeddings=[],this.processedDocumentsCount=0;try{const t=[],s=performance.now();for(let o=0;o<this.documents.length;o++){const a=this.documents[o];ht("#embedding-details").text(`Processing document ${o+1}/${this.documents.length}: "${a.substring(0,50)}..."`);const l=performance.now(),c=await this.productionEmbeddingGemma.generateEmbedding(`search_document: ${a}`),d=performance.now()-l;t.push(d),this.documentEmbeddings.push(c),this.processedDocumentsCount++;const u=t.reduce((f,w)=>f+w,0)/t.length,_=Math.round((o+1)/this.documents.length*100);ht("#embedding-progress-bar").style("width",`${_}%`),ht("#embedding-progress-text").text(`${o+1}/${this.documents.length} documents (${d.toFixed(0)}ms, avg: ${u.toFixed(0)}ms)`),await new Promise(f=>setTimeout(f,100))}const n=performance.now()-s,i=t.reduce((o,a)=>o+a,0)/t.length;ht("#embedding-details").text(`✅ Processed ${this.documents.length} documents | Total: ${(n/1e3).toFixed(1)}s | Avg: ${i.toFixed(0)}ms per embedding`),ht("#processed-status").style("display","block").text(`📊 Ready: ${this.documents.length} documents processed with 768D embeddings`),this.updateVisualizationBtn.style.display="inline-block",ht("#query-processing-section").style("display","block"),console.log(`✅ Processed ${this.documents.length} documents successfully`)}catch(t){console.error("❌ Document processing failed:",t),ht("#embedding-details").text(`❌ Processing failed: ${t.message}`)}finally{this.processDocumentsBtn.disabled=!1}}clearDocumentCollection(){this.documentCollectionTextarea.value="",this.documents=[],this.documentEmbeddings=[],this.processedDocumentsCount=0,ht("#embedding-progress-container").style("display","none"),ht("#processed-status").style("display","none"),ht("#query-processing-section").style("display","none"),ht("#search-results-container").style("display","none"),this.updateVisualizationBtn.style.display="none",console.log("🗑️ Document collection cleared")}async searchDocuments(){if(!this.modelLoaded||!this.productionEmbeddingGemma){alert("Please load the EmbeddingGemma model first!");return}if(this.documents.length===0||this.documentEmbeddings.length===0){alert("Please process some documents first!");return}const r=this.searchQueryInput.value.trim();if(!r){alert("Please enter a search query!");return}const t=parseInt(this.topKSelect.value);console.log(`🔍 Searching for: "${r}" (top ${t} results)`),this.searchDocumentsBtn.disabled=!0;try{const s=performance.now(),n=await this.productionEmbeddingGemma.generateEmbedding(`search_query: ${r}`),o=performance.now()-s;console.log(`⏱️ Query embedding generated in ${o.toFixed(0)}ms`);const a=[];for(let c=0;c<this.documentEmbeddings.length;c++){const p=this.calculateCosineSimilarity(n,this.documentEmbeddings[c]);a.push({index:c,score:p,document:this.documents[c]})}a.sort((c,p)=>p.score-c.score);const l=a.slice(0,t);if(this.displaySearchResults(r,l,o),l.length>0){const c=l[0];this.updateVisualizationWithQueryAndDoc(r,c.document)}}catch(s){console.error("❌ Search failed:",s),alert(`Search failed: ${s.message}`)}finally{this.searchDocumentsBtn.disabled=!1}}displaySearchResults(r,t,s){const n=ht("#search-results");ht("#search-results-container").style("display","block"),n.selectAll("*").remove(),n.append("div").style("margin-bottom","15px").style("padding","10px").style("background","#e3f2fd").style("border-radius","4px").style("border","1px solid #2196f3").html(`<strong>Query:</strong> "${r}" | <strong>Results:</strong> ${t.length} documents${s?` | <strong>⏱️ Embedding Time:</strong> ${s.toFixed(0)}ms`:""}`),t.forEach((o,a)=>{const l=n.append("div").style("margin-bottom","10px").style("padding","12px").style("background",a===0?"#e8f5e8":"#f9f9f9").style("border-radius","4px").style("border",a===0?"2px solid #4caf50":"1px solid #ddd").style("cursor","pointer");l.html(`
        <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 5px;">
          <strong>Rank ${a+1}</strong>
          <span style="background: ${this.getScoreColor(o.score)}; color: white; padding: 2px 8px; border-radius: 12px; font-size: 12px;">
            ${o.score.toFixed(4)}
          </span>
        </div>
        <div style="color: #666; font-size: 14px;">${o.document}</div>
      `),l.on("click",()=>{this.updateVisualizationWithQueryAndDoc(r,o.document)})})}getScoreColor(r){return r>.8?"#4caf50":r>.6?"#ff9800":"#f44336"}updateVisualizationWithQueryAndDoc(r,t){console.log(`🎯 Updating visualization with: "${r}" vs "${t}"`),this.queryText=r,this.docText=t,this.queryInput.value=r,this.documentInput.value=t,this.processNewTexts()}updateVisualizationFromSearch(){const r=this.searchQueryInput.value.trim();r&&this.documents.length>0&&this.updateVisualizationWithQueryAndDoc(r,this.documents[0])}processNewTexts(){if(this.queryText=this.queryInput.value.trim(),this.docText=this.documentInput.value.trim(),!this.queryText||!this.docText){alert("Please enter both query and document text");return}this.generateRandomHyperplanes(),this.queryData=this.fdeProcessor.processQuery(this.queryText),this.docData=this.fdeProcessor.processDocument(this.docText),this.clearAllAnimations(),this.setupInitialView("query"),this.setupDocumentView(),this.startAnimation(),this.updateComparisonPanel(),this.updateFDECalculations(),this.productionEmbeddingGemma&&this.regenerateEmbeddings()}async regenerateEmbeddings(){if(this.productionEmbeddingGemma){this.embeddingStatus.text("🔄 Regenerating embeddings for visualization...");try{const r=performance.now();this.queryEmbedding=await this.productionEmbeddingGemma.generateEmbedding(`search_query: ${this.queryText}`);const t=performance.now()-r,s=performance.now();this.docEmbedding=await this.productionEmbeddingGemma.generateEmbedding(`search_document: ${this.docText}`);const n=performance.now()-s;this.embeddingStatus.text(`✅ Embeddings updated | Query: ${t.toFixed(0)}ms | Doc: ${n.toFixed(0)}ms`),console.log(`⏱️ Visualization embeddings: Query ${t.toFixed(0)}ms, Document ${n.toFixed(0)}ms`),this.updateComparisonPanel()}catch(r){console.error("❌ Failed to regenerate embeddings:",r),this.embeddingStatus.text(`❌ Failed to regenerate embeddings: ${r.message}`)}}}resetToDefaults(){this.queryInput.value="What is the height of Mount Everest?",this.documentInput.value="Mount Everest is 8,848 meters high.",this.processNewTexts()}tryRandomExamples(){const r=[{query:"How fast do cheetahs run?",doc:"Cheetahs can reach speeds of up to 70 mph, making them the fastest land animal."},{query:"What is photosynthesis?",doc:"Photosynthesis is the process by which plants convert sunlight into chemical energy using chlorophyll."},{query:"When was the internet invented?",doc:"The internet was developed in the late 1960s as ARPANET, becoming widely available in the 1990s."},{query:"What causes ocean tides?",doc:"Ocean tides are caused by the gravitational pull of the moon and sun on Earth's oceans."}],t=r[Math.floor(Math.random()*r.length)];this.queryInput.value=t.query,this.documentInput.value=t.doc,this.processNewTexts()}updateComparisonPanel(){const r=this.fdeProcessor.calculateSimilarity(this.queryData.fdeVector,this.docData.fdeVector);if(ht("#similarity-score").text(r.toFixed(4)),this.queryEmbedding&&this.docEmbedding){const t=this.calculateCosineSimilarity(this.queryEmbedding,this.docEmbedding);ht("#embedding-similarity").text(`${t.toFixed(4)} (768D semantic)`),ht("#performance-comparison").text(`Hash: ${r.toFixed(4)} | Semantic: ${t.toFixed(4)}`)}else ht("#embedding-similarity").text("Not loaded"),ht("#performance-comparison").text(`Hash: ${r.toFixed(4)} | Semantic: N/A`)}calculateCosineSimilarity(r,t){let s=0,n=0,i=0;for(let o=0;o<r.length;o++)s+=r[o]*t[o],n+=r[o]*r[o],i+=t[o]*t[o];return s/(Math.sqrt(n)*Math.sqrt(i))}clearAllAnimations(){this.semanticSvg.selectAll("*").remove(),this.fdeSvg.selectAll("*").remove(),this.bottomSvg.selectAll("*").remove(),this.semanticSvgDoc.selectAll("*").remove(),this.fdeSvgDoc.selectAll("*").remove(),this.bottomSvgDoc.selectAll("*").remove(),this.allTokenPositions=[],this.highlightedSectors.clear(),this.state.step=0}setupInitialView(r){const t=r==="query"?this.semanticSvg:this.semanticSvgDoc,s=r==="query"?this.queryTextDiv:this.queryTextDivDoc,n=r==="query"?this.queryText:this.docText,i=r==="query"?this.queryHyperplanes:this.documentHyperplanes;t.selectAll("*").remove(),t.attr("width",400).attr("height",400),this.addCoordinateSystem(t,r),this.addHyperplanes(t,i,r),this.addSectorNumbers(t,i),s.text(n),console.log(`✅ ${r} view initialized`)}setupDocumentView(){this.setupInitialView("document")}addCoordinateSystem(r,t){r.append("defs").append("marker").attr("id",t==="query"?"arrowhead":"arrowhead-doc").attr("viewBox","-10 -5 10 10").attr("refX",-5).attr("refY",0).attr("markerWidth",6).attr("markerHeight",6).attr("orient","auto").append("path").attr("d","M -10,-5 L 0 ,0 L -10,5").attr("fill","#666"),r.append("line").attr("x1",88).attr("y1",200).attr("x2",312).attr("y2",200).style("stroke","#666").style("stroke-width",2).attr("marker-end",t==="query"?"url(#arrowhead)":"url(#arrowhead-doc)"),r.append("line").attr("x1",200).attr("y1",312).attr("x2",200).attr("y2",88).style("stroke","#666").style("stroke-width",2).attr("marker-end",t==="query"?"url(#arrowhead)":"url(#arrowhead-doc)")}addHyperplanes(r,t,s){t.forEach((n,i)=>{const o=200-Math.cos(n)*140,a=200-Math.sin(n)*140,l=200+Math.cos(n)*140,c=200+Math.sin(n)*140;r.append("line").attr("id",`hyperplane-${s}-${i}`).attr("x1",o).attr("y1",a).attr("x2",l).attr("y2",c).style("stroke","#999").style("stroke-width",2).style("opacity",.7)})}addSectorNumbers(r,t){const s=Math.pow(2,t.length);for(let n=0;n<s;n++){const i=n*2*Math.PI/s+Math.PI/s,o=60,a=200+Math.cos(i)*o,l=200-Math.sin(i)*o;r.append("text").attr("id",`sector-${n}`).attr("x",a).attr("y",l).attr("text-anchor","middle").attr("dominant-baseline","central").style("font-size","16px").style("font-weight","bold").style("fill","#666").text(n)}}setupPauseButton(){const r=ht("#pause-btn");r.on("click",()=>{this.state.isPaused=!this.state.isPaused,r.text(this.state.isPaused?"▶":"⏸"),this.state.isPaused||this.continueAnimation()})}startAnimation(){this.state.isRunning=!0,this.state.step=0,this.animateStep()}continueAnimation(){this.state.isRunning&&!this.state.isPaused&&setTimeout(()=>this.animateStep(),100)}animateStep(){this.state.isPaused||!this.state.isRunning||(this.animateQueryStep(),this.animateDocumentStep(),this.state.step++,this.state.step<50&&setTimeout(()=>this.animateStep(),2e3))}animateQueryStep(){const r=this.queryData.words;this.state.step<r.length&&this.addAnimatedToken(this.semanticSvg,r[this.state.step],this.state.step,"query")}animateDocumentStep(){const r=this.docData.words;this.state.step<r.length&&this.addAnimatedToken(this.semanticSvgDoc,r[this.state.step],this.state.step,"document")}setupCollapsibleMathSection(){const r=ht("#math-toggle"),t=ht("#math-content"),s=r.select("span");r.on("click",()=>{const n=t.style("display")==="block";t.style("display",n?"none":"block"),s.text(n?"▼":"▲")})}async handleFileUpload(){const r=this.documentFilesInput.files;if(!r||r.length===0)return;console.log(`📁 Processing ${r.length} uploaded files...`);const t=ht("#file-status");t.style("display","block").text(`Processing ${r.length} files...`);const s=[];for(let n=0;n<r.length;n++){const o=await r[n].text();s.push(o.trim())}this.documentCollectionTextarea.value=s.join(`
`),t.text(`✅ Loaded ${r.length} files (${s.length} documents)`),console.log(`✅ Loaded ${s.length} documents from files`)}loadDefaultDocuments(){console.log("📚 Loading default documents...");const r=["Mount Everest is 8,848 meters high, making it the tallest mountain on Earth.","The Pacific Ocean is the largest ocean, covering about one-third of Earth's surface.","Photosynthesis is the process by which plants convert sunlight into chemical energy.","The speed of light in a vacuum is approximately 299,792,458 meters per second.","DNA contains the genetic instructions for all living organisms.","The Great Wall of China stretches over 13,000 miles across northern China.","The human brain contains approximately 86 billion neurons.","Water covers about 71% of Earth's surface.","The Amazon rainforest produces about 20% of the world's oxygen.","Quantum mechanics describes the behavior of matter at the atomic scale."];this.documentCollectionTextarea.value=r.join(`
`),ht("#file-status").style("display","block").text("✅ Loaded 10 default documents"),this.modelLoaded&&setTimeout(()=>{this.processDocumentCollection()},500)}clearAllDocuments(){this.documentCollectionTextarea.value="",this.documentFilesInput.value="",ht("#file-status").style("display","none"),this.clearDocumentCollection()}updatePerformanceMetrics(r){const t=ht("#performance-metrics pre"),s=`
🔧 Model Loading Performance:
   • EmbeddingGemma load time: ${(r/1e3).toFixed(2)}s
   • Model size: ~160MB (ONNX format)
   • Embedding dimension: 768D
   • Parameters: 308M
   • Device: ${this.productionEmbeddingGemma?"WebGPU/WASM":"Fallback"}

📊 Processing Performance:
   • Documents processed: ${this.processedDocumentsCount}
   • Total embeddings: ${this.documentEmbeddings.length}
   • Average processing time: ~1s per document
   • Memory usage: ~200MB

🎯 Algorithm Efficiency:
   • Latency reduction: Up to 90% (MuVeRa FDE)
   • Recall maintenance: >95% quality
   • Compression ratio: 768D → Fixed FDE size
   • Search complexity: O(1) vs O(n)
    `.trim();t.text(s)}updateFDECalculations(){const r=ht("#fde-calculations pre");if(!this.queryData||!this.docData){r.text("Waiting for document processing...");return}const t=this.queryData.fdeVector,s=this.docData.fdeVector,n=this.fdeProcessor.calculateSimilarity(t,s),i=`
📊 MULTI-VECTOR TO FDE TRANSFORMATION:

1. Input Processing:
   Query: "${this.queryText.substring(0,50)}..."
   Document: "${this.docText.substring(0,50)}..."

2. Multi-Vector Generation:
   Query tokens: ${this.queryText.split(" ").length} words → ${this.queryText.split(" ").length} vectors
   Document tokens: ${this.docText.split(" ").length} words → ${this.docText.split(" ").length} vectors

3. FDE Encoding:
   Query FDE: [${t.map(o=>o.toFixed(3)).join(", ")}]
   Doc FDE: [${s.map(o=>o.toFixed(3)).join(", ")}]

4. Similarity Computation:
   Dot product: ${t.map((o,a)=>o*s[a]).reduce((o,a)=>o+a,0).toFixed(4)}
   Query norm: ${Math.sqrt(t.map(o=>o*o).reduce((o,a)=>o+a,0)).toFixed(4)}
   Doc norm: ${Math.sqrt(s.map(o=>o*o).reduce((o,a)=>o+a,0)).toFixed(4)}
   Cosine similarity: ${n.toFixed(4)}

5. Compression Analysis:
   Original dimensions: ${(this.queryText.split(" ").length+this.docText.split(" ").length)*768}
   FDE dimensions: ${t.length*2}
   Compression ratio: ${((this.queryText.split(" ").length+this.docText.split(" ").length)*768/(t.length*2)).toFixed(1)}x
    `.trim();r.text(i)}addAnimatedToken(r,t,s,n){const i=s*2*Math.PI/8+Math.PI/8,o=80+s%3*20,a=200+Math.cos(i)*o,l=200-Math.sin(i)*o,c=this.colors[s%this.colors.length];r.append("circle").attr("cx",a).attr("cy",l).attr("r",0).style("fill",c).style("opacity",.7).transition().duration(1e3).attr("r",15),r.append("text").attr("x",a).attr("y",l).attr("text-anchor","middle").attr("dominant-baseline","central").style("font-size","10px").style("font-weight","bold").style("fill","white").style("opacity",0).text(t.substring(0,3)).transition().delay(500).duration(500).style("opacity",1)}}document.addEventListener("DOMContentLoaded",()=>{console.log("🎬 Starting MuVeRa Animation + EmbeddingGemma..."),new GC});
//# sourceMappingURL=index-Bq3cLIRh.js.map
